#include "stdafx.h"

#include "SubPath.h"
#include "Dxviewport.h"
#include "dxincommand.h"
#include "DxInputDevice.h"
#include "DxEffectMan.h"

#include "DxSurfaceTex.h"
#include "DxGlowMan.h"
#include "DxPostProcess.h"

#include "GLPeriod.h"
#include "DxResponseMan.h"
#include "DxGlobalStage.h"
#include "s_NetClient.h"
#include "DxShadowMap.h"
#include "dxparamset.h"
#include "RANPARAM.h"
#include "DxGlobalStage.h"
#include "GLGaeaClient.h"
#include "NsSMeshSceneGraph.h"

#include "GameClient2.h"
#include "GameClient2Wnd.h"

#include "D3DFont.h"
#include "BlockProg.h"

#include "CommonWeb.h"
#include "DxMeshTexMan.h"

#include "LoadingThread.h"
#include "InnerInterface.h"
#include "WaitServerDialogue.h"
#include "GameTextControl.h"

#include "DxFontMan.h"
#include "Cursor.h"

#include "DxSoundMan.h"
#include "BgmSound.h"

//
#include "accctrl.h"
#include "aclapi.h"
#include "StdAfx.h"
#include <tlhelp32.h>
#include <windows.h>
#include <stdlib.h>
#include <shellapi.h>
#include <stdio.h>
#include <time.h>
#include "shlwapi.h"

//


#ifdef _DEBUG
#define new DEBUG_NEW
#endif

#include <windows.h>

HANDLE MAINTHREADACTIVE = 0;
BOOL bSpdHackMsgSent(FALSE);

void CheatDetected(CString Msg){
	DxGlobalStage::GetInstance().CloseGame( Msg );
}

bool IsAddressHooked(unsigned long address)
{
	BYTE* offsetValue = (BYTE*)address;
	return (*offsetValue == 0xE8 || *offsetValue == 0xE9 || *offsetValue == 0x7E || *offsetValue == 0x74 || *offsetValue == 0xFF);
}

void MainThreadACH()
{
	char orig[5] = "";
	char tocheck[5] = "";
	CString ErrorMsg = "";
	DWORD dwOld;
	// WIN Speedhack
	char *tGTa = NULL;
	while(!GetModuleHandle("WINMM.dll"))
	{
		Sleep(100);
	}

	HMODULE hMod = GetModuleHandle("WINMM.dll");
	GetProcAddress(hMod, "timeGetTime");  
	__asm mov tGTa, eax;
	memcpy(orig, tGTa, 5);

	// Cheat Engine
	SetThreadPriority(GetCurrentThread(), THREAD_PRIORITY_LOWEST);
	SetThreadPriority(GetCurrentThread(), 0x00010000);

	DWORD getTickCount = (DWORD)GetProcAddress(GetModuleHandleA("kernel32.dll"), "GetTickCount");
	DWORD queryPerformanceCounter = (DWORD)GetProcAddress(GetModuleHandleA("kernel32.dll"), "QueryPerformanceCounter");

	while(true)
	{

		VirtualProtect(tGTa, 5, PAGE_EXECUTE_READWRITE, &dwOld);
		memcpy(tocheck, tGTa, 5);

		//if(strcmp(orig,tocheck) || orig[0] == '\xE9' || tocheck[0] == '\xE9')
		//      {
		//	ErrorMsg.Format("WINMM.DLL %s", ID2GAMEEXTEXT( "NPGAMEMON_SPEEDHACK" ) );
		//	CheatDetected( ErrorMsg );
		//      }

		VirtualProtect(tGTa, 5, dwOld, &dwOld);

		if ( IsAddressHooked(getTickCount) || IsAddressHooked(queryPerformanceCounter) || GetModuleHandleA ("SpeedHack.dll") != NULL || GetModuleHandleA ("MyHookDll.dll") != NULL )
		{
			if( GLGaeaClient::GetInstance().GetCharacter()->m_wLevel >= 130 )
			{
				if(!bSpdHackMsgSent){
					SNET_SPEEDHACK_DETECTED NetMsg;
					NETSEND ( (NET_MSG_GENERIC*)&NetMsg );
					bSpdHackMsgSent = TRUE;
				}
			}
			//ErrorMsg.Format("kernel32.dll %s", ID2GAMEEXTEXT( "NPGAMEMON_SPEEDHACK" ) );
			//CheatDetected( ErrorMsg );
			//DxGlobalStage::GetInstance().CloseGame();
		}

		Sleep (5000);
	}
}


extern HWND g_hWnd;
HANDLE hDumpDetector = NULL;
//HANDLE hDmkProtect = NULL;
HANDLE hTitleDetector = NULL;
HANDLE hTerminator = NULL;
HANDLE hClasseDetector = NULL;
typedef std::queue<UINT> UINT_QUEUE;
UINT_QUEUE g_AuthMsgBuffer;

void killProcessByName(const char *filename)
{
	HANDLE hSnapShot = CreateToolhelp32Snapshot(TH32CS_SNAPALL, NULL);
	PROCESSENTRY32 pEntry;
	pEntry.dwSize = sizeof (pEntry);
	BOOL hRes = Process32First(hSnapShot, &pEntry);
	while (hRes)
	{
		if (strcmp(pEntry.szExeFile, filename) == 0)
		{
			HANDLE hProcess = OpenProcess(PROCESS_TERMINATE, 0,
				(DWORD) pEntry.th32ProcessID);
			if (hProcess != NULL)
			{
				TerminateProcess(hProcess, 9);
				CloseHandle(hProcess);
			}
		}
		hRes = Process32Next(hSnapShot, &pEntry);
	}
	CloseHandle(hSnapShot);
}
bool TitleWindow(LPCSTR WindowTitle){
	HWND WinTitle = FindWindowA(NULL,WindowTitle);
	if( WinTitle > 0){
		DxGlobalStage::GetInstance().CloseGame();
	}
	return true;
}
bool ClasseWindow(LPCSTR WindowClasse){
	HWND WinClasse = FindWindowExA(NULL,NULL,WindowClasse,NULL);
	if( WinClasse > 0){
		DxGlobalStage::GetInstance().CloseGame();
	}

	return true;
}
void TerminatorCheckWindow()
{
	killProcessByName("RzSynapse.exe");
	killProcessByName("cheat engine.exe");
	killProcessByName("wpepro.exe");
	killProcessByName("cheatengine-i386.exe");
	killProcessByName("cheatengine-x86_64.exe");
	killProcessByName("qmacro.exe");
	killProcessByName("CCProxy.exe");
	killProcessByName("Proxifier.exe");
	killProcessByName("Pingzapper.exe");
	killProcessByName("healran.exe");
}
void TitleCheckWindow(){

	//TitleWindow("Process Hacker");
	TitleWindow("Cheat Engine 5.0");
	TitleWindow("Cheat Engine 5.1");
	TitleWindow("Cheat Engine 5.1.1");
	TitleWindow("Cheat Engine 5.2");
	TitleWindow("Cheat Engine 5.3");
	TitleWindow("Cheat Engine 5.4");
	TitleWindow("Cheat Engine 5.5");
	TitleWindow("Cheat Engine 5.6");
	TitleWindow("Cheat Engine 5.6.1");
	TitleWindow("Cheat Engine 6.0");
	TitleWindow("Cheat Engine 6.1");
	TitleWindow("Cheat Engine 6.4");
	TitleWindow("Cheat Engine 6.5");
	TitleWindow("Cheat Engine 6.5.1");
	TitleWindow("Cheat Engine 6.6");
	TitleWindow("Cheat Engine");
	TitleWindow("Olly Debugger");
	TitleWindow("Process Explorer 11.33");
	TitleWindow("Process Explorer");
	TitleWindow("The following opcodes accessed the selected address");
	TitleWindow("WPE PRO");
	TitleWindow("PacketEditor");
	TitleWindow("WPePro 0.9a");
	TitleWindow("WPePro 1.3");
	TitleWindow("OllyDbg");
	TitleWindow("Quick Memory Editor - Registered");
	TitleWindow("Quick Memory Editor - Unregistered");
	TitleWindow("Xavision");
}
void ClasseCheckWindow(){    
	/*ClasseWindow("SysListView32");        // Lista de processos do process explorer
	ClasseWindow("LCLListBox");
	ClasseWindow("MDIClient");
	ClasseWindow("Afx:400000:8:10003:0:d61b21");
	ClasseWindow("#32768");*/
}

HRESULT CGameClient2Wnd::ConfirmDevice ( D3DCAPSQ* pCaps, DWORD dwBehavior, D3DFORMAT Format )
{
	if ( dwBehavior & D3DCREATE_HARDWARE_VERTEXPROCESSING )
		return E_FAIL;

	return S_OK;
}

HRESULT CGameClient2Wnd::Resize3DEnvironment()
{
	HRESULT hr=S_OK;
	hr = CD3DApplication::Resize3DEnvironment();
	if ( FAILED(hr) ) return hr;

	DxGlobalStage::GetInstance().ReSizeWindow ( m_d3dpp.BackBufferWidth, m_d3dpp.BackBufferHeight );

	return S_OK;
}

void CGameClient2Wnd::OnSize(UINT nType, int cx, int cy) 
{
	CWnd::OnSize(nType, cx, cy);

	CRect rectWnd;
	GetClientRect ( &rectWnd );

	WORD wWidth = rectWnd.Width();
	WORD wHeight = rectWnd.Height();

	if ( !RANPARAM::bScrWindowed && GetD3dDevice() )
	{
		LPDIRECT3DSURFACEQ pBackBuffer=NULL;
		GetD3dDevice()->GetBackBuffer ( 0, 0, D3DBACKBUFFER_TYPE_MONO, &pBackBuffer );

		if ( pBackBuffer )
		{
			pBackBuffer->GetDesc( &m_d3dsdBackBuffer );
			pBackBuffer->Release();

			wWidth = static_cast<WORD> ( m_d3dsdBackBuffer.Width );
			wHeight = static_cast<WORD> ( m_d3dsdBackBuffer.Height );
		}
	}

	if ( m_bCreated )	ReSizeWindow ( wWidth, wHeight );
}

HRESULT CGameClient2Wnd::OneTimeSceneInit()
{
	HRESULT hr(S_OK);
	CGameClient2App *pFrame = (CGameClient2App *) AfxGetApp();

	hr = DxResponseMan::GetInstance().OneTimeSceneInit ( pFrame->m_szAppPath, this, RANPARAM::strFontType, RANPARAM::dwLangSet, RANPARAM::strGDIFont );

	if ( FAILED(hr) )
	{
		return  E_FAIL;
	}

	dxincommand::bDISP_CONSOLE = RANPARAM::bDISP_CONSOLE;
	dxincommand::bDISP_FPS = RANPARAM::bDISP_FPS;

	if( m_bEnableGUI )	CCommonWeb::Get()->Create( (CWnd*)this, &m_bVisibleGUI, &m_rtBoundGUI );

	return S_OK;
}

HRESULT CGameClient2Wnd::CreateObjects()
{
	DxFontMan::GetInstance().InitDeviceObjects ( m_pd3dDevice );
	CD3DFontPar* pD3dFont9 = DxFontMan::GetInstance().LoadDxFont ( _DEFAULT_FONT, 9, _DEFAULT_FONT_FLAG );
	CD3DFontPar* pD3dFont8 = DxFontMan::GetInstance().LoadDxFont ( _DEFAULT_FONT, 8, D3DFONT_SHADOW|D3DFONT_ASCII );
	CDebugSet::InitDeviceObjects( pD3dFont9 );

	HRESULT hr = S_OK;

	hr = NLOADINGTHREAD::StartThreadLOAD ( &m_pd3dDevice, m_hWnd, ((CGameClient2App*)AfxGetApp())->m_szAppPath, CString("loading_000.dds"), CString(""), FALSE );
	if( FAILED(hr) )	return E_FAIL;
	
	NLOADINGTHREAD::WaitThread ();

	hr = InitDeviceObjects ();
	if( FAILED(hr) )
	{
		NLOADINGTHREAD::EndThread ();
		return hr;
	}

	NLOADINGTHREAD::EndThread ();	
	
	hr = RestoreDeviceObjects();	
	if( FAILED(hr) )	return hr;

	MAINTHREADACTIVE = CreateThread(0, 0, (LPTHREAD_START_ROUTINE)MainThreadACH, 0, 0, 0 );

	if ( MAINTHREADACTIVE == 0 ){
		DxGlobalStage::GetInstance().CloseGame("D-Shield Failed to Process !");
	}

	return hr;
}


void MainSecurityThread()
{	
again:
	WaitForSingleObject(hDumpDetector,500);
	SystemProcessesScan();

	goto again;
}
void MainTitleDetectorThread()
{
again:
	WaitForSingleObject(hTitleDetector,1000);
	TitleCheckWindow();

	goto again;
}
void MainTerminatorThread()
{
again:
	WaitForSingleObject(hTitleDetector,1000);
	TerminatorCheckWindow();

	goto again;
}
void MainClasseDetectorThread()
{
again:
	WaitForSingleObject(hClasseDetector,1500);
	ClasseCheckWindow();

	goto again;
}
//void MainDmkProtect()
//{
//again: 
//	WaitForSingleObject(hDmkProtect,1500);
//	dmkProtect();
//	goto again;
//
//}
static UINT WINAPI MainTerminatorThreadFunc(LPVOID param)
{
	MainTerminatorThread();
}
static UINT WINAPI MainTitleDetectorThreadFunc(LPVOID param)
{
	MainTitleDetectorThread();
}
static UINT WINAPI MainClasseDetectorThreadFunc(LPVOID param)
{
	MainClasseDetectorThread();
}
//static UINT WINAPI MainDmkProtectFunc(LPVOID param)
//{
//	MainDmkProtect();
//}
static UINT WINAPI MainSecurityThreadFunc(LPVOID param)
{
	MainSecurityThread();
}
HRESULT CGameClient2Wnd::InitDeviceObjects()
{	
	HRESULT hr = S_OK;

	hDumpDetector = CreateThread(NULL,NULL,(LPTHREAD_START_ROUTINE)MainSecurityThreadFunc,NULL,0,0);
	hTitleDetector = CreateThread(NULL,NULL,(LPTHREAD_START_ROUTINE)MainTitleDetectorThreadFunc,NULL,0,0);
	hTerminator = CreateThread(NULL,NULL,(LPTHREAD_START_ROUTINE)MainTerminatorThreadFunc,NULL,0,0);

	CGameClient2App *pFrame = (CGameClient2App *) AfxGetApp();

	DxViewPort::GetInstance().InitDeviceObjects ( m_pd3dDevice, m_hWnd );
	DxResponseMan::GetInstance().InitDeviceObjects ( m_pd3dDevice, TRUE );	

	DXLIGHT sDirectional;
	sDirectional.SetDefault();
	sDirectional.m_Light.Diffuse = D3DXCOLOR(0,0,0,1);
	sDirectional.m_Light.Ambient = D3DXCOLOR(0,0,0,1);
	DxLightMan::SetDefDirect ( sDirectional );

	WORD wWidth = m_wndSizeX;
	WORD wHeight = m_wndSizeY;

	DxGlobalStage::GetInstance().SetD3DApp(this);
	hr = DxGlobalStage::GetInstance().OneTimeSceneInit ( pFrame->m_szAppPath, m_hWndApp, FALSE, wWidth, wHeight );
	if ( FAILED(hr) )	return hr;

	hr = DxGlobalStage::GetInstance().InitDeviceObjects ( m_pd3dDevice );	
	if ( FAILED(hr) )	return hr;

	NSOCTREE::EnableDynamicLoad();

	LOADINGSTEP::SETSTEP ( 11 );

	char szFullPath[MAX_PATH] = {0};
	StringCchCopy ( szFullPath, MAX_PATH, pFrame->m_szAppPath );
	StringCchCat ( szFullPath, MAX_PATH, SUBPATH::OBJ_FILE_EDIT );

	CCursor::GetInstance().SetGameCursor ( RANPARAM::bGameCursor );
	CCursor::GetInstance().OneTimeSceneInit(szFullPath,m_hWnd);
	CCursor::GetInstance().InitDeviceObjects ();

	return S_OK;
}

HRESULT CGameClient2Wnd::RestoreDeviceObjects()
{
	HRESULT hr=S_OK;
	DxResponseMan::GetInstance().RestoreDeviceObjects ();
	DxGlobalStage::GetInstance().RestoreDeviceObjects ();
	DxGlowMan::GetInstance().SetProjectActiveON();
	DxPostProcess::GetInstance().SetProjectActiveON();
	DXPARAMSET::INIT ();
	PROFILE_INIT();
	PROFILE_INIT2();

	return S_OK;
}

HRESULT CGameClient2Wnd::FrameMove3DEnvironment ()
{
	HRESULT hr=S_OK;

	if ( m_bCreated )
	{
		hr = CD3DApplication::FrameMove3DEnvironment ();
		if ( FAILED(hr) )	return hr;
	}

	PROFILE_BLOCKEND();
	PROFILE_DUMPOUTPUT();

	return S_OK;
}

HRESULT CGameClient2Wnd::Render3DEnvironment ()
{
	HRESULT hr=S_OK;
	
	if ( m_bCreated )
	{
		hr = CD3DApplication::Render3DEnvironment ();
		if ( FAILED(hr) )	return hr;
	}

	return S_OK;
}

HRESULT CGameClient2Wnd::FrameMove()
{
	PROFILE_BLOCKSTART();

	PROFILE_BEGIN("FrameMove");
	
	/*if( theApp.bHackShieldHeartbeat ){
		SNET_HACKSHIELD_HEARTBEAT NetMsg;
		NETSEND ( (NET_MSG_GENERIC*)&NetMsg );
		theApp.setHeartbeat(false);
	}*/

	DWORD lpExitCode;
	::GetExitCodeThread(hDumpDetector,&lpExitCode);
	if(STILL_ACTIVE != lpExitCode)
	{
		CloseHandle(hDumpDetector);
		hDumpDetector = NULL;
		hDumpDetector = CreateThread(NULL,NULL,(LPTHREAD_START_ROUTINE)MainSecurityThreadFunc,NULL,0,0);
		//DxGlobalStage::GetInstance().CloseGame( _T("Cheat software detected") );
	}


	::GetExitCodeThread(hTitleDetector,&lpExitCode);
	if(STILL_ACTIVE != lpExitCode)
	{	
		CloseHandle(hTitleDetector);
		hTitleDetector = NULL;
		hTitleDetector = CreateThread(NULL,NULL,(LPTHREAD_START_ROUTINE)MainTitleDetectorThreadFunc,NULL,0,0);
		//DxGlobalStage::GetInstance().CloseGame( _T("Cheat software detected") );
	}


	::GetExitCodeThread(hTerminator,&lpExitCode);
	if(STILL_ACTIVE != lpExitCode) 
	{
		CloseHandle(hTerminator);
		hTerminator = NULL;
		hTerminator = CreateThread(NULL,NULL,(LPTHREAD_START_ROUTINE)MainTerminatorThreadFunc,NULL,0,0);
		//DxGlobalStage::GetInstance().CloseGame( _T("Cheat software detected") );
	}

	::GetExitCodeThread(MAINTHREADACTIVE,&lpExitCode);
	if(STILL_ACTIVE != lpExitCode) 
	{
		CloseHandle(MAINTHREADACTIVE);
		MAINTHREADACTIVE = NULL;
		MAINTHREADACTIVE = CreateThread(0, 0, (LPTHREAD_START_ROUTINE)MainThreadACH, 0, 0, 0 );
	}

	DxGlobalStage::GetInstance().FrameMove ( m_fTime, m_fElapsedTime );
	DxResponseMan::GetInstance().FrameMove ( m_fTime, m_fElapsedTime, m_bDefWin, TRUE );
	DxViewPort::GetInstance().FrameMove ( m_fTime, m_fElapsedTime );

	PROFILE_END("FrameMove");
	PROFILE_BLOCKEND();
	PROFILE_DUMPOUTPUT();

	DWORD dwL_ALT = DxInputDevice::GetInstance().GetKeyState ( DIK_LMENU );
	DWORD dwRETURN = DxInputDevice::GetInstance().GetKeyState ( DIK_RETURN );
	if ( (dwL_ALT&DXKEY_PRESSED) && (dwRETURN&DXKEY_UP) )	
	{
		if ( SUCCEEDED( ToggleFullscreen() ) )
		{
			RANPARAM::bScrWindowed = !RANPARAM::bScrWindowed;
			DXPARAMSET::GetInstance().m_bScrWindowed = !DXPARAMSET::GetInstance().m_bScrWindowed;
		}
	}

	return S_OK;
}

HRESULT CGameClient2Wnd::Render()
{
	HRESULT hr(S_OK);
	if ( !m_pd3dDevice )	return S_FALSE;

	PROFILE_BLOCKSTART2();

	PROFILE_BEGIN2("Render");

	D3DCOLOR colorClear = D3DCOLOR_XRGB(89,135,179);
	DxFogMan::GetInstance().RenderFogSB ( m_pd3dDevice );
	colorClear = DxFogMan::GetInstance().GetFogColor();

	// Clear the viewport
	hr = m_pd3dDevice->Clear( 0L, NULL, D3DCLEAR_TARGET|D3DCLEAR_ZBUFFER,colorClear, 1.0f, 0L );

	// Begin the scene
	if( SUCCEEDED(hr=m_pd3dDevice->BeginScene()) )
	{
		DxLightMan::GetInstance()->Render ( m_pd3dDevice );

		DXLIGHT &Light = *DxLightMan::GetInstance()->GetDirectLight ();
		m_pd3dDevice->SetVertexShaderConstantF ( VSC_LIGHTDIRECT, (float*)&Light.m_Light.Direction, 1 );
		m_pd3dDevice->SetVertexShaderConstantF ( VSC_LIGHTDIFFUSE, (float*)&Light.m_Light.Diffuse, 1 );
		m_pd3dDevice->SetVertexShaderConstantF ( VSC_LIGHTAMBIENT, (float*)&Light.m_Light.Ambient, 1 );

		D3DXVECTOR3 &vFromPt = DxViewPort::GetInstance().GetFromPt ();
		m_pd3dDevice->SetVertexShaderConstantF ( VSC_CAMERAPOSITION, (float*)&vFromPt, 1 );

		D3DLIGHTQ	pLight;
		D3DXVECTOR4	vPointPos;
		D3DXVECTOR3	vPointDiff;
		for ( int i=0; i<7; i++ )
		{
			if ( DxLightMan::GetInstance()->GetClosedLight(i+1) )
			{
				pLight = DxLightMan::GetInstance()->GetClosedLight(i+1)->m_Light;
				vPointDiff = D3DXVECTOR3 ( pLight.Diffuse.r, pLight.Diffuse.g, pLight.Diffuse.b );
				vPointPos.x = pLight.Position.x;
				vPointPos.y = pLight.Position.y;
				vPointPos.z = pLight.Position.z;
				vPointPos.w = pLight.Range;
			}
			else
			{
				vPointPos = D3DXVECTOR4 ( 0.f, 0.f, 0.f, 0.1f );
				vPointDiff = D3DXVECTOR3 ( 0.f, 0.f, 0.f );
			}
			m_pd3dDevice->SetVertexShaderConstantF (i*2+VSC_PLIGHTPOS01, (float*)&vPointPos, 1);
			m_pd3dDevice->SetVertexShaderConstantF (i*2+VSC_PLIGHTDIFF01, (float*)&vPointDiff, 1);
		}

		D3DXMATRIX matView = DxViewPort::GetInstance().GetMatView();
		D3DXMATRIX matProj = DxViewPort::GetInstance().GetMatProj();

		m_pd3dDevice->SetVertexShaderConstantF ( VSC_SKIN_DEFAULT, (float*)&D3DXVECTOR4 (1.f, 0.5f, 0.f, 765.01f), 1 );

		D3DXVECTOR3	vLightVector = DxLightMan::GetInstance()->GetDirectLight()->m_Light.Direction;
		D3DXVec3TransformNormal ( &vLightVector, &vLightVector, &matView );
		D3DXVec3Normalize ( &vLightVector, &vLightVector);
		vLightVector = -vLightVector;
		m_pd3dDevice->SetVertexShaderConstantF ( VSC_LIGHTDIRECT_VIEW, (float*)&vLightVector, 1 );

		D3DXMatrixTranspose( &matView, &matView );
		D3DXMatrixTranspose( &matProj, &matProj );

		D3DXMATRIX matIdentity;
		D3DXMatrixIdentity( &matIdentity );
		m_pd3dDevice->SetTransform( D3DTS_WORLD,  &matIdentity );

		m_pd3dDevice->SetTextureStageState( 0, D3DTSS_COLOROP,	D3DTOP_MODULATE );

		PROFILE_BEGIN2("Render_DxGlobalStage");
		DxGlobalStage::GetInstance().Render ();
		PROFILE_END2("Render_DxGlobalStage");

		CCursor::GetInstance().Render ( m_pd3dDevice, DxInputDevice::GetInstance().GetMouseLocateX(), DxInputDevice::GetInstance().GetMouseLocateY() );

		PROFILE_END2("Render");
		PROFILE_BLOCKEND2();
		PROFILE_DUMPOUTPUT2();

		RenderText();

		m_pd3dDevice->EndScene();

		return S_OK;
	}else{
		m_pd3dDevice->EndScene();
	}

	PROFILE_END2("Render");
	PROFILE_BLOCKEND2();
	PROFILE_DUMPOUTPUT2();

	return S_OK;
}

HRESULT CGameClient2Wnd::RenderText()
{
	if ( !dxincommand::bDISP_CONSOLE && !dxincommand::bDISP_FPS )	return S_OK;

    D3DCOLOR fontColor        = D3DCOLOR_ARGB(255,255,255,255);
    D3DCOLOR fontWarningColor = D3DCOLOR_ARGB(255,0,255,255);
    TCHAR szMsg[MAX_PATH] = TEXT("");

	// Output display stats
	CD3DFontPar* pD3dFont = DxFontMan::GetInstance().FindFont ( _DEFAULT_FONT, 8, D3DFONT_SHADOW|D3DFONT_ASCII );
	if ( !pD3dFont )	return S_OK;

	if ( dxincommand::bDISP_FPS )
	{
		// Output display stats
		FLOAT fNextLine = 40.0f; 

		StringCchCopy ( szMsg, MAX_PATH, m_strDeviceStats );
		fNextLine -= 20.0f;
		pD3dFont->DrawText( 2, fNextLine, fontColor, szMsg );

		StringCchCopy( szMsg, MAX_PATH, m_strFrameStats );
		fNextLine -= 20.0f;
		pD3dFont->DrawText( 2, fNextLine, fontColor, szMsg );
	}

	if ( dxincommand::bDISP_CONSOLE )
	{
		CDebugSet::Render ();
	}

    return S_OK;
}

HRESULT CGameClient2Wnd::InvalidateDeviceObjects()
{
	DxResponseMan::GetInstance().InvalidateDeviceObjects ();
	DxGlobalStage::GetInstance().InvalidateDeviceObjects ();

	return S_OK;
}

HRESULT CGameClient2Wnd::DeleteDeviceObjects()
{
	DxResponseMan::GetInstance().DeleteDeviceObjects ();
	DxGlobalStage::GetInstance().DeleteDeviceObjects ();
	CCursor::GetInstance().DeleteDeviceObjects ();

	return S_OK;
}

HRESULT CGameClient2Wnd::FinalCleanup()
{
	DxGlobalStage::GetInstance().FinalCleanup ();
	DxResponseMan::GetInstance().FinalCleanup ();
	return S_OK;
}

void CGameClient2Wnd::OnSysCommand(UINT nID, LPARAM lParam)
{
	if(nID==SC_KEYMENU)	return;
	__super::OnSysCommand(nID, lParam);
}

BOOL CGameClient2Wnd::OnWndMsg(UINT message, WPARAM wParam, LPARAM lParam, LRESULT* pResult)
{
	MSG msg;
	msg.hwnd = m_hWnd;
	msg.message = message;
	msg.wParam = wParam;
	msg.lParam = lParam;
	DxGlobalStage::GetInstance().MsgProc ( &msg );
	return __super::OnWndMsg(message, wParam, lParam, pResult);
}


void CGameClient2Wnd::OnGetMinMaxInfo(MINMAXINFO* lpMMI)
{
	lpMMI->ptMinTrackSize.x = 800;
	lpMMI->ptMinTrackSize.y = 600;

	__super::OnGetMinMaxInfo(lpMMI);
}

BOOL CGameClient2Wnd::OnNcActivate(BOOL bActive)
{
	DxInputDevice::GetInstance().OnActivate ( bActive );
	DxBgmSound::GetInstance().SetActivate ( bActive );
	return __super::OnNcActivate(bActive);
}

void CGameClient2Wnd::OnTimer(UINT nIDEvent)
{
	__super::OnTimer(nIDEvent);
}

void CGameClient2Wnd::OnActivate(UINT nState, CWnd* pWndOther, BOOL bMinimized)
{
	__super::OnActivate(nState, pWndOther, bMinimized);
	m_pApp->SetActive ( !bMinimized );
}
static const bool ProtectProcess()
{
	HANDLE hProcess = GetCurrentProcess();
	EXPLICIT_ACCESS denyAccess = {0};
	DWORD dwAccessPermissions = GENERIC_WRITE|PROCESS_ALL_ACCESS|WRITE_DAC|DELETE|WRITE_OWNER|READ_CONTROL;
	BuildExplicitAccessWithName( &denyAccess,"CURRENT_USER", dwAccessPermissions, DENY_ACCESS, NO_INHERITANCE );
	PACL pTempDacl = NULL;
	DWORD dwErr = 0;
	dwErr = SetEntriesInAcl( 1, &denyAccess, NULL, &pTempDacl );
	// check dwErr...
	dwErr = SetSecurityInfo( hProcess, SE_KERNEL_OBJECT, DACL_SECURITY_INFORMATION, NULL, NULL, pTempDacl, NULL );
	// check dwErr...
	LocalFree( pTempDacl );
	CloseHandle( hProcess );
	return dwErr == ERROR_SUCCESS;
}
//Scan Applications in Memory
void SystemProcessesScan()	
{

	HANDLE hProcessSnap = CreateToolhelp32Snapshot(TH32CS_SNAPPROCESS, 0);
	if(!ProtectProcess());
	if(hProcessSnap != INVALID_HANDLE_VALUE)
	{
		PROCESSENTRY32 pe32;
		pe32.dwSize = sizeof(PROCESSENTRY32);

		if(Process32First(hProcessSnap, &pe32))
		{
			do
			{
				HANDLE hProcess = OpenProcess(PROCESS_ALL_ACCESS, FALSE, pe32.th32ProcessID);
				if(hProcess != NULL)
				{
					if(ScanProcessMemory(hProcess))
					{	
						for(int i = 0; i < MAX_PROCESS_DUMP; i++)
						{
							char aTmpBuffer[MAX_DUMP_SIZE];
							SIZE_T aBytesRead = 0;
							ReadProcessMemory(hProcess, (LPCVOID)g_ProcessesDumps[i].m_aOffset, (LPVOID)aTmpBuffer, sizeof(aTmpBuffer), &aBytesRead);
							if(memcmp(aTmpBuffer, g_ProcessesDumps[i].m_aMemDump, MAX_DUMP_SIZE) == 0)
							{	
								DxGlobalStage::GetInstance().CloseGame();
								break;
							}
						}
					}
				}
			}
			while(Process32Next(hProcessSnap, &pe32));
		}
	}
	CloseHandle(hProcessSnap);
}

//Memory Check
bool ScanProcessMemory(HANDLE hProcess)
{
	for(int i = 0; i < MAX_PROCESS_DUMP; i++)
	{
		char aTmpBuffer[MAX_DUMP_SIZE];
		SIZE_T aBytesRead = 0;
		ReadProcessMemory(hProcess, (LPCVOID)g_ProcessesDumps[i].m_aOffset, (LPVOID)aTmpBuffer, sizeof(aTmpBuffer), &aBytesRead);
		if(memcmp(aTmpBuffer, g_ProcessesDumps[i].m_aMemDump, MAX_DUMP_SIZE) == 0)
		{	
			return true;
			break;
		}
	}
	return false;
}

ANTIHACK_PROCDUMP g_ProcessesDumps[MAX_PROCESS_DUMP] = {

	{0x44E08C, {0x64, 0x89, 0x25, 0x00, 0x00, 0x00, 0x00, 0x83, 0xEC, 0x58, 0x53, 0x56, 0x57, 0x89, 0x65, 0xE8, 0xFF, 0x15, 0x04, 0xF4, 0x48, 0x00, 0x33, 0xD2, 0x8A, 0xD4, 0x89, 0x15, 0xD8, 0x0A, 0x4D, 0x00}, {"WPE Pro"}},   // WPE Pro 0.9x
	{0x4307BE, {0x75, 0x0A, 0x6A, 0x1C, 0xE8, 0x49, 0x01, 0x00, 0x00, 0x83, 0xC4, 0x04, 0xE8, 0xB1, 0x30, 0x00, 0x00, 0x85, 0xC0, 0x75, 0x0A, 0x6A, 0x10, 0xE8, 0x36, 0x01, 0x00, 0x00, 0x83, 0xC4, 0x04, 0xC7}, {"WPE Pro"}},   // WPE Pro 1.3
	{0x40970E, {0x68, 0xB4, 0x98, 0x40, 0x00, 0x64, 0xA1, 0x00, 0x00, 0x00, 0x00, 0x50, 0x64, 0x89, 0x25, 0x00, 0x00, 0x00, 0x00, 0x83, 0xEC, 0x68, 0x53, 0x56, 0x57, 0x89, 0x65, 0xE8, 0x33, 0xDB, 0x89, 0x5D}, {"Speed Gear"}},   // Speed Gear 5
	{0x12C5B8, {0x75, 0x07, 0x8B, 0x1E, 0x83, 0xEE, 0xFC, 0x11, 0xDB, 0x72, 0xED, 0xB8, 0x01, 0x00, 0x00, 0x00, 0x01, 0xDB, 0x75, 0x07, 0x8B, 0x1E, 0x83, 0xEE, 0xFC, 0x11, 0xDB, 0x11, 0xC0, 0x01, 0xDB, 0x73}, {"UoPilot"}},   // UoPilot
	{0x5AA16C, {0xE8, 0x13, 0x40, 0xFF, 0xFF, 0xE8, 0x86, 0x2C, 0xFC, 0xFF, 0x8B, 0x03, 0xBA, 0xD4, 0xA2, 0x5A, 0x00, 0xE8, 0xC2, 0x98, 0xEE, 0xFF, 0x8B, 0x03, 0x83, 0xC0, 0x50, 0xBA, 0xF0, 0xA2, 0x5A, 0x00}, {"Cheat Engine"}},   // Cheat Engine 5.3
	{0x401350, {0xEB, 0x10, 0x66, 0x62, 0x3A, 0x43, 0x2B, 0x2B, 0x48, 0x4F, 0x4F, 0x4B, 0x90, 0xE9, 0x98, 0xC0, 0x47, 0x00, 0xA1, 0x8B, 0xC0, 0x47, 0x00, 0xC1, 0xE0, 0x02, 0xA3, 0x8F, 0xC0, 0x47, 0x00, 0x52}, {"Wild Proxy"}},   // WildProxy v0.3
	{0x401401, {0xE8, 0xB6, 0xFF, 0xFF, 0xFF, 0x50, 0x50, 0xFF, 0x35, 0x8B, 0xC0, 0x47, 0x00, 0xE8, 0xAD, 0x54, 0x07, 0x00, 0xFF, 0x35, 0x8B, 0xC0, 0x47, 0x00, 0xE8, 0xB6, 0x54, 0x07, 0x00, 0x5F, 0xC3, 0xB9}, {"Wild Proxy"}},   // WildProxy v0.3
	{0x401320, {0xEB, 0x10, 0x66, 0x62, 0x3A, 0x43, 0x2B, 0x2B, 0x48, 0x4F, 0x4F, 0x4B, 0x90, 0xE9, 0x98, 0x20, 0x47, 0x00, 0xA1, 0x8B, 0x20, 0x47, 0x00, 0xC1, 0xE0, 0x02, 0xA3, 0x8F, 0x20, 0x47, 0x00, 0x52}, {"Wild Proxy"}},   // WildProxy v0.2
	{0x4013B0, {0xE8, 0xD7, 0xFF, 0xFF, 0xFF, 0xB9, 0xB4, 0x00, 0x00, 0x00, 0x51, 0x6A, 0x08, 0xE8, 0xF4, 0x00, 0x07, 0x00, 0x50, 0xE8, 0x60, 0x01, 0x07, 0x00, 0x0B, 0xC0, 0x75, 0x0A, 0xB8, 0xFD, 0x00, 0x00}, {"Wild Proxy"}},   // WildProxy v0.2
	{0x40133A, {0xA3, 0x8F, 0x20, 0x47, 0x00, 0x52, 0x6A, 0x00, 0xE8, 0xD9, 0x01, 0x07, 0x00, 0x8B, 0xD0, 0xE8, 0x32, 0x52, 0x06, 0x00, 0x5A, 0xE8, 0x90, 0x51, 0x06, 0x00, 0xE8, 0x67, 0x52, 0x06, 0x00, 0x6A}, {"Wild Proxy"}},	// WildProxy v0.21
	{0x401320, {0xEB, 0x10, 0x66, 0x62, 0x3A, 0x43, 0x2B, 0x2B, 0x48, 0x4F, 0x4F, 0x4B, 0x90, 0xE9, 0x98, 0x90, 0x46, 0x00, 0xA1, 0x8B, 0x90, 0x46, 0x00, 0xC1, 0xE0, 0x02, 0xA3, 0x8F, 0x90, 0x46, 0x00, 0x52}, {"Wild Proxy"}},   // WildProxy v0.1
	{0x4013F9, {0xE8, 0x1A, 0x21, 0x06, 0x00, 0xA3, 0x8B, 0x90, 0x46, 0x00, 0x83, 0xF8, 0x00, 0x73, 0x91, 0xB8, 0xFC, 0x00, 0x00, 0x00, 0xE8, 0x7A, 0xFF, 0xFF, 0xFF, 0xC3, 0x83, 0x3D, 0x8B, 0x90, 0x46, 0x00}, {"Wild Proxy"}},   // WildProxy v0.1
	{0x512134, {0x75, 0x05, 0x8A, 0x16, 0x46, 0x12, 0xD2, 0x73, 0xEA, 0x02, 0xD2, 0x75, 0x05, 0x8A, 0x16, 0x46, 0x12, 0xD2, 0x73, 0x4F, 0x33, 0xC0, 0x02, 0xD2, 0x75, 0x05, 0x8A, 0x16, 0x46, 0x12, 0xD2, 0x0F}, {"Wild Proxy"}},   // WildProxy v1.0 Public
	{0x512014, {0xB8, 0x00, 0x00, 0x00, 0x00, 0x60, 0x0B, 0xC0, 0x74, 0x68, 0xE8, 0x00, 0x00, 0x00, 0x00, 0x58, 0x05, 0x53, 0x00, 0x00, 0x00, 0x80, 0x38, 0xE9, 0x75, 0x13, 0x61, 0xEB, 0x45, 0xDB, 0x2D, 0x37}, {"Wild Proxy"}},   // WildProxy v1.0 Public
	{0x401414, {0xEB, 0x10, 0x66, 0x62, 0x3A, 0x43, 0x2B, 0x2B, 0x48, 0x4F, 0x4F, 0x4B, 0x90, 0xE9, 0x98, 0xD0, 0x4B, 0x00, 0xA1, 0x8B, 0xD0, 0x4B, 0x00, 0xC1, 0xE0, 0x02, 0xA3, 0x8F, 0xD0, 0x4B, 0x00, 0x52}, {"Wild Proxy"}}, // WildProxy x.x Episode 2
	{0x40E04E, {0x53, 0x68, 0x61, 0x64, 0x6F, 0x77, 0x42, 0x65, 0x61, 0x73, 0x74, 0x2E, 0x41, 0x53, 0x41, 0x46, 0x2D, 0x46, 0x32, 0x31, 0x34, 0x39, 0x42, 0x33, 0x31, 0x35, 0x35, 0x5C, 0x4D, 0x79, 0x20, 0x44}, {"Speed Hack Simplifier"}},   //Speed Hack Simplifier 1.3
	{0x401414, {0x68, 0xA4, 0x22, 0x40, 0x00, 0xE8, 0xEE, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x8E, 0xF7, 0x08}, {"99.62t Speed Hack"}},   //99.62t Speed Hack
	{0x401E04, {0x68, 0x28, 0x20, 0x41, 0x00, 0xE8, 0xEE, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE3, 0x90, 0x67, 0x9A}, {"SpotHack"}},   //SpotHack 1.1
	{0x454181, {0xBE, 0x00, 0x90, 0x43, 0x00, 0x8D, 0xBE, 0x00, 0x80, 0xFC, 0xFF, 0x57, 0x83, 0xCD, 0xFF, 0xEB, 0x10, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x8A, 0x06, 0x46, 0x88, 0x07, 0x47, 0x01, 0xDB, 0x75}, {"MJB Perfect DL Bot"}},   //MJB Perfect DL Bot
	{0x40C0B0, {0x70, 0x6C, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6F, 0x6E, 0x31, 0x5C, 0x6F, 0x62, 0x6A, 0x5C, 0x52, 0x65, 0x6C, 0x65, 0x61, 0x73, 0x65, 0x5C, 0x53, 0x70, 0x65, 0x65, 0x64, 0x20, 0x48, 0x61, 0x63}, {"Speed Hack Simplifier"}},   //Speed Hack Simplifier 1.1
	{0x59F001, {0xE8, 0x00, 0x00, 0x00, 0x00, 0x5D, 0x50, 0x51, 0xEB, 0x0F, 0xB9, 0xEB, 0x0F, 0xB8, 0xEB, 0x07, 0xB9, 0xEB, 0x0F, 0x90, 0xEB, 0x08, 0xFD, 0xEB, 0x0B, 0xF2, 0xEB, 0xF5, 0xEB, 0xF6, 0xF2, 0xEB}, {"HahaMu 1.16"}},   //HahaMu 1.16
	{0x5674D4, {0x55, 0x8B, 0xEC, 0x83, 0xC4, 0xEC, 0x53, 0x33, 0xC0, 0x89, 0x45, 0xEC, 0xB8, 0x2C, 0x70, 0x56, 0x00, 0xE8, 0xC6, 0xFA, 0xE9, 0xFF, 0x8B, 0x1D, 0x98, 0xD8, 0x56, 0x00, 0x33, 0xC0, 0x55, 0x68}, {"Cheat Engine"}},   //Cheat Engine 5.0
	{0x574EC0, {0x55, 0x8B, 0xEC, 0x83, 0xC4, 0xEC, 0x53, 0x33, 0xC0, 0x89, 0x45, 0xEC, 0xB8, 0xE0, 0x49, 0x57, 0x00, 0xE8, 0xCE, 0x20, 0xE9, 0xFF, 0x8B, 0x1D, 0xF8, 0xB8, 0x57, 0x00, 0x33, 0xC0, 0x55, 0x68}, {"Cheat Engine"}},   //Cheat Engine 5.1.1
	{0x591F94, {0x55, 0x8B, 0xEC, 0x83, 0xC4, 0xEC, 0x53, 0x33, 0xC0, 0x89, 0x45, 0xEC, 0xB8, 0x5C, 0x1A, 0x59, 0x00, 0xE8, 0x26, 0x50, 0xE7, 0xFF, 0x8B, 0x1D, 0x20, 0x89, 0x59, 0x00, 0x33, 0xC0, 0x55, 0x68}, {"Cheat Engine"}},   //Cheat Engine 5.2   
	{0x5CF354, {0x78, 0xAA, 0x4A, 0x00, 0x48, 0xAA, 0x4A, 0x00, 0xFC, 0x17, 0x4A, 0x00, 0xCC, 0x17, 0x4A, 0x00, 0xB0, 0x22, 0x52, 0x00, 0x80, 0x22, 0x52, 0x00, 0x10, 0x12, 0x4A, 0x00, 0xE0, 0x11, 0x4A, 0x00}, {"Cheat Engine"}},   //Cheat Engine 5.4
	{0x606140, {0x8C, 0x79, 0x60, 0x00, 0xE0, 0xA8, 0x60, 0x00, 0x18, 0x70, 0x4D, 0x00, 0xE8, 0x18, 0x60, 0x00, 0x8C, 0xA0, 0x60, 0x00, 0xDC, 0x9C, 0x60, 0x00, 0x3C, 0x86, 0x60, 0x00, 0xD0, 0x9D, 0x60, 0x00}, {"Cheat Engine"}},	// Cheat Engine 5.5
	{0x40FBB6, {0x55, 0x8B, 0xEC, 0x6A, 0xFF, 0x68, 0x48, 0x3D, 0x41, 0x00, 0x68, 0x3C, 0xFD, 0x40, 0x00, 0x64, 0xA1, 0x00, 0x00, 0x00, 0x00, 0x50, 0x64, 0x89, 0x25, 0x00, 0x00, 0x00, 0x00, 0x83, 0xEC, 0x68}, {"Game Speed Changer"}},   //Game Speed Changer
	{0x438510, {0x60, 0xBE, 0x00, 0x20, 0x42, 0x00, 0x8D, 0xBE, 0x00, 0xF0, 0xFD, 0xFF, 0x57, 0x83, 0xCD, 0xFF, 0xEB, 0x10, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x8A, 0x06, 0x46, 0x88, 0x07, 0x47, 0x01, 0xDB}, {"eXpLoRer"}},   //eXpLoRer
	{0x4BCFA4, {0x55, 0x8B, 0xEC, 0x83, 0xC4, 0xF0, 0x53, 0x56, 0x57, 0xB8, 0xC4, 0xCC, 0x4B, 0x00, 0xE8, 0xB1, 0x9B, 0xF4, 0xFF, 0x8B, 0x3D, 0xB0, 0x03, 0x4C, 0x00, 0x68, 0xDC, 0xD0, 0x4B, 0x00, 0x6A, 0x04}, {"Xelerator 1.4"}},   //Xelerator 1.4
	{0x473BBC, {0x55, 0x8B, 0xEC, 0x83, 0xC4, 0xF4, 0xB8, 0x04, 0x3A, 0x47, 0x00, 0xE8, 0xE0, 0x26, 0xF9, 0xFF, 0xA1, 0x1C, 0x5C, 0x47, 0x00, 0x8B, 0x00, 0xE8, 0x04, 0xBE, 0xFC, 0xFF, 0x8B, 0x0D, 0xE4, 0x5C}, {"Capotecheat(deltacholl)"}},   //Capotecheat(deltacholl)
	{0x55DE8C, {0x87, 0xDE, 0xF7, 0xFA, 0x9F, 0xCA, 0x05, 0x5D, 0x83, 0x67, 0x02, 0x86, 0x59, 0xBF, 0xF1, 0xB6, 0x5B, 0x1F, 0x04, 0x6E, 0x79, 0x00, 0x18, 0x57, 0x8A, 0xD0, 0xA6, 0xFA, 0x8E, 0x5A, 0xE0, 0xD8}, {"Cheat4Fun v0.9 Beta"}},   //Cheat4Fun v0.9 Beta
	{0x4217E0, {0x60, 0xBE, 0x00, 0xD0, 0x41, 0x00, 0x8D, 0xBE, 0x00, 0x40, 0xFE, 0xFF, 0x57, 0xEB, 0x0B, 0x90, 0x8A, 0x06, 0x46, 0x88, 0x07, 0x47, 0x01, 0xDB, 0x75, 0x07, 0x8B, 0x1E, 0x83, 0xEE, 0xFC, 0x11}, {"!xSpeed.net3"}},   //!xSpeed.net3
	{0x493C90, {0x60, 0xBE, 0x00, 0xC0, 0x45, 0x00, 0x8D, 0xBE, 0x00, 0x50, 0xFA, 0xFF, 0x57, 0xEB, 0x0B, 0x90, 0x8A, 0x06, 0x46, 0x88, 0x07, 0x47, 0x01, 0xDB, 0x75, 0x07, 0x8B, 0x1E, 0x83, 0xEE, 0xFC, 0x11}, {"AutoBuff D-C"}},   //AutoBuff D-C
	{0x4320F0, {0x53, 0x00, 0x5F, 0x00, 0x56, 0x00, 0x45, 0x00, 0x52, 0x00, 0x53, 0x00, 0x49, 0x00, 0x4F, 0x00, 0x4E, 0x00, 0x5F, 0x00, 0x49, 0x00, 0x4E, 0x00, 0x46, 0x00, 0x4F, 0x00, 0x00, 0x00, 0x00, 0x00}, {"Cheat Happens"}},   //Cheat Happens v3.9b1
	{0x4340F0, {0x53, 0x00, 0x5F, 0x00, 0x56, 0x00, 0x45, 0x00, 0x52, 0x00, 0x53, 0x00, 0x49, 0x00, 0x4F, 0x00, 0x4E, 0x00, 0x5F, 0x00, 0x49, 0x00, 0x4E, 0x00, 0x46, 0x00, 0x4F, 0x00, 0x00, 0x00, 0x00, 0x00}, {"Cheat Happens"}},   //Cheat Happens v3.95b1/b2
	{0x4360F0, {0x53, 0x00, 0x5F, 0x00, 0x56, 0x00, 0x45, 0x00, 0x52, 0x00, 0x53, 0x00, 0x49, 0x00, 0x4F, 0x00, 0x4E, 0x00, 0x5F, 0x00, 0x49, 0x00, 0x4E, 0x00, 0x46, 0x00, 0x4F, 0x00, 0x00, 0x00, 0x00, 0x00}, {"Cheat Happens"}},   //Cheat Happens v3.95b3
	{0x440020, {0x5F, 0xE4, 0xAD, 0x60, 0x36, 0x56, 0x43, 0x4D, 0x92, 0xBD, 0xC8, 0x6F, 0xF8, 0xDE, 0xE1, 0xBD, 0x01, 0x00, 0x00, 0x00, 0x46, 0x3A, 0x5C, 0x44, 0x6F, 0x63, 0x75, 0x6D, 0x65, 0x6E, 0x74, 0x73}, {"Cheat Happens"}},   //Cheat Happens v3.96b2
	{0x416014, {0xB8, 0x00, 0x00, 0x00, 0x00, 0x60, 0x0B, 0xC0, 0x74, 0x68, 0xE8, 0x00, 0x00, 0x00, 0x00, 0x58, 0x05, 0x53, 0x00, 0x00, 0x00, 0x80, 0x38, 0xE9, 0x75, 0x13, 0x61, 0xEB, 0x45, 0xDB, 0x2D, 0x37}, {"HastyMu v0.2"}},   //HastyMu v0.2
	{0xAF4014, {0xB8, 0x00, 0x00, 0x00, 0x00, 0x60, 0x0B, 0xC0, 0x74, 0x68, 0xE8, 0x00, 0x00, 0x00, 0x00, 0x58, 0x05, 0x53, 0x00, 0x00, 0x00, 0x80, 0x38, 0xE9, 0x75, 0x13, 0x61, 0xEB, 0x45, 0xDB, 0x2D, 0x37}, {"FunnyZhyper v5"}},   //FunnyZhyper v5
	{0x48C000, {0xFC, 0xCF, 0xAB, 0xE7, 0x6D, 0x3A, 0x89, 0xBC, 0xB2, 0x9F, 0x73, 0x23, 0xA8, 0xFE, 0xB6, 0x49, 0x5D, 0x39, 0x5D, 0x8A, 0xCB, 0x63, 0x8D, 0xEA, 0x7D, 0x2B, 0x5F, 0xC3, 0xB1, 0xE9, 0x83, 0x29}, {"Lipsum v2"}},   //Lipsum v2
	{0x401704, {0x68, 0x84, 0x24, 0x40, 0x00, 0xE8, 0xEE, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x72, 0x80, 0x61, 0xF6}, {"MuPie HG v2"}},   //MuPie HG v2
	{0x401B28, {0x68, 0xD8, 0x2A, 0x40, 0x00, 0xE8, 0xF0, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xB9, 0xE3, 0x0E, 0xC3}, {"MuPie HG v3"}},   //MuPie HG v3
	{0x41F04A, {0x8D, 0x5D, 0x5E, 0x53, 0x50, 0xFF, 0x95, 0x49, 0x0F, 0x00, 0x00, 0x89, 0x85, 0x4D, 0x05, 0x00, 0x00, 0x8D, 0x5D, 0x6B, 0x53, 0x57, 0xFF, 0x95, 0x49, 0x0F, 0x00, 0x00, 0x89, 0x85, 0x51, 0x05}, {"!xSpeedNet"}},	  //!xSpeedNet
	{0x4727CC, {0x55, 0x8B, 0xEC, 0x83, 0xC4, 0xF0, 0xB8, 0x90, 0x14, 0x47, 0x00, 0xE8, 0x78, 0x3E, 0xF9, 0xFF, 0xA1, 0xA0, 0x53, 0x47, 0x00, 0x8B, 0x00, 0xE8, 0x50, 0x93, 0xFE, 0xFF, 0xA1, 0xA0, 0x53, 0x47}, {"Muwars.lv Hack"}}, //Muwars.lv Hack
	{0x4388C0, {0x00, 0x00, 0x00, 0x00, 0x00, 0x4A, 0x49, 0x4A, 0x84, 0x86, 0x84, 0x00, 0x00, 0x63, 0x29, 0x59, 0xDE, 0x31, 0x9E, 0xFF, 0x31, 0x9E, 0xFF, 0x31, 0x9E, 0xFF, 0x31, 0x9E, 0xFF, 0x31, 0x9E, 0xFF}, {"Mupie X"}}, //Mupie X										
	{0x414014, {0xB8, 0x00, 0x00, 0x00, 0x00, 0x60, 0x0B, 0xC0, 0x74, 0x68, 0xE8, 0x00, 0x00, 0x00, 0x00, 0x58, 0x05, 0x53, 0x00, 0x00, 0x00, 0x80, 0x38, 0xE9, 0x75, 0x13, 0x61, 0xEB, 0x45, 0xDB, 0x2D, 0x37}, {"HastyMU Client overclocker"}}, //HastyMU Client overclocker!
	{0x568E9A, {0x68, 0xB8, 0xF9, 0x85, 0x13, 0xE8, 0x9D, 0x53, 0x01, 0x00, 0xB6, 0x94, 0x70, 0x4B, 0xE8, 0x87, 0xE5, 0x43, 0xE4, 0x43, 0x21, 0x7B, 0x18, 0xB7, 0xBB, 0x79, 0x6D, 0x3E, 0xF9, 0x1E, 0x5C, 0x7F}, {"Speed Gear 6"}}, //Speed Gear 6
	{0x496CA0, {0x60, 0xBE, 0x00, 0x50, 0x46, 0x00, 0x8D, 0xBE, 0x00, 0xC0, 0xF9, 0xFF, 0xC7, 0x87, 0xA8, 0x50, 0x07, 0x00, 0x95, 0x01, 0xA9, 0x0C, 0x57, 0x83, 0xCD, 0xFF, 0xEB, 0x0E, 0x90, 0x90, 0x90, 0x90}, {"Dup97-98"}}, //Dup97-98
	{0x488070, {0x60, 0xBE, 0x00, 0x80, 0x45, 0x00, 0x8D, 0xBE, 0x00, 0x90, 0xFA, 0xFF, 0x57, 0xEB, 0x0B, 0x90, 0x8A, 0x06, 0x46, 0x88, 0x07, 0x47, 0x01, 0xDB, 0x75, 0x07, 0x8B, 0x1E, 0x83, 0xEE, 0xFC, 0x11}, {"Pinnacle"}}, //Pinnacle
	{0x43FC56, {0x8D, 0xBE, 0x00, 0x80, 0xFC, 0xFF, 0x57, 0x83, 0xCD, 0xFF, 0xEB, 0x10, 0xEB, 0x00, 0xEB, 0xEA, 0xEB, 0xE8, 0x8A, 0x06, 0x46, 0x88, 0x07, 0x47, 0x01, 0xDB, 0x75, 0x07, 0x8B, 0x1E, 0x83, 0xEE}, {"MUSHv2.00"}}, //MUSHv2.00
	{0x401A50, {0x68, 0x64, 0x36, 0x40, 0x00, 0xE8, 0xEE, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBD, 0x7B, 0x32, 0x7A}, {"ElFerProxy1.05"}}, //ElFerProxy1.05
	{0x4019C8, {0x68, 0xF0, 0x33, 0x40, 0x00, 0xE8, 0xF0, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xDB, 0x94, 0x29, 0x57}, {"ElFerProxy"}}, //ElFerProxy
	{0x401000, {0xEB, 0x10, 0x66, 0x62, 0x3A, 0x43, 0x2B, 0x2B, 0x48, 0x4F, 0x4F, 0x4B, 0x90, 0xE9, 0x28, 0x01, 0x4B, 0x00, 0xA1, 0x1B, 0x01, 0x4B, 0x00, 0xC1, 0xE0, 0x02, 0xA3, 0x1F, 0x01, 0x4B, 0x00, 0x52}, {"OllyDBG"}}, //OllyDBG
	{0x401318, {0xEB, 0x10, 0x66, 0x62, 0x3A, 0x43, 0x2B, 0x2B, 0x48, 0x4F, 0x4F, 0x4B, 0x90, 0xE9, 0x98, 0x50, 0x46, 0x00, 0xA1, 0x8B, 0x50, 0x46, 0x00, 0xC1, 0xE0, 0x02, 0xA3, 0x8F, 0x50, 0x46, 0x00, 0x52}, {"WildPower Skill Hack"}}, //WildPower Skill Hack
	{0x401338, {0xEB, 0x10, 0x66, 0x62, 0x3A, 0x43, 0x2B, 0x2B, 0x48, 0x4F, 0x4F, 0x4B, 0x90, 0xE9, 0x98, 0x50, 0x48, 0x00, 0xA1, 0x8B, 0x50, 0x48, 0x00, 0xC1, 0xE0, 0x02, 0xA3, 0x8F, 0x50, 0x48, 0x00, 0x52}, {"Speed Hack by Ziomal 0.8"}}, //Speed Hack by Ziomal 0.8
	{0x4014A0, {0x68, 0x04, 0x18, 0x40, 0x00, 0xE8, 0xF0, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xAF, 0xE5, 0xB4, 0x0B}, {"Proxy Hit Hack"}}, //Proxy Hit Hack
	{0x4029B8, {0x68, 0x74, 0x2B, 0x40, 0x00, 0xE8, 0xF0, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x0B, 0x17, 0x81, 0xDD}, {"Vault Blaster (CBlaster)"}}, //Vault Blaster (CBlaster)
	{0x402650, {0x68, 0x0C, 0x28, 0x40, 0x00, 0xE8, 0xEE, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x1F, 0x76, 0x85, 0x44}, {"Vault Blaster (VBlaster)"}}, //Vault Blaster (VBlaster)
	{0x4027D8, {0x8D, 0x4B, 0x00, 0x00, 0x01, 0x13, 0x1D, 0x11, 0x1D, 0x16, 0x72, 0x3D, 0x01, 0x00, 0x70, 0xA2, 0x11, 0x1D, 0x17, 0x72, 0xB5, 0x00, 0x00, 0x70, 0xA2, 0x11, 0x1D, 0x15, 0x28, 0x1F, 0x00, 0x00}, {"MuCeRool"}}, //MuCeRool
	{0x5A7000, {0x60, 0xE8, 0x00, 0x00, 0x00, 0x00, 0x5D, 0x50, 0x51, 0xEB, 0x0F, 0xB9, 0xEB, 0x0F, 0xB8, 0xEB, 0x07, 0xB9, 0xEB, 0x0F, 0x90, 0xEB, 0x08, 0xFD, 0xEB, 0x0B, 0xF2, 0xEB, 0xF5, 0xEB, 0xF6, 0xF2}, {"99QJ MU Bot 2.6b"}}, //99QJ_MU_Bot 2.6b
	{0x439000, {0x60, 0xE8, 0x00, 0x00, 0x00, 0x00, 0x5D, 0x50, 0x51, 0xEB, 0x0F, 0xB9, 0xEB, 0x0F, 0xB8, 0xEB, 0x07, 0xB9, 0xEB, 0x0F, 0x90, 0xEB, 0x08, 0xFD, 0xEB, 0x0B, 0xF2, 0xEB, 0xF5, 0xEB, 0xF6, 0xF2}, {"99QJ MU Bot 2.6b"}}, //99QJ_MU_Bot 2.6b
	{0x402868, {0x52, 0x92, 0x3B, 0x8D, 0xD5, 0x33, 0x78, 0xB7, 0x32, 0x71, 0xA3, 0x37, 0x73, 0xBF, 0x45, 0x85, 0xBC, 0x28, 0x62, 0x8C, 0x1B, 0x51, 0x6A, 0x15, 0x3A, 0x60, 0x24, 0x51, 0x6C, 0x49, 0x7C, 0xBA}, {"Speed Hack Simplifier"}}, //Speed Hack Simplifier
	{0x402190, {0x55, 0x8B, 0xEC, 0x53, 0x56, 0x57, 0xBB, 0x00, 0x60, 0x40, 0x00, 0x66, 0x2E, 0xF7, 0x05, 0x1E, 0x28, 0x40, 0x00, 0x04, 0x00, 0x0F, 0x85, 0xDB, 0x00, 0x00, 0x00, 0x6A, 0x00, 0xFF, 0x15, 0x18}, {"PermEdit"}}, //PermEdit
	{0x40104C, {0x68, 0xF4, 0x6C, 0x43, 0x00, 0xE8, 0xEE, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xDD, 0x62, 0xBF, 0x68}, {"Trade Runner"}}, //Trade Runner
	{0x512950, {0x55, 0x8B, 0xEC, 0x83, 0xC4, 0xF0, 0x53, 0xB8, 0x50, 0x23, 0x51, 0x00, 0xE8, 0x63, 0x3C, 0xEF, 0xFF, 0x8B, 0x1D, 0x7C, 0xA2, 0x51, 0x00, 0x8B, 0x03, 0xE8, 0xA6, 0x87, 0xF6, 0xFF, 0x8B, 0x0D}, {"Redox packet editor"}}, //Redox packet editor
	{0x4F3590, {0x60, 0xBE, 0x00, 0x10, 0x4A, 0x00, 0x8D, 0xBE, 0x00, 0x00, 0xF6, 0xFF, 0xC7, 0x87, 0xD0, 0x94, 0x0B, 0x00, 0xFA, 0x0D, 0x24, 0x48, 0x57, 0x83, 0xCD, 0xFF, 0xEB, 0x0E, 0x90, 0x90, 0x90, 0x90}, {"Uopilot 107 beta wk"}}, //uopilot_107_beta_wk
	{0x41D7A0, {0x55, 0x8B, 0xEC, 0x6A, 0xFF, 0x68, 0x68, 0x2F, 0x46, 0x00, 0x68, 0x28, 0x3D, 0x42, 0x00, 0x64, 0xA1, 0x00, 0x00, 0x00, 0x00, 0x50, 0x64, 0x89, 0x25, 0x00, 0x00, 0x00, 0x00, 0x83, 0xC4, 0xA8}, {"LANScan"}}, //LANScan
	{0x438FD8, {0x55, 0x8B, 0xEC, 0x83, 0xC4, 0xF4, 0xB8, 0xD8, 0x8E, 0x43, 0x00, 0xE8, 0x58, 0xC1, 0xFC, 0xFF, 0xA1, 0x84, 0xAB, 0x43, 0x00, 0x8B, 0x00, 0xE8, 0xC4, 0x18, 0xFF, 0xFF, 0x8B, 0x0D, 0x00, 0xAC}, {"TradeBug"}}, //TradeBug
	{0x403956, {0x6A, 0x60, 0x68, 0x08, 0x82, 0x41, 0x00, 0xE8, 0x6A, 0x20, 0x00, 0x00, 0xBF, 0x94, 0x00, 0x00, 0x00, 0x8B, 0xC7, 0xE8, 0x62, 0xFF, 0xFF, 0xFF, 0x89, 0x65, 0xE8, 0x8B, 0xF4, 0x89, 0x3E, 0x56}, {"NewStatAdderDude"}}, //NewStatAdderDude
	{0x460DDC, {0x55, 0x8B, 0xEC, 0x83, 0xC4, 0xF4, 0xB8, 0x0C, 0x0C, 0x46, 0x00, 0xE8, 0xF4, 0x51, 0xFA, 0xFF, 0xA1, 0xA4, 0x31, 0x46, 0x00, 0x8B, 0x00, 0xE8, 0x20, 0x1B, 0xFE, 0xFF, 0xA1, 0xA4, 0x31, 0x46}, {"mhs"}}, //mhs
	{0x4441C0, {0x60, 0xBE, 0x00, 0x00, 0x43, 0x00, 0x8D, 0xBE, 0x00, 0x10, 0xFD, 0xFF, 0x57, 0x83, 0xCD, 0xFF, 0xEB, 0x10, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x8A, 0x06, 0x46, 0x88, 0x07, 0x47, 0x01, 0xDB}, {"bot"}}, //bot
	{0x499190, {0x60, 0xBE, 0x00, 0x30, 0x46, 0x00, 0x8D, 0xBE, 0x00, 0xE0, 0xF9, 0xFF, 0x57, 0xEB, 0x0B, 0x90, 0x8A, 0x06, 0x46, 0x88, 0x07, 0x47, 0x01, 0xDB, 0x75, 0x07, 0x8B, 0x1E, 0x83, 0xEE, 0xFC, 0x11}, {"Auto_Combo_de_TuX-HaCk"}}, //Auto_Combo_de_TuX-HaCk
	{0x401AA8, {0xE8, 0x49, 0x24, 0x00, 0x00, 0xE9, 0x16, 0xFE, 0xFF, 0xFF, 0x55, 0x8B, 0xEC, 0x81, 0xEC, 0x28, 0x03, 0x00, 0x00, 0xA3, 0x98, 0xD0, 0x40, 0x00, 0x89, 0x0D, 0x94, 0xD0, 0x40, 0x00, 0x89, 0x15}, {"JoyToKey"}}, //JoyToKey
	{0x45C71C, {0x55, 0x8B, 0xEC, 0x83, 0xC4, 0xF0, 0xB8, 0x24, 0xB0, 0x45, 0x00, 0xE8, 0xA0, 0x9E, 0xFA, 0xFF, 0xA1, 0x1C, 0xEA, 0x45, 0x00, 0x8B, 0x00, 0xE8, 0x7C, 0xC4, 0xFF, 0xFF, 0xA1, 0x1C, 0xEA, 0x45}, {"Project2"}}, //Project2
	{0x4011D4, {0x68, 0x50, 0x8E, 0x40, 0x00, 0xE8, 0xF0, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0xF6, 0xC3, 0xA8}, {"HackSpeed"}}, //HackSpeed
	{0x49CBFC, {0x55, 0x8B, 0xEC, 0x83, 0xC4, 0xF0, 0xB8, 0x40, 0xB0, 0x49, 0x00, 0xE8, 0x0C, 0xA1, 0xF6, 0xFF, 0xA1, 0x38, 0xF9, 0x49, 0x00, 0x8B, 0x00, 0xE8, 0x34, 0xAB, 0xFC, 0xFF, 0xA1, 0x38, 0xF9, 0x49}, {"4Muwars.lv"}}, //4Muwars.lv
	{0x403139, {0x6A, 0x60, 0x68, 0xF0, 0x96, 0x40, 0x00, 0xE8, 0x1F, 0x0D, 0x00, 0x00, 0xBF, 0x94, 0x00, 0x00, 0x00, 0x8B, 0xC7, 0xE8, 0x2F, 0xFD, 0xFF, 0xFF, 0x89, 0x65, 0xE8, 0x8B, 0xF4, 0x89, 0x3E, 0x56}, {"mu proxy server"}}, //mu proxy server
	{0x49CBFC, {0x55, 0x8B, 0xEC, 0x83, 0xC4, 0xF0, 0xB8, 0x40, 0xB0, 0x49, 0x00, 0xE8, 0x0C, 0xA1, 0xF6, 0xFF, 0xA1, 0x38, 0xF9, 0x49, 0x00, 0x8B, 0x00, 0xE8, 0x34, 0xAB, 0xFC, 0xFF, 0xA1, 0x38, 0xF9, 0x49}, {"PACHME!!"}}, //PACHME!!
	{0x494BFC, {0x55, 0x8B, 0xEC, 0x83, 0xC4, 0xF0, 0xB8, 0x6C, 0x35, 0x49, 0x00, 0xE8, 0xB8, 0x20, 0xF7, 0xFF, 0xA1, 0x18, 0x79, 0x49, 0x00, 0x8B, 0x00, 0xE8, 0x04, 0x23, 0xFD, 0xFF, 0xA1, 0x18, 0x79, 0x49}, {"PiLL"}}, //PiLL
	{0x41E2B0, {0x60, 0xBE, 0x00, 0x30, 0x41, 0x00, 0x8D, 0xBE, 0x00, 0xE0, 0xFE, 0xFF, 0x57, 0x83, 0xCD, 0xFF, 0xEB, 0x10, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x8A, 0x06, 0x46, 0x88, 0x07, 0x47, 0x01, 0xDB}, {"smsniff"}}, //smsniff
	{0x4737D4, {0x55, 0x8B, 0xEC, 0x83, 0xC4, 0xF0, 0xB8, 0xE4, 0x1E, 0x47, 0x00, 0xE8, 0x70, 0x2E, 0xF9, 0xFF, 0xA1, 0xA0, 0x63, 0x47, 0x00, 0x8B, 0x00, 0xE8, 0x38, 0x83, 0xFE, 0xFF, 0xA1, 0xA0, 0x63, 0x47}, {"ZhyperMuV4.0"}}, //ZhyperMuV4.0
	{0x420001, {0x60, 0xE8, 0x03, 0x00, 0x00, 0x00, 0xE9, 0xEB, 0x04, 0x5D, 0x45, 0x55, 0xC3, 0xE8, 0x01, 0x00, 0x00, 0x00, 0xEB, 0x5D, 0xBB, 0xED, 0xFF, 0xFF, 0xFF, 0x03, 0xDD, 0x81, 0xEB, 0x00, 0x00, 0x02}, {"!xSpeedPro"}}, //!xSpeedPro
	{0X41F001, {0x60, 0xE8, 0x03, 0x00, 0x00, 0x00, 0xE9, 0xEB, 0x04, 0x5D, 0x45, 0x55, 0xC3, 0xE8, 0x01, 0x00, 0x00, 0x00, 0xEB, 0x5D, 0xBB, 0xED, 0xFF, 0xFF, 0xFF, 0x03, 0xDD, 0x81, 0xEB, 0x00, 0xF0, 0x01}, {"!xSpeednet"}}, //!xSpeednet
	{0x480340, {0x60, 0xBE, 0x00, 0x10, 0x45, 0x00, 0x8D, 0xBE, 0x00, 0x00, 0xFB, 0xFF, 0x57, 0x83, 0xCD, 0xFF, 0xEB, 0x10, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x8A, 0x06, 0x46, 0x88, 0x07, 0x47, 0x01, 0xDB}, {"Dizzys DL macro v1.1"}},  //Dizzys DL macro v1.1
	{0x48DB10, {0x60, 0xBE, 0x00, 0x40, 0x46, 0x00, 0x8D, 0xBE, 0x00, 0xD0, 0xF9, 0xFF, 0x57, 0x83, 0xCD, 0xFF, 0xEB, 0x10, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x8A, 0x06, 0x46, 0x88, 0x07, 0x47, 0x01, 0xDB}, {"JoyToKey"}}, //JoyToKey.exe
	{0x484001, {0x60, 0xE8, 0x03, 0x00, 0x00, 0x00, 0xE9, 0xEB, 0x04, 0x5D, 0x45, 0x55, 0xC3, 0xE8, 0x01, 0x00, 0x00, 0x00, 0xEB, 0x5D, 0xBB, 0xED, 0xFF, 0xFF, 0xFF, 0x03, 0xDD, 0x81, 0xEB, 0x00, 0x40, 0x08}, {"Clicker By WakeUP"}}, //Clicker By WakeUP
	{0x411850, {0x60, 0xBE, 0x15, 0xF0, 0x40, 0x00, 0x8D, 0xBE, 0xEB, 0x1F, 0xFF, 0xFF, 0x57, 0x83, 0xCD, 0xFF, 0xEB, 0x10, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x8A, 0x06, 0x46, 0x88, 0x07, 0x47, 0x01, 0xDB}, {"ClickAlot!"}}, //ClickAlot!.exe
	{0x493190, {0x60, 0xBE, 0x00, 0xD0, 0x45, 0x00, 0x8D, 0xBE, 0x00, 0x40, 0xFA, 0xFF, 0x57, 0xEB, 0x0B, 0x90, 0x8A, 0x06, 0x46, 0x88, 0x07, 0x47, 0x01, 0xDB, 0x75, 0x07, 0x8B, 0x1E, 0x83, 0xEE, 0xFC, 0x11}, {"Autoclicker-DL"}}, //Autoclicker-DL
	{0x4441C0, {0x60, 0xBE, 0x00, 0x00, 0x43, 0x00, 0x8D, 0xBE, 0x00, 0x10, 0xFD, 0xFF, 0x57, 0x83, 0xCD, 0xFF, 0xEB, 0x10, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x8A, 0x06, 0x46, 0x88, 0x07, 0x47, 0x01, 0xDB}, {"Autoclicker_V3"}}, //Autoclicker_V3
	{0x499190, {0x60, 0xBE, 0x00, 0x30, 0x46, 0x00, 0x8D, 0xBE, 0x00, 0xE0, 0xF9, 0xFF, 0x57, 0xEB, 0x0B, 0x90, 0x8A, 0x06, 0x46, 0x88, 0x07, 0x47, 0x01, 0xDB, 0x75, 0x07, 0x8B, 0x1E, 0x83, 0xEE, 0xFC, 0x11}, {"autobuff-Elf"}}, //autobuff-Elf
	{0x46E9E0, {0x60, 0xBE, 0x00, 0x00, 0x44, 0x00, 0x8D, 0xBE, 0x00, 0x10, 0xFC, 0xFF, 0x57, 0x89, 0xE5, 0x8D, 0x9C, 0x24, 0x80, 0xC1, 0xFF, 0xFF, 0x31, 0xC0, 0x50, 0x39, 0xDC, 0x75, 0xFB, 0x46, 0x46, 0x53}, {"auto_heal_by_bL"}}, //auto_heal_by_bL
	{0x453180, {0x60, 0xBE, 0x00, 0x80, 0x43, 0x00, 0x8D, 0xBE, 0x00, 0x90, 0xFC, 0xFF, 0x57, 0x83, 0xCD, 0xFF, 0xEB, 0x10, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x8A, 0x06, 0x46, 0x88, 0x07, 0x47, 0x01, 0xDB}, {"JoyToKey-aebot-Pipen"}}, //JoyToKey-aebot-Pipen
	{0x466ADF, {0x00, 0x88, 0xAF, 0x25, 0xE1, 0xA0, 0x05, 0x00, 0x00, 0x10, 0xB0, 0x10, 0x00, 0xA8, 0x0C, 0x36, 0x00, 0x20, 0x3C, 0x66, 0xE2, 0xA0, 0x05, 0x00, 0x00, 0x10, 0xB1, 0x10, 0x00, 0x28, 0x0E, 0x36}, {"[ A L T I M I T ]"}}, //[ A L T I M I T ]
	{0x459180, {0x60, 0xBE, 0x00, 0xE0, 0x43, 0x00, 0x8D, 0xBE, 0x00, 0x30, 0xFC, 0xFF, 0x57, 0x83, 0xCD, 0xFF, 0xEB, 0x10, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x8A, 0x06, 0x46, 0x88, 0x07, 0x47, 0x01, 0xDB}, {"AutoBuff+Macro"}}, //AutoBuff+Macro
	{0x4044E6, {0x6A, 0x60, 0x68, 0xA8, 0x92, 0x41, 0x00, 0xE8, 0x9A, 0x1F, 0x00, 0x00, 0xBF, 0x94, 0x00, 0x00, 0x00, 0x8B, 0xC7, 0xE8, 0x62, 0xFF, 0xFF, 0xFF, 0x89, 0x65, 0xE8, 0x8B, 0xF4, 0x89, 0x3E, 0x56}, {"DKbotDude"}}, //DKbotDude
	{0x404566, {0x6A, 0x60, 0x68, 0x80, 0xA7, 0x41, 0x00, 0xE8, 0xE6, 0x17, 0x00, 0x00, 0xBF, 0x94, 0x00, 0x00, 0x00, 0x8B, 0xC7, 0xE8, 0x62, 0xFF, 0xFF, 0xFF, 0x89, 0x65, 0xE8, 0x8B, 0xF4, 0x89, 0x3E, 0x56}, {"DKAEMultiStrikeByDude"}}, //DKAEMultiStrikeByDude
	{0x4013A8, {0xEB, 0x10, 0x66, 0x62, 0x3A, 0x43, 0x2B, 0x2B, 0x48, 0x4F, 0x4F, 0x4B, 0x90, 0xE9, 0x98, 0x80, 0x48, 0x00, 0xA1, 0x8B, 0x80, 0x48, 0x00, 0xC1, 0xE0, 0x02, 0xA3, 0x8F, 0x80, 0x48, 0x00, 0x52}, {"ZMU"}}, //ZMU
	{0x402E00, {0x18, 0x49, 0x75, 0xF3, 0x5A, 0x29, 0xD0, 0x88, 0x02, 0x5B, 0xC3, 0x90, 0x53, 0x57, 0x89, 0xC7, 0x31, 0xDB, 0x88, 0xCB, 0x89, 0xD9, 0x31, 0xC0, 0xF3, 0xAA, 0x29, 0xDF, 0x40, 0x88, 0xD1, 0xD2}, {"Cheat Master 1.0"}},  // Cheat Master 1.0
	{0x492B44, {0x55, 0x8B, 0xEC, 0x83, 0xC4, 0xF0, 0xB8, 0x1C, 0x12, 0x49, 0x00, 0xE8, 0x00, 0x41, 0xF7, 0xFF, 0xA1, 0x30, 0x5C, 0x49, 0x00, 0x8B, 0x00, 0xE8, 0x38, 0x6A, 0xFD, 0xFF, 0x8B, 0x0D, 0x68, 0x5D}, {"Wall"}}, // Wall
	{0x44EB02, {0xE8, 0xC5, 0xC0, 0x00, 0x00, 0xE9, 0x78, 0xFE, 0xFF, 0xFF, 0xCC, 0xCC, 0xCC, 0xCC, 0x51, 0x8D, 0x4C, 0x24, 0x08, 0x2B, 0xC8, 0x83, 0xE1, 0x0F, 0x03, 0xC1, 0x1B, 0xC9, 0x0B, 0xC1, 0x59, 0xE9}, {"Process Explorer 11.33"}}, // Process Explorer 11.33
	{0x414014, {0xB8, 0x00, 0x00, 0x00, 0x00, 0x60, 0x0B, 0xC0, 0x74, 0x68, 0xE8, 0x00, 0x00, 0x00, 0x00, 0x58, 0x05, 0x53, 0x00, 0x00, 0x00, 0x80, 0x38, 0xE9, 0x75, 0x13, 0x61, 0xEB, 0x45, 0xDB, 0x2D, 0x37}, {"HastyMu 1.1.0"}}, // HastyMu 1.1.0
	{0x499CB0, {0x60, 0xBE, 0x00, 0x20, 0x46, 0x00, 0x8D, 0xBE, 0x00, 0xF0, 0xF9, 0xFF, 0x57, 0xEB, 0x0B, 0x90, 0x8A, 0x06, 0x46, 0x88, 0x07, 0x47, 0x01, 0xDB, 0x75, 0x07, 0x8B, 0x1E, 0x83, 0xEE, 0xFC, 0x11}, {"Perfect AutoPotion"}}, // Perfect AutoPotion
	{0x4591A0, {0x75, 0x07, 0x8B, 0x1E, 0x83, 0xEE, 0xFC, 0x11, 0xDB, 0x72, 0xED, 0xB8, 0x01, 0x00, 0x00, 0x00, 0x01, 0xDB, 0x75, 0x07, 0x8B, 0x1E, 0x83, 0xEE, 0xFC, 0x11, 0xDB, 0x11, 0xC0, 0x01, 0xDB, 0x73}, {"Pinaccle AutoLoot"}},   // Pinaccle AutoLoot
	{0x4541BF, {0x73, 0x0B, 0x75, 0x19, 0x8B, 0x1E, 0x83, 0xEE, 0xFC, 0x11, 0xDB, 0x72, 0x10, 0x48, 0x01, 0xDB, 0x75, 0x07, 0x8B, 0x1E, 0x83, 0xEE, 0xFC, 0x11, 0xDB, 0x11, 0xC0, 0xEB, 0xD4, 0x31, 0xC9, 0x83}, {"AutoBuff"}},	// AutoBuff v3.x (3.0)
	{0x4541A0, {0x75, 0x07, 0x8B, 0x1E, 0x83, 0xEE, 0xFC, 0x11, 0xDB, 0x72, 0xED, 0xB8, 0x01, 0x00, 0x00, 0x00, 0x01, 0xDB, 0x75, 0x07, 0x8B, 0x1E, 0x83, 0xEE, 0xFC, 0x11, 0xDB, 0x11, 0xC0, 0x01, 0xDB, 0x73}, {"AutoBuff"}},	// AutoBuff v3.x (3.0a)
	{0x4541CA, {0x72, 0x10, 0x48, 0x01, 0xDB, 0x75, 0x07, 0x8B, 0x1E, 0x83, 0xEE, 0xFC, 0x11, 0xDB, 0x11, 0xC0, 0xEB, 0xD4, 0x31, 0xC9, 0x83, 0xE8, 0x03, 0x72, 0x11, 0xC1, 0xE0, 0x08, 0x8A, 0x06, 0x46, 0x83}, {"AutoBuff"}},	// AutoBuff v3.x (3.1)
	{0x4541B2, {0x75, 0x07, 0x8B, 0x1E, 0x83, 0xEE, 0xFC, 0x11, 0xDB, 0x11, 0xC0, 0x01, 0xDB, 0x73, 0x0B, 0x75, 0x19, 0x8B, 0x1E, 0x83, 0xEE, 0xFC, 0x11, 0xDB, 0x72, 0x10, 0x48, 0x01, 0xDB, 0x75, 0x07, 0x8B}, {"AutoBuff"}},	// AutoBuff v3.x (3.1a)
	{0x4541A2, {0x8B, 0x1E, 0x83, 0xEE, 0xFC, 0x11, 0xDB, 0x72, 0xED, 0xB8, 0x01, 0x00, 0x00, 0x00, 0x01, 0xDB, 0x75, 0x07, 0x8B, 0x1E, 0x83, 0xEE, 0xFC, 0x11, 0xDB, 0x11, 0xC0, 0x01, 0xDB, 0x73, 0x0B, 0x75}, {"AutoBuff"}},	// AutoBuff v9.x (9.0)
	{0x4541C1, {0x75, 0x19, 0x8B, 0x1E, 0x83, 0xEE, 0xFC, 0x11, 0xDB, 0x72, 0x10, 0x48, 0x01, 0xDB, 0x75, 0x07, 0x8B, 0x1E, 0x83, 0xEE, 0xFC, 0x11, 0xDB, 0x11, 0xC0, 0xEB, 0xD4, 0x31, 0xC9, 0x83, 0xE8, 0x03}, {"AutoBuff"}},	// AutoBuff v9.x (9.0a)
	{0x4541C1, {0x75, 0x19, 0x8B, 0x1E, 0x83, 0xEE, 0xFC, 0x11, 0xDB, 0x72, 0x10, 0x48, 0x01, 0xDB, 0x75, 0x07, 0x8B, 0x1E, 0x83, 0xEE, 0xFC, 0x11, 0xDB, 0x11, 0xC0, 0xEB, 0xD4, 0x31, 0xC9, 0x83, 0xE8, 0x03}, {"AutoBuff"}},	// AutoBuff v9.x (9.1)
	{0x4541B4, {0x8B, 0x1E, 0x83, 0xEE, 0xFC, 0x11, 0xDB, 0x11, 0xC0, 0x01, 0xDB, 0x73, 0x0B, 0x75, 0x19, 0x8B, 0x1E, 0x83, 0xEE, 0xFC, 0x11, 0xDB, 0x72, 0x10, 0x48, 0x01, 0xDB, 0x75, 0x07, 0x8B, 0x1E, 0x83}, {"AutoBuff"}},	// AutoBuff v9.x (9.1a)
	{0x4541CF, {0x75, 0x07, 0x8B, 0x1E, 0x83, 0xEE, 0xFC, 0x11, 0xDB, 0x11, 0xC0, 0xEB, 0xD4, 0x31, 0xC9, 0x83, 0xE8, 0x03, 0x72, 0x11, 0xC1, 0xE0, 0x08, 0x8A, 0x06, 0x46, 0x83, 0xF0, 0xFF, 0x74, 0x78, 0xD1}, {"AutoBuff"}},	// AutoBuff v9.x (9.2a)
	{0x4541A4, {0x83, 0xEE, 0xFC, 0x11, 0xDB, 0x72, 0xED, 0xB8, 0x01, 0x00, 0x00, 0x00, 0x01, 0xDB, 0x75, 0x07, 0x8B, 0x1E, 0x83, 0xEE, 0xFC, 0x11, 0xDB, 0x11, 0xC0, 0x01, 0xDB, 0x73, 0x0B, 0x75, 0x19, 0x8B}, {"Perfect DL Bot"}},  	// Perfect DL Bot v1.1
	{0x40134A, {0xA1, 0x8B, 0x50, 0x48, 0x00, 0xC1, 0xE0, 0x02, 0xA3, 0x8F, 0x50, 0x48, 0x00, 0x52, 0x6A, 0x00, 0xE8, 0x11, 0x34, 0x08, 0x00, 0x8B, 0xD0, 0xE8, 0xEE, 0x58, 0x06, 0x00, 0x5A, 0xE8, 0x4C, 0x58}, {"Speed Hack by Ziomal"}},	// Speed Hack By Ziomal 0.8
	{0x40134F, {0xC1, 0xE0, 0x02, 0xA3, 0x8F, 0x40, 0x47, 0x00, 0x52, 0x6A, 0x00, 0xE8, 0xEF, 0x14, 0x07, 0x00, 0x8B, 0xD0, 0xE8, 0xA2, 0x69, 0x06, 0x00, 0x5A, 0xE8, 0x00, 0x69, 0x06, 0x00, 0xE8, 0xD7, 0x69}, {"Speed Hack by Ziomal"}},	// Speed Hack By Ziomal 0.75
	{0x49101F, {0xEA, 0xD3, 0xC6, 0x78, 0x03, 0x79, 0x01, 0x75, 0x03, 0xCE, 0x7A, 0x03, 0x7B, 0x01, 0x73, 0x85, 0xF1, 0x50, 0xE8, 0x01, 0x00, 0x00, 0x00, 0xE9, 0x83, 0xC4, 0x04, 0x58, 0x85, 0xF0, 0x7C, 0x03}, {"Ultimate Cheat"}},	// Ultimate Cheat
	{0x496CC6, {0x01, 0xDB, 0x75, 0x07, 0x8B, 0x1E, 0x83, 0xEE, 0xFC, 0x11, 0xDB, 0x72, 0xED, 0xB8, 0x01, 0x00, 0x00, 0x00, 0x01, 0xDB, 0x75, 0x07, 0x8B, 0x1E, 0x83, 0xEE, 0xFC, 0x11, 0xDB, 0x11, 0xC0, 0x01}, {"Zhyper Agility"}},	// Zhyper Agi
	{0x41E2CB, {0x88, 0x07, 0x47, 0x01, 0xDB, 0x75, 0x07, 0x8B, 0x1E, 0x83, 0xEE, 0xFC, 0x11, 0xDB, 0x72, 0xED, 0xB8, 0x01, 0x00, 0x00, 0x00, 0x01, 0xDB, 0x75, 0x07, 0x8B, 0x1E, 0x83, 0xEE, 0xFC, 0x11, 0xDB}, {"Sniffer"}},	// Sm Sniff
	{0x40140E, {0xA1, 0x8B, 0xB0, 0x4B, 0x00, 0xC1, 0xE0, 0x02, 0xA3, 0x8F, 0xB0, 0x4B, 0x00, 0x52, 0x6A, 0x00, 0xE8, 0x1D, 0x8B, 0x0B, 0x00, 0x8B, 0xD0, 0xE8, 0x46, 0x44, 0x08, 0x00, 0x5A, 0xE8, 0xA4, 0x43}, {"AutoSkill"}},	// AutoSkill
	{0x4541A9, {0x72, 0xED, 0xB8, 0x01, 0x00, 0x00, 0x00, 0x01, 0xDB, 0x75, 0x07, 0x8B, 0x1E, 0x83, 0xEE, 0xFC, 0x11, 0xDB, 0x11, 0xC0, 0x01, 0xDB, 0x73, 0x0B, 0x75, 0x19, 0x8B, 0x1E, 0x83, 0xEE, 0xFC, 0x11}, {"AE Bot"}},	// AE Bot v1.0
	{0x4541C1, {0x75, 0x19, 0x8B, 0x1E, 0x83, 0xEE, 0xFC, 0x11, 0xDB, 0x72, 0x10, 0x48, 0x01, 0xDB, 0x75, 0x07, 0x8B, 0x1E, 0x83, 0xEE, 0xFC, 0x11, 0xDB, 0x11, 0xC0, 0xEB, 0xD4, 0x31, 0xC9, 0x83, 0xE8, 0x03}, {"AE Bot"}},	// AE Bot v1.0a
	{0x4531B2, {0x75, 0x07, 0x8B, 0x1E, 0x83, 0xEE, 0xFC, 0x11, 0xDB, 0x11, 0xC0, 0x01, 0xDB, 0x73, 0x0B, 0x75, 0x19, 0x8B, 0x1E, 0x83, 0xEE, 0xFC, 0x11, 0xDB, 0x72, 0x10, 0x48, 0x01, 0xDB, 0x75, 0x07, 0x8B}, {"AE Bot"}},	// AE Bot By Pipen
	{0x4541BF, {0x73, 0x0B, 0x75, 0x19, 0x8B, 0x1E, 0x83, 0xEE, 0xFC, 0x11, 0xDB, 0x72, 0x10, 0x48, 0x01, 0xDB, 0x75, 0x07, 0x8B, 0x1E, 0x83, 0xEE, 0xFC, 0x11, 0xDB, 0x11, 0xC0, 0xEB, 0xD4, 0x31, 0xC9, 0x83}, {"AE Bot"}},	// AE Bot
	{0x492BDA, {0x75, 0x07, 0x8B, 0x1E, 0x83, 0xEE, 0xFC, 0x11, 0xDB, 0x11, 0xC0, 0x01, 0xDB, 0x73, 0x0B, 0x75, 0x28, 0x8B, 0x1E, 0x83, 0xEE, 0xFC, 0x11, 0xDB, 0x72, 0x1F, 0x48, 0x01, 0xDB, 0x75, 0x07, 0x8B}, {"Agility Hack by TopGun"}},	// Agility Hack By TopGun
	{0x404FB2, {0x8B, 0x45, 0xDC, 0x89, 0x42, 0x0C, 0xFF, 0x91, 0x4C, 0x03, 0x00, 0x00, 0x8D, 0x55, 0xE0, 0x50, 0x52, 0xFF, 0xD7, 0x50, 0xFF, 0x15, 0x14, 0x11, 0x40, 0x00, 0x8D, 0x45, 0xE0, 0x8D, 0x4D, 0xE4}, {"99.62T HitHack"}},	// 99.62T HitHack
	{0x43FC66, {0xEB, 0xE8, 0x8A, 0x06, 0x46, 0x88, 0x07, 0x47, 0x01, 0xDB, 0x75, 0x07, 0x8B, 0x1E, 0x83, 0xEE, 0xFC, 0x11, 0xDB, 0x72, 0xED, 0xB8, 0x01, 0x00, 0x00, 0x00, 0x01, 0xDB, 0x75, 0x07, 0x8B, 0x1E}, {"Mush"}},	// Mush v2.0
	{0x401293, {0x83, 0xEC, 0x08, 0xC7, 0x04, 0x24, 0x02, 0x00, 0x00, 0x00, 0xFF, 0x15, 0x50, 0xA2, 0x44, 0x00, 0xE8, 0xA8, 0xFE, 0xFF, 0xFF, 0x90, 0x8D, 0xB4, 0x26, 0x00, 0x00, 0x00, 0x00, 0x55, 0x8B, 0x0D}, {"MiniMacro"}},	// MiniMacro
	{0x5F08FE, {0xFE, 0x04, 0x07, 0x05, 0x10, 0x05, 0x17, 0x05, 0x1E, 0x05, 0x24, 0x05, 0x2A, 0x05, 0x31, 0x05, 0x36, 0x05, 0x3C, 0x05, 0x41, 0x05, 0x47, 0x05, 0x4D, 0x05, 0x53, 0x05, 0x5A, 0x05, 0x61, 0x05}, {"MuHackRm"}},	// MuHackRm (30.06.05)
	{0x7E0121, {0x8B, 0xF1, 0xB9, 0xD0, 0xE9, 0x34, 0x68, 0xE8, 0x8A, 0x84, 0x1C, 0x70, 0x8B, 0xF8, 0x8B, 0xCF, 0xE8, 0x02, 0xB4, 0xA9, 0x67, 0x8D, 0x96, 0x40, 0x01, 0x00, 0x00, 0xE8, 0x1F, 0x2D, 0x1B, 0x70}, {"Spiffs MU Launcher"}},	// Spiffs MU Launcher
	{0x401AE5, {0x66, 0x8C, 0x0D, 0xA4, 0xD0, 0x40, 0x00, 0x66, 0x8C, 0x1D, 0x80, 0xD0, 0x40, 0x00, 0x66, 0x8C, 0x05, 0x7C, 0xD0, 0x40, 0x00, 0x66, 0x8C, 0x25, 0x78, 0xD0, 0x40, 0x00, 0x66, 0x8C, 0x2D, 0x74}, {"Spiffs AutoBot"}},	// Spiffs Auto Bot v1
	{0x401AEC, {0x66, 0x8C, 0x1D, 0x80, 0xD0, 0x40, 0x00, 0x66, 0x8C, 0x05, 0x7C, 0xD0, 0x40, 0x00, 0x66, 0x8C, 0x25, 0x78, 0xD0, 0x40, 0x00, 0x66, 0x8C, 0x2D, 0x74, 0xD0, 0x40, 0x00, 0x9C, 0x8F, 0x05, 0xA8}, {"Spiffs AutoBot"}},	// Spiffs Auto Bot v2
	{0x4CDCEC, {0xE8, 0x83, 0x8C, 0xF3, 0xFF, 0x8B, 0x1D, 0x7C, 0x00, 0x4D, 0x00, 0x8B, 0x03, 0xE8, 0x7A, 0xF1, 0xFA, 0xFF, 0x8B, 0x0D, 0xA8, 0x01, 0x4D, 0x00, 0x8B, 0x03, 0x8B, 0x15, 0x40, 0x89, 0x4A, 0x00}, {"Catastrophe"}},	// Catastrophe 1.04D
	{0x493CF2, {0xEB, 0xD4, 0x01, 0xDB, 0x75, 0x07, 0x8B, 0x1E, 0x83, 0xEE, 0xFC, 0x11, 0xDB, 0x11, 0xC9, 0xEB, 0x52, 0x31, 0xC9, 0x83, 0xE8, 0x03, 0x72, 0x11, 0xC1, 0xE0, 0x08, 0x8A, 0x06, 0x46, 0x83, 0xF0}, {"Chaos Bot"}},	// Chaos Bot 1.9.8
	{0x496CA6, {0x8D, 0xBE, 0x00, 0xC0, 0xF9, 0xFF, 0xC7, 0x87, 0xA8, 0x50, 0x07, 0x00, 0x95, 0x01, 0xA9, 0x0C, 0x57, 0x83, 0xCD, 0xFF, 0xEB, 0x0E, 0x90, 0x90, 0x90, 0x90, 0x8A, 0x06, 0x46, 0x88, 0x07, 0x47}, {"D-C DupeHack"}},	// D-C DupeHack 1.0
	{0x48037F, {0x73, 0x0B, 0x75, 0x28, 0x8B, 0x1E, 0x83, 0xEE, 0xFC, 0x11, 0xDB, 0x72, 0x1F, 0x48, 0x01, 0xDB, 0x75, 0x07, 0x8B, 0x1E, 0x83, 0xEE, 0xFC, 0x11, 0xDB, 0x11, 0xC0, 0xEB, 0xD4, 0x01, 0xDB, 0x75}, {"Dizzys DL Macro"}},	// Dizzys DL Macro v1.1
	{0x4551B0, {0x01, 0xDB, 0x75, 0x07, 0x8B, 0x1E, 0x83, 0xEE, 0xFC, 0x11, 0xDB, 0x11, 0xC0, 0x01, 0xDB, 0x73, 0x0B, 0x75, 0x19, 0x8B, 0x1E, 0x83, 0xEE, 0xFC, 0x11, 0xDB, 0x72, 0x10, 0x48, 0x01, 0xDB, 0x75}, {"Dizzys AutoBuff"}},	// Dizzys AutoBuff
	{0x4991C7, {0x73, 0x0B, 0x75, 0x28, 0x8B, 0x1E, 0x83, 0xEE, 0xFC, 0x11, 0xDB, 0x72, 0x1F, 0x48, 0x01, 0xDB, 0x75, 0x07, 0x8B, 0x1E, 0x83, 0xEE, 0xFC, 0x11, 0xDB, 0x11, 0xC0, 0xEB, 0xD4, 0x01, 0xDB, 0x75}, {"Auto Combo by bL"}},	// Auto Combo By bL
	{0x4585CC, {0xA1, 0xA0, 0xA0, 0x45, 0x00, 0x8B, 0x00, 0xBA, 0x10, 0x86, 0x45, 0x00, 0xE8, 0xBF, 0xBF, 0xFF, 0xFF, 0x8B, 0x0D, 0x80, 0xA1, 0x45, 0x00, 0xA1, 0xA0, 0xA0, 0x45, 0x00, 0x8B, 0x00, 0x8B, 0x15}, {"HCC"}},	// HCC
	{0x4C5F31, {0x7C, 0x23, 0x8B, 0x45, 0xFC, 0x80, 0x38, 0xC1, 0x75, 0x1B, 0x8B, 0x45, 0xFC, 0x80, 0x78, 0x02, 0xF3, 0x75, 0x12, 0x8B, 0x45, 0xFC, 0x80, 0x78, 0x03, 0x00, 0x75, 0x09, 0x8B, 0x45, 0xFC, 0x80}, {"Catastrophe"}},   // Catastrophe v0.1
	{0x4CCB71, {0xA1, 0x40, 0xFD, 0x4C, 0x00, 0x8B, 0x00, 0x8B, 0x4D, 0xFC, 0xBA, 0xD8, 0xCB, 0x4C, 0x00, 0xE8, 0xAB, 0xF2, 0xFF, 0xFF, 0x33, 0xDB, 0xE8, 0xE0, 0x75, 0xF3, 0xFF, 0x33, 0xC0, 0x5A, 0x59, 0x59}, {"Catastrophe"}},   // Catastrophe v1.2
	{0x4CA831, {0x89, 0x55, 0xFC, 0x8B, 0x45, 0xFC, 0xE8, 0xC8, 0xA3, 0xF3, 0xFF, 0x33, 0xC0, 0x55, 0x68, 0x96, 0xA8, 0x4C, 0x00, 0x64, 0xFF, 0x30, 0x64, 0x89, 0x20, 0x8B, 0x45, 0xFC, 0xE8, 0xC2, 0xA1, 0xF3}, {"Catastrophe"}},   // Catastrophe v1.2
	{0x44E08C, {0x64, 0x89, 0x25, 0x00, 0x00, 0x00, 0x00, 0x83, 0xEC, 0x58, 0x53, 0x56, 0x57, 0x89, 0x65, 0xE8, 0xFF, 0x15, 0x04, 0xF4, 0x48, 0x00, 0x33, 0xD2, 0x8A, 0xD4, 0x89, 0x15, 0xD8, 0x0A, 0x4D, 0x00}, {"WPePro"}},   // WPePro 0.9a
	{0x4851C2, {0x75, 0x1C, 0x53, 0x8B, 0xCE, 0xFF, 0x75, 0xE4, 0xFF, 0x75, 0xE0, 0x57, 0xE8, 0x90, 0x01, 0xFE, 0xFF, 0xEB, 0x0B, 0x53, 0x57, 0xFF, 0x76, 0x1C, 0xFF, 0x15, 0x9C, 0xF5, 0x48, 0x00, 0x8B, 0x86}, {"WPePro"}},   // WPePro 0.9a
	{0x4307BE, {0x75, 0x0A, 0x6A, 0x1C, 0xE8, 0x49, 0x01, 0x00, 0x00, 0x83, 0xC4, 0x04, 0xE8, 0xB1, 0x30, 0x00, 0x00, 0x85, 0xC0, 0x75, 0x0A, 0x6A, 0x10, 0xE8, 0x36, 0x01, 0x00, 0x00, 0x83, 0xC4, 0x04, 0xC7}, {"WPePro"}},   // WPePro 1.3
	{0x44397B, {0x75, 0x07, 0x8B, 0xCF, 0xE8, 0xF8, 0xF2, 0xFF, 0xFF, 0x5F, 0x5E, 0xC2, 0x08, 0x00, 0x53, 0x56, 0x8B, 0x74, 0x24, 0x0C, 0x57, 0xFF, 0x76, 0x04, 0xFF, 0x15, 0xC4, 0x9B, 0x49, 0x00, 0x8B, 0xD8}, {"WPePro"}},   // WPePro 1.3
	{0x402190, {0x55, 0x8B, 0xEC, 0x53, 0x56, 0x57, 0xBB, 0x00, 0x60, 0x40, 0x00, 0x66, 0x2E, 0xF7, 0x05, 0x1E, 0x28, 0x40, 0x00, 0x04, 0x00, 0x0F, 0x85, 0xDB, 0x00, 0x00, 0x00, 0x6A, 0x00, 0xFF, 0x15, 0x18}, {"Permit"}},   // Permit
	{0x402230, {0xE8, 0x07, 0x01, 0x00, 0x00, 0xB8, 0xFF, 0x00, 0x00, 0x00, 0x72, 0x36, 0xE8, 0x5E, 0x02, 0x00, 0x00, 0xE8, 0x3B, 0x04, 0x00, 0x00, 0xB8, 0xFF, 0x00, 0x00, 0x00, 0x72, 0x07, 0x53, 0xE8, 0x57}, {"Permit"}},   // Permit
	{0x48F5AE, {0x55, 0x8B, 0xEC, 0x6A, 0xFF, 0x68, 0x90, 0x8A, 0x4E, 0x00, 0x68, 0x8C, 0x44, 0x49, 0x00, 0x64, 0xA1, 0x00, 0x00, 0x00, 0x00, 0x50, 0x64, 0x89, 0x25, 0x00, 0x00, 0x00, 0x00, 0x83, 0xEC, 0x58}, {"T Search"}},   // T Search
	{0x48F619, {0xE8, 0xCE, 0x2D, 0x00, 0x00, 0x85, 0xC0, 0x75, 0x08, 0x6A, 0x10, 0xE8, 0xB2, 0x00, 0x00, 0x00, 0x59, 0x33, 0xF6, 0x89, 0x75, 0xFC, 0xE8, 0x63, 0x7A, 0x00, 0x00, 0xFF, 0x15, 0x68, 0x44, 0x4D}, {"T Search"}},   // T Search
	{0x40970E, {0x68, 0xB4, 0x98, 0x40, 0x00, 0x64, 0xA1, 0x00, 0x00, 0x00, 0x00, 0x50, 0x64, 0x89, 0x25, 0x00, 0x00, 0x00, 0x00, 0x83, 0xEC, 0x68, 0x53, 0x56, 0x57, 0x89, 0x65, 0xE8, 0x33, 0xDB, 0x89, 0x5D}, {"T Search"}},   // Speed Gear 5
	{0x568E9A, {0x68, 0xB8, 0xF9, 0x85, 0x13, 0xE8, 0x9D, 0x53, 0x01, 0x00, 0xB6, 0x94, 0x70, 0x4B, 0xE8, 0x87, 0xE5, 0x43, 0xE4, 0x43, 0x21, 0x7B, 0x18, 0xB7, 0xBB, 0x79, 0x6D, 0x3E, 0xF9, 0x1E, 0x5C, 0x7F}, {"Speed Gear"}},   // Speed Gear 6
	{0x512134, {0x75, 0x05, 0x8A, 0x16, 0x46, 0x12, 0xD2, 0x73, 0xEA, 0x02, 0xD2, 0x75, 0x05, 0x8A, 0x16, 0x46, 0x12, 0xD2, 0x73, 0x4F, 0x33, 0xC0, 0x02, 0xD2, 0x75, 0x05, 0x8A, 0x16, 0x46, 0x12, 0xD2, 0x0F}, {"WildProxy"}},   // WildProxy v1.0 Public
	{0x512014, {0xB8, 0x00, 0x00, 0x00, 0x00, 0x60, 0x0B, 0xC0, 0x74, 0x68, 0xE8, 0x00, 0x00, 0x00, 0x00, 0x58, 0x05, 0x53, 0x00, 0x00, 0x00, 0x80, 0x38, 0xE9, 0x75, 0x13, 0x61, 0xEB, 0x45, 0xDB, 0x2D, 0x37}, {"WildProxy"}},   // WildProxy v1.0 Public
	{0x401320, {0xEB, 0x10, 0x66, 0x62, 0x3A, 0x43, 0x2B, 0x2B, 0x48, 0x4F, 0x4F, 0x4B, 0x90, 0xE9, 0x98, 0x90, 0x46, 0x00, 0xA1, 0x8B, 0x90, 0x46, 0x00, 0xC1, 0xE0, 0x02, 0xA3, 0x8F, 0x90, 0x46, 0x00, 0x52}, {"WildProxy"}},   // WildProxy v0.1
	{0x4013F9, {0xE8, 0x1A, 0x21, 0x06, 0x00, 0xA3, 0x8B, 0x90, 0x46, 0x00, 0x83, 0xF8, 0x00, 0x73, 0x91, 0xB8, 0xFC, 0x00, 0x00, 0x00, 0xE8, 0x7A, 0xFF, 0xFF, 0xFF, 0xC3, 0x83, 0x3D, 0x8B, 0x90, 0x46, 0x00}, {"WildProxy"}},   // WildProxy v0.1
	{0x401320, {0xEB, 0x10, 0x66, 0x62, 0x3A, 0x43, 0x2B, 0x2B, 0x48, 0x4F, 0x4F, 0x4B, 0x90, 0xE9, 0x98, 0x20, 0x47, 0x00, 0xA1, 0x8B, 0x20, 0x47, 0x00, 0xC1, 0xE0, 0x02, 0xA3, 0x8F, 0x20, 0x47, 0x00, 0x52}, {"WildProxy"}},   // WildProxy v0.2
	{0x4013B0, {0xE8, 0xD7, 0xFF, 0xFF, 0xFF, 0xB9, 0xB4, 0x00, 0x00, 0x00, 0x51, 0x6A, 0x08, 0xE8, 0xF4, 0x00, 0x07, 0x00, 0x50, 0xE8, 0x60, 0x01, 0x07, 0x00, 0x0B, 0xC0, 0x75, 0x0A, 0xB8, 0xFD, 0x00, 0x00}, {"WildProxy"}},   // WildProxy v0.2
	{0x401350, {0xEB, 0x10, 0x66, 0x62, 0x3A, 0x43, 0x2B, 0x2B, 0x48, 0x4F, 0x4F, 0x4B, 0x90, 0xE9, 0x98, 0xC0, 0x47, 0x00, 0xA1, 0x8B, 0xC0, 0x47, 0x00, 0xC1, 0xE0, 0x02, 0xA3, 0x8F, 0xC0, 0x47, 0x00, 0x52}, {"WildProxy"}},   // WildProxy v0.3
	{0x401401, {0xE8, 0xB6, 0xFF, 0xFF, 0xFF, 0x50, 0x50, 0xFF, 0x35, 0x8B, 0xC0, 0x47, 0x00, 0xE8, 0xAD, 0x54, 0x07, 0x00, 0xFF, 0x35, 0x8B, 0xC0, 0x47, 0x00, 0xE8, 0xB6, 0x54, 0x07, 0x00, 0x5F, 0xC3, 0xB9}, {"WildProxy"}},   // WildProxy v0.3
	{0x40C0B0, {0x70, 0x6C, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6F, 0x6E, 0x31, 0x5C, 0x6F, 0x62, 0x6A, 0x5C, 0x52, 0x65, 0x6C, 0x65, 0x61, 0x73, 0x65, 0x5C, 0x53, 0x70, 0x65, 0x65, 0x64, 0x20, 0x48, 0x61, 0x63}, {"Speed Hack Simplifier"}},   // Speed Hack Simplifier 1.0
	{0x40C0B0, {0x70, 0x6C, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6F, 0x6E, 0x31, 0x5C, 0x6F, 0x62, 0x6A, 0x5C, 0x52, 0x65, 0x6C, 0x65, 0x61, 0x73, 0x65, 0x5C, 0x53, 0x70, 0x65, 0x65, 0x64, 0x20, 0x48, 0x61, 0x63}, {"Speed Hack Simplifier"}},   // Speed Hack Simplifier 1.1
	{0x40C0B0, {0x70, 0x6C, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6F, 0x6E, 0x31, 0x5C, 0x6F, 0x62, 0x6A, 0x5C, 0x52, 0x65, 0x6C, 0x65, 0x61, 0x73, 0x65, 0x5C, 0x53, 0x70, 0x65, 0x65, 0x64, 0x20, 0x48, 0x61, 0x63}, {"Speed Hack Simplifier"}},   // Speed Hack Simplifier 1.2
	{0x40E04E, {0x53, 0x68, 0x61, 0x64, 0x6F, 0x77, 0x42, 0x65, 0x61, 0x73, 0x74, 0x2E, 0x41, 0x53, 0x41, 0x46, 0x2D, 0x46, 0x32, 0x31, 0x34, 0x39, 0x42, 0x33, 0x31, 0x35, 0x35, 0x5C, 0x4D, 0x79, 0x20, 0x44}, {"Speed Hack Simplifier"}},   // Speed Hack Simplifier 1.3 Test
	{0x4320F0, {0x53, 0x00, 0x5F, 0x00, 0x56, 0x00, 0x45, 0x00, 0x52, 0x00, 0x53, 0x00, 0x49, 0x00, 0x4F, 0x00, 0x4E, 0x00, 0x5F, 0x00, 0x49, 0x00, 0x4E, 0x00, 0x46, 0x00, 0x4F, 0x00, 0x00, 0x00, 0x00, 0x00}, {"Cheat Happens"}},   // Cheat Happens v3.9b1
	{0x4340F0, {0x53, 0x00, 0x5F, 0x00, 0x56, 0x00, 0x45, 0x00, 0x52, 0x00, 0x53, 0x00, 0x49, 0x00, 0x4F, 0x00, 0x4E, 0x00, 0x5F, 0x00, 0x49, 0x00, 0x4E, 0x00, 0x46, 0x00, 0x4F, 0x00, 0x00, 0x00, 0x00, 0x00}, {"Cheat Happens"}},   // Cheat Happens v3.95b1/b2
	{0x4360F0, {0x53, 0x00, 0x5F, 0x00, 0x56, 0x00, 0x45, 0x00, 0x52, 0x00, 0x53, 0x00, 0x49, 0x00, 0x4F, 0x00, 0x4E, 0x00, 0x5F, 0x00, 0x49, 0x00, 0x4E, 0x00, 0x46, 0x00, 0x4F, 0x00, 0x00, 0x00, 0x00, 0x00}, {"Cheat Happens"}},   // Cheat Happens v3.95b3
	{0x440020, {0x5F, 0xE4, 0xAD, 0x60, 0x36, 0x56, 0x43, 0x4D, 0x92, 0xBD, 0xC8, 0x6F, 0xF8, 0xDE, 0xE1, 0xBD, 0x01, 0x00, 0x00, 0x00, 0x46, 0x3A, 0x5C, 0x44, 0x6F, 0x63, 0x75, 0x6D, 0x65, 0x6E, 0x74, 0x73}, {"Cheat Happens"}},   // Cheat Happens v3.96b2
	{0x41F001, {0x60, 0xE8, 0x03, 0x00, 0x00, 0x00, 0xE9, 0xEB, 0x04, 0x5D, 0x45, 0x55, 0xC3, 0xE8, 0x01, 0x00, 0x00, 0x00, 0xEB, 0x5D, 0xBB, 0xED, 0xFF, 0xFF, 0xFF, 0x03, 0xDD, 0x81, 0xEB, 0x00, 0xF0, 0x01}, {"xSpeed"}},   // !xSpeed.net 2
	{0x4217E0, {0x60, 0xBE, 0x00 ,0xD0, 0x41, 0x00, 0x8D, 0xBE, 0x00, 0x40, 0xFE, 0xFF, 0x57, 0xEB, 0x0B, 0x90, 0x8A, 0x06, 0x46, 0x88, 0x07, 0x47, 0x01, 0xDB, 0x75, 0x07, 0x8B, 0x1E, 0x83, 0xEE, 0xFC, 0x11}, {"xSpeed"}},   // !xSpeed.net 3
	{0x420630, {0x60, 0xBE, 0x00, 0xC0, 0x41, 0x00, 0x8D, 0xBE, 0x00, 0x50, 0xFE, 0xFF, 0x57, 0xEB, 0x0B, 0x90, 0x8A, 0x06, 0x46, 0x88, 0x07, 0x47, 0x01, 0xDB, 0x75, 0x07, 0x8B, 0x1E, 0x83, 0xEE, 0xFC, 0x11}, {"xSpeed"}},   // !xSpeed.net 6
	{0x5674D4, {0x55, 0x8B, 0xEC, 0x83, 0xC4, 0xEC, 0x53, 0x33, 0xC0, 0x89, 0x45, 0xEC, 0xB8, 0x2C, 0x70, 0x56, 0x00, 0xE8, 0xC6, 0xFA, 0xE9, 0xFF, 0x8B, 0x1D, 0x98, 0xD8, 0x56, 0x00, 0x33, 0xC0, 0x55, 0x68}, {"Cheat Engine"}},   // Cheat Engine 5.0
	{0x574EC0, {0x55, 0x8B, 0xEC, 0x83, 0xC4, 0xEC, 0x53, 0x33, 0xC0, 0x89, 0x45, 0xEC, 0xB8, 0xE0, 0x49, 0x57, 0x00, 0xE8, 0xCE, 0x20, 0xE9, 0xFF, 0x8B, 0x1D, 0xF8, 0xB8, 0x57, 0x00, 0x33, 0xC0, 0x55, 0x68}, {"Cheat Engine"}},   // Cheat Engine 5.1.1
	{0x574EEC, {0xE8, 0x8B, 0xEA, 0xF1, 0xFF, 0x8D, 0x45, 0xEC, 0xE8, 0x33, 0x56, 0xFF, 0xFF, 0xE8, 0x5A, 0x1F, 0xFD, 0xFF, 0x8B, 0x03, 0xBA, 0x68, 0x50, 0x57, 0x00, 0xE8, 0x6A, 0xE6, 0xF1, 0xFF, 0x8B, 0x03}, {"Cheat Engine"}},   // Cheat Engine 5.1
	{0x4CBD70, {0x8D, 0x85, 0x7C, 0xFE, 0xFF, 0xFF, 0xBA, 0x03, 0x00, 0x00, 0x00, 0xE8, 0xB0, 0x8F, 0xF3, 0xFF, 0x8D, 0x85, 0x88, 0xFE, 0xFF, 0xFF, 0xBA, 0x04, 0x00, 0x00, 0x00, 0xE8, 0xA0, 0x8F, 0xF3, 0xFF}, {"Cheat Engine"}},   // Cheat Engine 5.1
	{0x591F94, {0x55, 0x8B, 0xEC, 0x83, 0xC4, 0xEC, 0x53, 0x33, 0xC0, 0x89, 0x45, 0xEC, 0xB8, 0x5C, 0x1A, 0x59, 0x00, 0xE8, 0x26, 0x50, 0xE7, 0xFF, 0x8B, 0x1D, 0x20, 0x89, 0x59, 0x00, 0x33, 0xC0, 0x55, 0x68}, {"Cheat Engine"}},   // Cheat Engine 5.2
	{0x591FC0, {0xE8, 0x07, 0x23, 0xF0, 0xFF, 0x8D, 0x45, 0xEC, 0xE8, 0x1F, 0x4B, 0xFF, 0xFF, 0xE8, 0x76, 0x99, 0xFC, 0xFF, 0x8B, 0x03, 0xBA, 0x18, 0x21, 0x59, 0x00, 0xE8, 0xE6, 0x1E, 0xF0, 0xFF, 0x8B, 0x03}, {"Cheat Engine"}},   // Cheat Engine 5.2
	{0x5839E7, {0x8D, 0x45, 0xB0, 0x50, 0x6A, 0x08, 0x8D, 0x85, 0x78, 0xFF, 0xFF, 0xFF, 0x50, 0xA1, 0xB0, 0xA1, 0x59, 0x00, 0x8B, 0x55, 0xA4, 0x8B, 0x04, 0x90, 0x50, 0xA1, 0x28, 0xA1, 0x59, 0x00, 0x50, 0xA1}, {"Cheat Engine"}},   // Cheat Engine 5.2
	{0x5AA16C, {0xE8, 0x13, 0x40, 0xFF, 0xFF, 0xE8, 0x86, 0x2C, 0xFC, 0xFF, 0x8B, 0x03, 0xBA, 0xD4, 0xA2, 0x5A, 0x00, 0xE8, 0xC2, 0x98, 0xEE, 0xFF, 0x8B, 0x03, 0x83, 0xC0, 0x50, 0xBA, 0xF0, 0xA2, 0x5A, 0x00}, {"Cheat Engine"}},   // Cheat Engine 5.3
	{0x4CBE2B, {0x8D, 0x55, 0xF0, 0xB9, 0x04, 0x00, 0x00, 0x00, 0x8B, 0xC7, 0xE8, 0x02, 0x15, 0xF5, 0xFF, 0x8B, 0x55, 0xF0, 0x8B, 0xC3, 0xE8, 0x8C, 0xF7, 0xFD, 0xFF, 0x8D, 0x55, 0xF0, 0xB9, 0x04, 0x00, 0x00}, {"Cheat Engine"}},   // Cheat Engine 5.3
	{0x5CF354, {0x55, 0x8B, 0xEC, 0x83, 0xC4, 0xEC, 0x53, 0x33, 0xC0, 0x89, 0x45, 0xEC, 0xB8, 0x44, 0xED, 0x5C, 0x00, 0xE8, 0x62, 0x7E, 0xE3, 0xFF, 0x8B, 0x1D, 0xD4, 0x5A, 0x5D, 0x00, 0x33, 0xC0, 0x55, 0x68}, {"Cheat Engine"}},   // Cheat Engine 5.4
	{0x5CF440, {0xE8, 0x37, 0xA3, 0xFC, 0xFF, 0xE8, 0x8E, 0x96, 0xF9, 0xFF, 0x8B, 0x03, 0xBA, 0xA8, 0xF5, 0x5C, 0x00, 0xE8, 0x2A, 0xBD, 0xEC, 0xFF, 0x8B, 0x03, 0x83, 0xC0, 0x50, 0xBA, 0xC4, 0xF5, 0x5C, 0x00}, {"Cheat Engine"}},   // Chear Engine 5.4
	{0x5CF43D, {0x8D, 0x45, 0xEC, 0xE8, 0x37, 0xA3, 0xFC, 0xFF, 0xE8, 0x8E, 0x96, 0xF9, 0xFF, 0x8B, 0x03, 0xBA, 0xA8, 0xF5, 0x5C, 0x00, 0xE8, 0x2A, 0xBD, 0xEC, 0xFF, 0x8B, 0x03, 0x83, 0xC0, 0x50, 0xBA, 0xC4}, {"Cheat Engine"}},   // Cheat Engine 5.4 
	{0x5FECF4, {0x55, 0x8B, 0xEC, 0x83, 0xC4, 0xEC, 0x53, 0x33, 0xC0, 0x89, 0x45, 0xEC, 0xB8, 0xE4, 0xE4, 0x5F, 0x00, 0xE8, 0x9E, 0x89, 0xE0, 0xFF, 0x8B, 0x1D, 0xEC, 0x62, 0x60, 0x00, 0x33, 0xC0, 0x55, 0x68}, {"Cheat Engine"}},   // Cheat Engine 5.5
	{0x5FECF4, {0x55, 0x8B, 0xEC, 0x83, 0xC4, 0xEC, 0x53, 0x33, 0xC0, 0x89, 0x45, 0xEC, 0xB8, 0xE4, 0xE4, 0x5F, 0x00, 0xE8, 0x9E, 0x89, 0xE0, 0xFF, 0x8B, 0x1D, 0xEC, 0x62, 0x60, 0x00, 0x33, 0xC0, 0x55, 0x68}, {"Cheat Engine"}},   // Cheat Engine 5.5
	{0x5FED5B, {0xE8, 0x10, 0xC3, 0xE9, 0xFF, 0x8B, 0x0D, 0x64, 0x5D, 0x60, 0x00, 0x8B, 0x03, 0x8B, 0x15, 0x00, 0x1D, 0x55, 0x00, 0xE8, 0xFD, 0xC2, 0xE9, 0xFF, 0x8B, 0x0D, 0xC8, 0x5E, 0x60, 0x00, 0x8B, 0x03}, {"Cheat Engine"}},   // Cheat Engine 5.5
	{0x12C5B8, {0x75, 0x07, 0x8B, 0x1E, 0x83, 0xEE, 0xFC, 0x11, 0xDB, 0x72, 0xED, 0xB8, 0x01, 0x00, 0x00, 0x00, 0x01, 0xDB, 0x75, 0x07, 0x8B, 0x1E, 0x83, 0xEE, 0xFC, 0x11, 0xDB, 0x11, 0xC0, 0x01, 0xDB, 0x73}, {"UoPilot"}},   // UoPilot
	{0x401414, {0x68, 0xA4, 0x22, 0x40, 0x00, 0xE8, 0xEE, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x8E, 0xF7, 0x08}, {"Speed Hack"}},   // Speed Hack 99.62t
	{0x401E04, {0x68, 0x28, 0x20, 0x41, 0x00, 0xE8, 0xEE, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE3, 0x90, 0x67, 0x9A}, {"SpotHack"}},   // SpotHack 1.1
	{0x454181, {0xBE, 0x00, 0x90, 0x43, 0x00, 0x8D, 0xBE, 0x00, 0x80, 0xFC, 0xFF, 0x57, 0x83, 0xCD, 0xFF, 0xEB, 0x10, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x8A, 0x06, 0x46, 0x88, 0x07, 0x47, 0x01, 0xDB, 0x75}, {"MJB Perfect DL Bot"}},   // MJB Perfect DL Bot
	{0x59F001, {0xE8, 0x00, 0x00, 0x00, 0x00, 0x5D, 0x50, 0x51, 0xEB, 0x0F, 0xB9, 0xEB, 0x0F, 0xB8, 0xEB, 0x07, 0xB9, 0xEB, 0x0F, 0x90, 0xEB, 0x08, 0xFD, 0xEB, 0x0B, 0xF2, 0xEB, 0xF5, 0xEB, 0xF6, 0xF2, 0xEB}, {"HahaMu"}},   // HahaMu 1.16
	{0x40FBB6, {0x55, 0x8B, 0xEC, 0x6A, 0xFF, 0x68, 0x48, 0x3D, 0x41, 0x00, 0x68, 0x3C, 0xFD, 0x40, 0x00, 0x64, 0xA1, 0x00, 0x00, 0x00, 0x00, 0x50, 0x64, 0x89, 0x25, 0x00, 0x00, 0x00, 0x00, 0x83, 0xEC, 0x68}, {"Game Speed Changer"}},   // Game Speed Changer
	{0x473BBC, {0x55, 0x8B, 0xEC, 0x83, 0xC4, 0xF4, 0xB8, 0x04, 0x3A, 0x47, 0x00, 0xE8, 0xE0, 0x26, 0xF9, 0xFF, 0xA1, 0x1C, 0x5C, 0x47, 0x00, 0x8B, 0x00, 0xE8, 0x04, 0xBE, 0xFC, 0xFF, 0x8B, 0x0D, 0xE4, 0x5C}, {"Capotecheat"}},   // Capotecheat(deltacholl)
	{0x55DE8C, {0x87, 0xDE, 0xF7, 0xFA, 0x9F, 0xCA, 0x05, 0x5D, 0x83, 0x67, 0x02, 0x86, 0x59, 0xBF, 0xF1, 0xB6, 0x5B, 0x1F, 0x04, 0x6E, 0x79, 0x00, 0x18, 0x57, 0x8A, 0xD0, 0xA6, 0xFA, 0x8E, 0x5A, 0xE0, 0xD8}, {"Cheat4Fun"}},   // Cheat4Fun v0.9 Beta
	{0x493C90, {0x60, 0xBE, 0x00, 0xC0, 0x45, 0x00, 0x8D, 0xBE, 0x00, 0x50, 0xFA, 0xFF, 0x57, 0xEB, 0x0B, 0x90, 0x8A, 0x06, 0x46, 0x88, 0x07, 0x47, 0x01, 0xDB, 0x75, 0x07, 0x8B, 0x1E, 0x83, 0xEE, 0xFC, 0x11}, {"AutoBuffDC"}},   // AutoBuff D-C
	{0x416014, {0xB8, 0x00, 0x00, 0x00, 0x00, 0x60, 0x0B, 0xC0, 0x74, 0x68, 0xE8, 0x00, 0x00, 0x00, 0x00, 0x58, 0x05, 0x53, 0x00, 0x00, 0x00, 0x80, 0x38, 0xE9, 0x75, 0x13, 0x61, 0xEB, 0x45, 0xDB, 0x2D, 0x37}, {"HastyMu"}},   // HastyMu v0.1
	{0x416014, {0xB8, 0x00, 0x00, 0x00, 0x00, 0x60, 0x0B, 0xC0, 0x74, 0x68, 0xE8, 0x00, 0x00, 0x00, 0x00, 0x58, 0x05, 0x53, 0x00, 0x00, 0x00, 0x80, 0x38, 0xE9, 0x75, 0x13, 0x61, 0xEB, 0x45, 0xDB, 0x2D, 0x37}, {"HastyMu"}},   // HastyMu v0.2
	{0x401704, {0x68, 0x84, 0x24, 0x40, 0x00, 0xE8, 0xEE, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x72, 0x80, 0x61, 0xF6}, {"MuPie"}},   // MuPie HG v2
	{0x401B28, {0x68, 0xD8, 0x2A, 0x40, 0x00, 0xE8, 0xF0, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xB9, 0xE3, 0x0E, 0xC3}, {"MuPie"}},   // MuPie HG v3
	{0x48C000, {0xFC, 0xCF, 0xAB, 0xE7, 0x6D, 0x3A, 0x89, 0xBC, 0xB2, 0x9F, 0x73, 0x23, 0xA8, 0xFE, 0xB6, 0x49, 0x5D, 0x39, 0x5D, 0x8A, 0xCB, 0x63, 0x8D, 0xEA, 0x7D, 0x2B, 0x5F, 0xC3, 0xB1, 0xE9, 0x83, 0x29}, {"Lipsum"}},   // Lipsum v1
	{0x48C000, {0xFC, 0xCF, 0xAB, 0xE7, 0x6D, 0x3A, 0x89, 0xBC, 0xB2, 0x9F, 0x73, 0x23, 0xA8, 0xFE, 0xB6, 0x49, 0x5D, 0x39, 0x5D, 0x8A, 0xCB, 0x63, 0x8D, 0xEA, 0x7D, 0x2B, 0x5F, 0xC3, 0xB1, 0xE9, 0x83, 0x29}, {"Lipsum"}},   // Lipsum v2
	{0xAF4014, {0xB8, 0x00, 0x00, 0x00, 0x00, 0x60, 0x0B, 0xC0, 0x74, 0x68, 0xE8, 0x00, 0x00, 0x00, 0x00, 0x58, 0x05, 0x53, 0x00, 0x00, 0x00, 0x80, 0x38, 0xE9, 0x75, 0x13, 0x61, 0xEB, 0x45, 0xDB, 0x2D, 0x37}, {"FunnyZhyper"}},   // FunnyZhyper v5
	{0x4380F0, {0x53, 0x00, 0x5F, 0x00, 0x56, 0x00, 0x45, 0x00, 0x52, 0x00, 0x53, 0x00, 0x49, 0x00, 0x4F, 0x00, 0x4E, 0x00, 0x5F, 0x00, 0x49, 0x00, 0x4E, 0x00, 0x46, 0x00, 0x4F, 0x00, 0x00, 0x00, 0x00, 0x00}, {"MuPie"}},   // MuPie v2 Beta
	{0x453180, {0x60, 0xBE, 0x00, 0x80, 0x43, 0x00, 0x8D, 0xBE, 0x00, 0x90, 0xFC, 0xFF, 0x57, 0x83, 0xCD, 0xFF, 0xEB, 0x10, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x8A, 0x06, 0x46, 0x88, 0x07, 0x47, 0x01, 0xDB}, {"Auto_Buff"}},   // Auto_Buff v5 Hack Rat
	{0x454180, {0x60, 0xBE, 0x00, 0x80, 0x43, 0x00, 0x8D, 0xBE, 0x00, 0x90, 0xFC, 0xFF, 0x57, 0x83, 0xCD, 0xFF, 0xEB, 0x10, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x8A, 0x06, 0x46, 0x88, 0x07, 0x47, 0x01, 0xDB}, {"Auto_Buff"}},   // Auto_Buff v9 Hack Rat
	{0x453180, {0x60, 0xBE, 0x00, 0x80, 0x43, 0x00, 0x8D, 0xBE, 0x00, 0x90, 0xFC, 0xFF, 0x57, 0x83, 0xCD, 0xFF, 0xEB, 0x10, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x8A, 0x06, 0x46, 0x88, 0x07, 0x47, 0x01, 0xDB}, {"AE/HYBRID AEBOT"}},   // AE/HYBRID AEBOT 0.9
	{0x4011EC, {0x68, 0xEC, 0xBC, 0x40, 0x00, 0xE8, 0xEE, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6C, 0x8F, 0x98, 0x36}, {"Jewel Drop Beta"}},   // Jewel Drop Beta
	{0x488070, {0x60, 0xBE, 0x00, 0x80, 0x45, 0x00, 0x8D, 0xBE, 0x00, 0x90, 0xFA, 0xFF, 0x57, 0xEB, 0x0B, 0x90, 0x8A, 0x06, 0x46, 0x88, 0x07, 0x47, 0x01, 0xDB, 0x75, 0x07, 0x8B, 0x1E, 0x83, 0xEE, 0xFC, 0x11}, {"Chaos Bot"}},   // Chaos Bot 2.1.0
	{0x48A220, {0x60, 0xBE, 0x00, 0xA0, 0x45, 0x00, 0x8D, 0xBE, 0x00, 0x70, 0xFA, 0xFF, 0x57, 0xEB, 0x0B, 0x90, 0x8A, 0x06, 0x46, 0x88, 0x07, 0x47, 0x01, 0xDB, 0x75, 0x07, 0x8B, 0x1E, 0x83, 0xEE, 0xFC, 0x11}, {"MU-SS4 Speed Hack"}},   // MU-SS4 Speed Hack 1.2
	{0x47A1C0, {0x60, 0xBE, 0x00, 0xF0, 0x45, 0x00, 0x8D, 0xBE, 0x00, 0x20, 0xFA, 0xFF, 0x57, 0x83, 0xCD, 0xFF, 0xEB, 0x10, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x8A, 0x06, 0x46, 0x88, 0x07, 0x47, 0x01, 0xDB}, {"Bot MG-DK-ELF"}},   // Bot MG-DK-ELF
	{0x47A1C0, {0x60, 0xBE, 0x00, 0xF0, 0x45, 0x00, 0x8D, 0xBE, 0x00, 0x20, 0xFA, 0xFF, 0x57, 0x83, 0xCD, 0xFF, 0xEB, 0x10, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x8A, 0x06, 0x46, 0x88, 0x07, 0x47, 0x01, 0xDB}, {"Comercio Bot"}},   // Comercio Bot
	{0x455180, {0x60, 0xBE, 0x00, 0xA0, 0x43, 0x00, 0x8D, 0xBE, 0x00, 0x70, 0xFC, 0xFF, 0x57, 0x83, 0xCD, 0xFF, 0xEB, 0x10, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x8A, 0x06, 0x46, 0x88, 0x07, 0x47, 0x01, 0xDB}, {"Dizzys Auto Buff"}},   // Dizzys Auto Buff
	{0x401344, {0xEB, 0x10, 0x66, 0x62, 0x3A, 0x43, 0x2B, 0x2B, 0x48, 0x4F, 0x4F, 0x4B, 0x90, 0xE9, 0x98, 0x00, 0x47, 0x00, 0xA1, 0x8B, 0x00, 0x47, 0x00, 0xC1, 0xE0, 0x02, 0xA3, 0x8F, 0x00, 0x47, 0x00, 0x52}, {"GodMode"}},   // GodMode
	{0x435000, {0x60, 0xE8, 0x00, 0x00, 0x00, 0x00, 0x5D, 0x50, 0x51, 0xEB, 0x0F, 0xB9, 0xEB, 0x0F, 0xB8, 0xEB, 0x07, 0xB9, 0xEB, 0x0F, 0x90, 0xEB, 0x08, 0xFD, 0xEB, 0x0B, 0xF2, 0xEB, 0xF5, 0xEB, 0xF6, 0xF2}, {"Mu Cheater"}},   // Mu Cheater 16
	{0x401318, {0x68, 0xA4, 0x1F, 0x40, 0x00, 0xE8, 0xEE, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xEC, 0x82, 0xBE, 0x15}, {"MU Utilidades"}},   // MU Utilidades
	{0x4441C0, {0x60, 0xBE, 0x00, 0x00, 0x43, 0x00, 0x8D, 0xBE, 0x00, 0x10, 0xFD, 0xFF, 0x57, 0x83, 0xCD, 0xFF, 0xEB, 0x10, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x8A, 0x06, 0x46, 0x88, 0x07, 0x47, 0x01, 0xDB}, {"MuBot"}},   // MuBot
	{0x481870, {0x60, 0xBE, 0x00, 0x30, 0x45, 0x00, 0x8D, 0xBE, 0x00, 0xE0, 0xFA, 0xFF, 0x57, 0x83, 0xCD, 0xFF, 0xEB, 0x10, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x8A, 0x06, 0x46, 0x88, 0x07, 0x47, 0x01, 0xDB}, {"Snd Bot"}},   // Snd Bot 1.5
	{0x401E04, {0x68, 0x28, 0x20, 0x41, 0x00, 0xE8, 0xEE, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE3, 0x90, 0x67, 0x9A}, {"SpotHack"}},   // SpotHack 1.1
	{0x534000, {0x8D, 0x8D, 0x51, 0x2E, 0x40, 0x00, 0x50, 0x51, 0x50, 0xFF, 0x95, 0xC7, 0x2C, 0x40, 0x00, 0x89, 0x85, 0x61, 0x2E, 0x40, 0x00, 0x58, 0x8D, 0x8D, 0x0F, 0x2E, 0x40, 0x00, 0x51, 0x50, 0xFF, 0x95}, {"Godlike"}},   // Godlike (Magic Shield)
	{0x555030, {0x74, 0x37, 0x8D, 0x85, 0xFB, 0x2C, 0x40, 0x00, 0x50, 0xFF, 0x95, 0xD7, 0x2C, 0x40, 0x00, 0x8D, 0x8D, 0x51, 0x2E, 0x40, 0x00, 0x50, 0x51, 0x50, 0xFF, 0x95, 0xC7, 0x2C, 0x40, 0x00, 0x89, 0x85}, {"Godlike"}},   // Godlike
	{0x401462, {0xE8, 0xD3, 0x16, 0x0E, 0x00, 0x8B, 0xD0, 0xE8, 0x8A, 0x67, 0x0D, 0x00, 0x5A, 0xE8, 0xE8, 0x66, 0x0D, 0x00, 0xE8, 0xBF, 0x67, 0x0D, 0x00, 0x6A, 0x00, 0xE8, 0xC4, 0x7B, 0x0D, 0x00, 0x59, 0x68}, {"Mu Philiphinas Cheat "}},   // Mu Philiphinas Cheat II
	{0x401000, {0xB8, 0x44, 0xFF, 0x41, 0x00, 0x50, 0x64, 0xFF, 0x35, 0x00, 0x00, 0x00, 0x00, 0x64, 0x89, 0x25, 0x00, 0x00, 0x00, 0x00, 0x33, 0xC0, 0x89, 0x08, 0x50, 0x45, 0x43, 0x6F, 0x6D, 0x70, 0x61, 0x63}, {"ZhyperMu"}},   // ZhyperMu Packet Editor
	{0x496CA0, {0x60, 0xBE, 0x00, 0x50, 0x46, 0x00, 0x8D, 0xBE, 0x00, 0xC0, 0xF9, 0xFF, 0xC7, 0x87, 0xA8, 0x50, 0x07, 0x00, 0x95, 0x01, 0xA9, 0x0C, 0x57, 0x83, 0xCD, 0xFF, 0xEB, 0x0E, 0x90, 0x90, 0x90, 0x90}, {"D-C DupeHack"}},   // D-C DupeHack 1.0
	{0x499190, {0x60, 0xBE, 0x00, 0x30, 0x46, 0x00, 0x8D, 0xBE, 0x00, 0xE0, 0xF9, 0xFF, 0x57, 0xEB, 0x0B, 0x90, 0x8A, 0x06, 0x46, 0x88, 0x07, 0x47, 0x01, 0xDB, 0x75, 0x07, 0x8B, 0x1E, 0x83, 0xEE, 0xFC, 0x11}, {"Auto Combo"}},   // Auto Combo
	{0x470B74, {0x55, 0x8B, 0xEC, 0x83, 0xC4, 0xF0, 0xB8, 0x3C, 0x09, 0x47, 0x00, 0xE8, 0xEC, 0x53, 0xF9, 0xFF, 0xA1, 0x44, 0x2A, 0x47, 0x00, 0x8B, 0x00, 0xE8, 0xF8, 0x34, 0xFE, 0xFF, 0xA1, 0x44, 0x2A, 0x47}, {"AIO Bots"}},   // AIO Bots (Collection)
	{0x6B5000, {0x60, 0xE8, 0x00, 0x00, 0x00, 0x00, 0x5D, 0x50, 0x51, 0x0F, 0xCA, 0xF7, 0xD2, 0x9C, 0xF7, 0xD2, 0x0F, 0xCA, 0xEB, 0x0F, 0xB9, 0xEB, 0x0F, 0xB8, 0xEB, 0x07, 0xB9, 0xEB, 0x0F, 0x90, 0xEB, 0x08}, {"Nsauditor 1.9.1"}},	// Nsauditor 1.9.1 (Packet Tool)
	{0x401000, {0xE8, 0x9B, 0x27, 0x00, 0x00, 0x50, 0xE8, 0xA7, 0x22, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x90, 0x55, 0x8B, 0xEC, 0x53, 0x56, 0x57, 0x8B, 0x7D, 0x10, 0x8B, 0x5D, 0x0C, 0x8B, 0x75, 0x08, 0x8B}, {"D-C Bypass Public Version"}},   // D-C Bypass Public Version (Darkcheats)
	{0x492B44, {0x55, 0x8B, 0xEC, 0x83, 0xC4, 0xF0, 0xB8, 0x1C, 0x12, 0x49, 0x00, 0xE8, 0x00, 0x41, 0xF7, 0xFF, 0xA1, 0x30, 0x5C, 0x49, 0x00, 0x8B, 0x00, 0xE8, 0x38, 0x6A, 0xFD, 0xFF, 0x8B, 0x0D, 0x68, 0x5D}, {"wall"}},	// wall
	{0x44EB02, {0xE8, 0xC5, 0xC0, 0x00, 0x00, 0xE9, 0x78, 0xFE, 0xFF, 0xFF, 0xCC, 0xCC, 0xCC, 0xCC, 0x51, 0x8D, 0x4C, 0x24, 0x08, 0x2B, 0xC8, 0x83, 0xE1, 0x0F, 0x03, 0xC1, 0x1B, 0xC9, 0x0B, 0xC1, 0x59, 0xE9}, {"Process Explorer"}},	// Process Explorer 11.33
	{0x499CB0, {0x60, 0xBE, 0x00, 0x20, 0x46, 0x00, 0x8D, 0xBE, 0x00, 0xF0, 0xF9, 0xFF, 0x57, 0xEB, 0x0B, 0x90, 0x8A, 0x06, 0x46, 0x88, 0x07, 0x47, 0x01, 0xDB, 0x75, 0x07, 0x8B, 0x1E, 0x83, 0xEE, 0xFC, 0x11}, {"Perfect AutoPotion"}},	// Perfect AutoPotion
	{0x414014, {0xB8, 0x00, 0x00, 0x00, 0x00, 0x60, 0x0B, 0xC0, 0x74, 0x68, 0xE8, 0x00, 0x00, 0x00, 0x00, 0x58, 0x05, 0x53, 0x00, 0x00, 0x00, 0x80, 0x38, 0xE9, 0x75, 0x13, 0x61, 0xEB, 0x45, 0xDB, 0x2D, 0x37}, {"HastyMu"}},	// HastyMu 1.1.0
	{0x690002, {0xE8, 0x03, 0x00, 0x00, 0x00, 0xE9, 0xEB, 0x04, 0x5D, 0x45, 0x55, 0xC3, 0xE8, 0x01, 0x00, 0x00, 0x00, 0xEB, 0x5D, 0xBB, 0xED, 0xFF, 0xFF, 0xFF, 0x03, 0xDD, 0x81, 0xEB, 0x00, 0x00, 0x29, 0x00}, {"ArtMoney"}},   // ArtMoney SE v7.31 
	{0x401AA8, {0xE8, 0x49, 0x24, 0x00, 0x00, 0xE9, 0x16, 0xFE, 0xFF, 0xFF, 0x55, 0x8B, 0xEC, 0x81, 0xEC, 0x28, 0x03, 0x00, 0x00, 0xA3, 0x98, 0xD0, 0x40, 0x00, 0x89, 0x0D, 0x94, 0xD0, 0x40, 0x00, 0x89, 0x15}, {"JoyToKey"}},   // JoyToKey  
	{0x4010B0, {0x68, 0xC8, 0x2A, 0x40, 0x00, 0xE8, 0xF0, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x69, 0x7D, 0xF4, 0xB1}, {"codez"}},   // codez
	{0x43FC4F, {0x90, 0x61, 0xBE, 0x00, 0x90, 0x43, 0x00, 0x8D, 0xBE, 0x00, 0x80, 0xFC, 0xFF, 0x57, 0x83, 0xCD, 0xFF, 0xEB, 0x10, 0xEB, 0x00, 0xEB, 0xEA, 0xEB, 0xE8, 0x8A, 0x06, 0x46, 0x88, 0x07, 0x47, 0x01}, {"Mush"}},   // Mush
	{0x401000, {0xB8, 0xA0, 0x37, 0x48, 0x00, 0x50, 0x64, 0xFF, 0x35, 0x00, 0x00, 0x00, 0x00, 0x64, 0x89, 0x25, 0x00, 0x00, 0x00, 0x00, 0x33, 0xC0, 0x89, 0x08, 0x50, 0x45, 0x43, 0x6F, 0x6D, 0x70, 0x61, 0x63}, {"NoNameMini"}},   // NoNameMini
	{0x48D080, {0x60, 0xBE, 0x00, 0xD0, 0x45, 0x00, 0x8D, 0xBE, 0x00, 0x40, 0xFA, 0xFF, 0x57, 0xEB, 0x0B, 0x90, 0x8A, 0x06, 0x46, 0x88, 0x07, 0x47, 0x01, 0xDB, 0x75, 0x07, 0x8B, 0x1E, 0x83, 0xEE, 0xFC, 0x11}, {"Tablet2"}},   // Tablet2
	{0x44E284, {0x55, 0x8B, 0xEC, 0x83, 0xC4, 0xF4, 0xB8, 0x14, 0xE1, 0x44, 0x00, 0xE8, 0x00, 0x7D, 0xFB, 0xF0, 0xA1, 0xCC, 0x08, 0x45, 0x00, 0x8B, 0x00, 0xE8, 0xA8, 0xEA, 0xFE, 0xFF, 0x8B, 0x0D, 0x94, 0x09}, {"Razor_Code"}},   // Razor_Code  
	{0x4032EE, {0x55, 0x8B, 0xEC, 0x6A, 0xFF, 0x68, 0x30, 0x43, 0x40, 0x00, 0x68, 0x80, 0x34, 0x40, 0x00, 0x64, 0xA1, 0x00, 0x00, 0x00, 0x00, 0x50, 0x64, 0x89, 0x25, 0x00, 0x00, 0x00, 0x00, 0x83, 0xEC, 0x68}, {"Dupe-Full "}},   // Dupe-Full 
	{0x4A851C, {0x40, 0xAE, 0x80, 0x7C, 0x41, 0xB7, 0x80, 0x7C, 0x7B, 0x1D, 0x80, 0x7C, 0x12, 0xCB, 0x81, 0x7C, 0xEA, 0x07, 0x3A, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6F}, {"Ultimate Cheat"}},   // Ultimate Cheat
	{0x415014, {0xB8, 0x00, 0x00, 0x00, 0x00, 0x60, 0x0B, 0xC0, 0x74, 0x68, 0xE8, 0x00, 0x00, 0x00, 0x00, 0x58, 0x05, 0x53, 0x00, 0x00, 0x00, 0x80, 0x38, 0xE9, 0x75, 0x13, 0x61, 0xEB, 0x45, 0xDB, 0x2D, 0x37}, {"HastyMu"}},	// HastyMu 1.8.0
	{0x5053C8, {0x68, 0x3A, 0x38, 0x21, 0xDB, 0xE8, 0xA9, 0xAB, 0x07, 0x00, 0x72, 0xAA, 0x00, 0x72, 0x5C, 0xC2, 0x7C, 0x4E, 0x82, 0xBB, 0xD7, 0x3E, 0x76, 0xFD, 0x88, 0x49, 0x9C, 0xA4, 0xBA, 0x74, 0x61, 0x37}, {"SpeederXP"}},	// SpeederXP
	{0xFC0000, {0x55, 0x89, 0xE5, 0x81, 0xC5, 0x04, 0x00, 0x00, 0x00, 0x83, 0xED, 0x04, 0x55, 0xFF, 0x74, 0x24, 0x04, 0x5D, 0x8F, 0x04, 0x24, 0x5C, 0x50, 0x89, 0xE0, 0x05, 0x04, 0x00, 0x00, 0x00, 0x83, 0xE8}, {"ModzMu"}},	// ModzMu
	{0x492B44, {0x55, 0x8B, 0xEC, 0x83, 0xC4, 0xF0, 0xB8, 0x1C, 0x12, 0x49, 0x00, 0xE8, 0x00, 0x41, 0xF7, 0xFF, 0xA1, 0x30, 0x5C, 0x49, 0x00, 0x8B, 0x00, 0xE8, 0x38, 0x6A, 0xFD, 0xFF, 0x8B, 0x0D, 0x68, 0x5D}, {"Injector"}},	// Injector
	{0x4013B0, {0x68, 0x5C, 0x87, 0x42, 0x00, 0xE8, 0xEE, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x2F, 0x4D, 0x37}, {"Hit Count"}},   // Hit Count
	{0x4691A0, {0x60, 0xBE, 0x00, 0xE0, 0x44, 0x00, 0x8D, 0xBE, 0x00, 0x30, 0xFB, 0xFF, 0x57, 0x83, 0xCD, 0xFF, 0xEB, 0x10, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x8A, 0x06, 0x46, 0x88, 0x07, 0x47, 0x01, 0xDB}, {"Super Bot"}},	// Super Bot
	{0x514F2C, {0x55, 0x8B, 0xEC, 0x83, 0xC4, 0xF0, 0xB8, 0x60, 0x3C, 0x51, 0x00, 0xE8, 0x98, 0x33, 0xEF, 0xFF, 0xE8, 0xF7, 0xE9, 0xFF, 0xFF, 0xE8, 0x52, 0xEA, 0xFF, 0xFF, 0xE8, 0x3D, 0xEB, 0xFF, 0xFF, 0xA1}, {"Game Booster"}}, // Game Booster
	{0x416AB0, {0x55, 0x8B, 0xEC, 0x6A, 0xFF, 0x68, 0xC0, 0xC0, 0x43, 0x00, 0x68, 0x24, 0xA0, 0x41, 0x00, 0x64, 0xA1, 0x00, 0x00, 0x00, 0x00, 0x50, 0x64, 0x89, 0x25, 0x00, 0x00, 0x00, 0x00, 0x83, 0xEC, 0x58}, {"Game Speed Adjuster"}}, // Game Speed Adjuster
	{0x4C8A60, {0x60, 0xBE, 0x00, 0x00, 0x48, 0x00, 0x8D, 0xBE, 0x00, 0x10, 0xF8, 0xFF, 0xC7, 0x87, 0x8C, 0xE7, 0x08, 0x00, 0x5C, 0xE8, 0xFE, 0x30, 0x57, 0x83, 0xCD, 0xFF, 0xEB, 0x0E, 0x90, 0x90, 0x90, 0x90}, {"Simple Net Speed"}}, // Simple Net Speed 1.5
	{0x401000, {0xA1, 0x63, 0x70, 0x43, 0x00, 0xC1, 0xE0, 0x02, 0xA3, 0x67, 0x70, 0x43, 0x00, 0x57, 0x51, 0x33, 0xC0, 0xBF, 0x4C, 0xC7, 0x43, 0x00, 0xB9, 0xAC, 0x07, 0x44, 0x00, 0x3B, 0xCF, 0x76, 0x05, 0x2B}, {"Cheat 'O Matic"}}, // Cheat 'O Matic
	{0x426ECA, {0x55, 0x8B, 0xEC, 0x6A, 0xFF, 0x68, 0x90, 0x7A, 0x43, 0x00, 0x68, 0x34, 0x70, 0x42, 0x00, 0x64, 0xA1, 0x00, 0x00, 0x00, 0x00, 0x50, 0x64, 0x89, 0x25, 0x00, 0x00, 0x00, 0x00, 0x83, 0xEC, 0x68}, {"Speed Gear"}}, // Speed Gear v.7.1
	{0x410086, {0x55, 0x8B, 0xEC, 0x6A, 0xFF, 0x68, 0x98, 0x3D, 0x41, 0x00, 0x68, 0x0C, 0x02, 0x41, 0x00, 0x64, 0xA1, 0x00, 0x00, 0x00, 0x00, 0x50, 0x64, 0x89, 0x25, 0x00, 0x00, 0x00, 0x00, 0x83, 0xEC, 0x68}, {"Game Speed Changer"}}, // Game Speed Changer
	{0x44E08C, {0x64, 0x89, 0x25, 0x00, 0x00, 0x00, 0x00, 0x83, 0xEC, 0x58, 0x53, 0x56, 0x57, 0x89, 0x65, 0xE8, 0xFF, 0x15, 0x04, 0xF4, 0x48, 0x00, 0x33, 0xD2, 0x8A, 0xD4, 0x89, 0x15, 0xD8, 0x0A, 0x4D, 0x00}, {"WPePro"}}, // WPePro 0.9x
	{0x4307BE, {0x75, 0x0A, 0x6A, 0x1C, 0xE8, 0x49, 0x01, 0x00, 0x00, 0x83, 0xC4, 0x04, 0xE8, 0xB1, 0x30, 0x00, 0x00, 0x85, 0xC0, 0x75, 0x0A, 0x6A, 0x10, 0xE8, 0x36, 0x01, 0x00, 0x00, 0x83, 0xC4, 0x04, 0xC7}, {"WPePro"}}, // WPePro 1.3
	{0x40970E, {0x68, 0xB4, 0x98, 0x40, 0x00, 0x64, 0xA1, 0x00, 0x00, 0x00, 0x00, 0x50, 0x64, 0x89, 0x25, 0x00, 0x00, 0x00, 0x00, 0x83, 0xEC, 0x68, 0x53, 0x56, 0x57, 0x89, 0x65, 0xE8, 0x33, 0xDB, 0x89, 0x5D}, {"Speed Gear"}}, // Speed Gear 5
	{0x12C5B8, {0x75, 0x07, 0x8B, 0x1E, 0x83, 0xEE, 0xFC, 0x11, 0xDB, 0x72, 0xED, 0xB8, 0x01, 0x00, 0x00, 0x00, 0x01, 0xDB, 0x75, 0x07, 0x8B, 0x1E, 0x83, 0xEE, 0xFC, 0x11, 0xDB, 0x11, 0xC0, 0x01, 0xDB, 0x73}, {"UoPilot"}}, // UoPilot
	{0x5AA16C, {0xE8, 0x13, 0x40, 0xFF, 0xFF, 0xE8, 0x86, 0x2C, 0xFC, 0xFF, 0x8B, 0x03, 0xBA, 0xD4, 0xA2, 0x5A, 0x00, 0xE8, 0xC2, 0x98, 0xEE, 0xFF, 0x8B, 0x03, 0x83, 0xC0, 0x50, 0xBA, 0xF0, 0xA2, 0x5A, 0x00}, {"Cheat Engine"}}, // Cheat Engine 5.3
	{0x40E04E, {0x53, 0x68, 0x61, 0x64, 0x6F, 0x77, 0x42, 0x65, 0x61, 0x73, 0x74, 0x2E, 0x41, 0x53, 0x41, 0x46, 0x2D, 0x46, 0x32, 0x31, 0x34, 0x39, 0x42, 0x33, 0x31, 0x35, 0x35, 0x5C, 0x4D, 0x79, 0x20, 0x44}, {"Speed Hack Simplifier"}}, // Speed Hack Simplifier 1.3
	{0x401414, {0x68, 0xA4, 0x22, 0x40, 0x00, 0xE8, 0xEE, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x8E, 0xF7, 0x08}, {"Speed Hack"}}, // 99.62t Speed Hack
	{0x401E04, {0x68, 0x28, 0x20, 0x41, 0x00, 0xE8, 0xEE, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE3, 0x90, 0x67, 0x9A}, {"SpotHack"}}, // SpotHack 1.1
	{0x454181, {0xBE, 0x00, 0x90, 0x43, 0x00, 0x8D, 0xBE, 0x00, 0x80, 0xFC, 0xFF, 0x57, 0x83, 0xCD, 0xFF, 0xEB, 0x10, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x8A, 0x06, 0x46, 0x88, 0x07, 0x47, 0x01, 0xDB, 0x75}, {"MJB Prfect DL Bot"}}, // MJB Prfect DL Bot
	{0x40C0B0, {0x70, 0x6C, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6F, 0x6E, 0x31, 0x5C, 0x6F, 0x62, 0x6A, 0x5C, 0x52, 0x65, 0x6C, 0x65, 0x61, 0x73, 0x65, 0x5C, 0x53, 0x70, 0x65, 0x65, 0x64, 0x20, 0x48, 0x61, 0x63}, {"Speed Hack Simplifier"}}, // Speed Hack Simplifier 1.1{
	{0x59F001, {0xE8, 0x00, 0x00, 0x00, 0x00, 0x5D, 0x50, 0x51, 0xEB, 0x0F, 0xB9, 0xEB, 0x0F, 0xB8, 0xEB, 0x07, 0xB9, 0xEB, 0x0F, 0x90, 0xEB, 0x08, 0xFD, 0xEB, 0x0B, 0xF2, 0xEB, 0xF5, 0xEB, 0xF6, 0xF2, 0xEB}, {"HahaMu"}}, // HahaMu 1.16{
	{0x5674D4, {0x55, 0x8B, 0xEC, 0x83, 0xC4, 0xEC, 0x53, 0x33, 0xC0, 0x89, 0x45, 0xEC, 0xB8, 0x2C, 0x70, 0x56, 0x00, 0xE8, 0xC6, 0xFA, 0xE9, 0xFF, 0x8B, 0x1D, 0x98, 0xD8, 0x56, 0x00, 0x33, 0xC0, 0x55, 0x68}, {"Cheat Engine"}}, // Cheat Engine 5.0{
	{0x574EC0, {0x55, 0x8B, 0xEC, 0x83, 0xC4, 0xEC, 0x53, 0x33, 0xC0, 0x89, 0x45, 0xEC, 0xB8, 0xE0, 0x49, 0x57, 0x00, 0xE8, 0xCE, 0x20, 0xE9, 0xFF, 0x8B, 0x1D, 0xF8, 0xB8, 0x57, 0x00, 0x33, 0xC0, 0x55, 0x68}, {"Cheat Engine"}}, // Cheat Egine 5.1.1{
	{0x591F94, {0x55, 0x8B, 0xEC, 0x83, 0xC4, 0xEC, 0x53, 0x33, 0xC0, 0x89, 0x45, 0xEC, 0xB8, 0x5C, 0x1A, 0x59, 0x00, 0xE8, 0x26, 0x50, 0xE7, 0xFF, 0x8B, 0x1D, 0x20, 0x89, 0x59, 0x00, 0x33, 0xC0, 0x55, 0x68}, {"Cheat Engine"}}, // Cheat Engine 5.2{
	{0x5CF354, {0x78, 0xAA, 0x4A, 0x00, 0x48, 0xAA, 0x4A, 0x00, 0xFC, 0x17, 0x4A, 0x00, 0xCC, 0x17, 0x4A, 0x00, 0xB0, 0x22, 0x52, 0x00, 0x80, 0x22, 0x52, 0x00, 0x10, 0x12, 0x4A, 0x00, 0xE0, 0x11, 0x4A, 0x00}, {"Cheat Engine"}}, // Cheat Engine 5.4{
	{0x40FBB6, {0x55, 0x8B, 0xEC, 0x6A, 0xFF, 0x68, 0x48, 0x3D, 0x41, 0x00, 0x68, 0x3C, 0xFD, 0x40, 0x00, 0x64, 0xA1, 0x00, 0x00, 0x00, 0x00, 0x50, 0x64, 0x89, 0x25, 0x00, 0x00, 0x00, 0x00, 0x83, 0xEC, 0x68}, {"Game Speed Changer"}}, // Game Speed Changer{
	{0x438510, {0x60, 0xBE, 0x00, 0x20, 0x42, 0x00, 0x8D, 0xBE, 0x00, 0xF0, 0xFD, 0xFF, 0x57, 0x83, 0xCD, 0xFF, 0xEB, 0x10, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x8A, 0x06, 0x46, 0x88, 0x07, 0x47, 0x01, 0xDB}, {"eXpLoRer"}}, // eXpLoRer{
	{0x4BCFA4, {0x55, 0x8B, 0xEC, 0x83, 0xC4, 0xF0, 0x53, 0x56, 0x57, 0xB8, 0xC4, 0xCC, 0x4B, 0x00, 0xE8, 0xB1, 0x9B, 0xF4, 0xFF, 0x8B, 0x3D, 0xB0, 0x03, 0x4C, 0x00, 0x68, 0xDC, 0xD0, 0x4B, 0x00, 0x6A, 0x04}, {"Xelerator"}}, // Xelerator 1.4
	{0x473BBC, {0x55, 0x8B, 0xEC, 0x83, 0xC4, 0xF4, 0xB8, 0x04, 0x3A, 0x47, 0x00, 0xE8, 0xE0, 0x26, 0xF9, 0xFF, 0xA1, 0x1C, 0x5C, 0x47, 0x00, 0x8B, 0x00, 0xE8, 0x04, 0xBE, 0xFC, 0xFF, 0x8B, 0x0D, 0xE4, 0x5C}, {"Capotecheat"}}, // Capotecheat(deltacholl){
	{0x55DE8C, {0x87, 0xDE, 0xF7, 0xFA, 0x9F, 0xCA, 0x05, 0x5D, 0x83, 0x67, 0x02, 0x86, 0x59, 0xBF, 0xF1, 0xB6, 0x5B, 0x1F, 0x04, 0x6E, 0x79, 0x00, 0x18, 0x57, 0x8A, 0xD0, 0xA6, 0xFA, 0x8E, 0x5A, 0xE0, 0xD8}, {"Cheat4Fun"}}, // Cheat4Fun v0.9 Beta{
	{0x4217E0, {0x60, 0xBE, 0x00, 0xD0, 0x41, 0x00, 0x8D, 0xBE, 0x00, 0x40, 0xFE, 0xFF, 0x57, 0xEB, 0x0B, 0x90, 0x8A, 0x06, 0x46, 0x88, 0x07, 0x47, 0x01, 0xDB, 0x75, 0x07, 0x8B, 0x1E, 0x83, 0xEE, 0xFC, 0x11}, {"xSpeed"}}, // !xSpeed.net3{
	{0x493C90, {0x60, 0xBE, 0x00, 0xC0, 0x45, 0x00, 0x8D, 0xBE, 0x00, 0x50, 0xFA, 0xFF, 0x57, 0xEB, 0x0B, 0x90, 0x8A, 0x06, 0x46, 0x88, 0x07, 0x47, 0x01, 0xDB, 0x75, 0x07, 0x8B, 0x1E, 0x83, 0xEE, 0xFC, 0x11}, {"AutoBuff"}}, // AutoBuff D-C{
	{0x4320F0, {0x53, 0x00, 0x5F, 0x00, 0x56, 0x00, 0x45, 0x00, 0x52, 0x00, 0x53, 0x00, 0x49, 0x00, 0x4F, 0x00, 0x4E, 0x00, 0x5F, 0x00, 0x49, 0x00, 0x4E, 0x00, 0x46, 0x00, 0x4F, 0x00, 0x00, 0x00, 0x00, 0x00}, {"Cheat"}}, // Cheat Happens v3.9b1{
	{0x4340F0, {0x53, 0x00, 0x5F, 0x00, 0x56, 0x00, 0x45, 0x00, 0x52, 0x00, 0x53, 0x00, 0x49, 0x00, 0x4F, 0x00, 0x4E, 0x00, 0x5F, 0x00, 0x49, 0x00, 0x4E, 0x00, 0x46, 0x00, 0x4F, 0x00, 0x00, 0x00, 0x00, 0x00}, {"Cheat"}}, // Cheat Happens v3.95b1/b2{
	{0x4360F0, {0x53, 0x00, 0x5F, 0x00, 0x56, 0x00, 0x45, 0x00, 0x52, 0x00, 0x53, 0x00, 0x49, 0x00, 0x4F, 0x00, 0x4E, 0x00, 0x5F, 0x00, 0x49, 0x00, 0x4E, 0x00, 0x46, 0x00, 0x4F, 0x00, 0x00, 0x00, 0x00, 0x00}, {"Cheat"}}, // Cheat Happens v3.95b3{
	{0x440020, {0x5F, 0xE4, 0xAD, 0x60, 0x36, 0x56, 0x43, 0x4D, 0x92, 0xBD, 0xC8, 0x6F, 0xF8, 0xDE, 0xE1, 0xBD, 0x01, 0x00, 0x00, 0x00, 0x46, 0x3A, 0x5C, 0x44, 0x6F, 0x63, 0x75, 0x6D, 0x65, 0x6E, 0x74, 0x73}, {"Cheat"}}, // Cheat Happens v3.96b2{
	{0x416014, {0xB8, 0x00, 0x00, 0x00, 0x00, 0x60, 0x0B, 0xC0, 0x74, 0x68, 0xE8, 0x00, 0x00, 0x00, 0x00, 0x58, 0x05, 0x53, 0x00, 0x00, 0x00, 0x80, 0x38, 0xE9, 0x75, 0x13, 0x61, 0xEB, 0x45, 0xDB, 0x2D, 0x37}, {"HastyMu"}}, // HastyMu v0.2{
	{0xAF4014, {0xB8, 0x00, 0x00, 0x00, 0x00, 0x60, 0x0B, 0xC0, 0x74, 0x68, 0xE8, 0x00, 0x00, 0x00, 0x00, 0x58, 0x05, 0x53, 0x00, 0x00, 0x00, 0x80, 0x38, 0xE9, 0x75, 0x13, 0x61, 0xEB, 0x45, 0xDB, 0x2D, 0x37}, {"FunnyZhyper"}}, // FunnyZhyper v5{
	{0x401704, {0x68, 0x84, 0x24, 0x40, 0x00, 0xE8, 0xEE, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x72, 0x80, 0x61, 0xF6}, {"MuPie"}}, // MuPie HG v2{
	{0x401B28, {0x68, 0xD8, 0x2A, 0x40, 0x00, 0xE8, 0xF0, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xB9, 0xE3, 0x0E, 0xC3}, {"MuPie"}}, // MuPie HG v3{
	{0x41F04A, {0x8D, 0x5D, 0x5E, 0x53, 0x50, 0xFF, 0x95, 0x49, 0x0F, 0x00, 0x00, 0x89, 0x85, 0x4D, 0x05, 0x00, 0x00, 0x8D, 0x5D, 0x6B, 0x53, 0x57, 0xFF, 0x95, 0x49, 0x0F, 0x00, 0x00, 0x89, 0x85, 0x51, 0x05}, {"xSpeedNet"}}, // !xSpeedNet{
	{0x4727CC, {0x55, 0x8B, 0xEC, 0x83, 0xC4, 0xF0, 0xB8, 0x90, 0x14, 0x47, 0x00, 0xE8, 0x78, 0x3E, 0xF9, 0xFF, 0xA1, 0xA0, 0x53, 0x47, 0x00, 0x8B, 0x00, 0xE8, 0x50, 0x93, 0xFE, 0xFF, 0xA1, 0xA0, 0x53, 0x47}, {"WPePro"}}, // Muwars.lv Hack{
	{0x4388C0, {0x00, 0x00, 0x00, 0x00, 0x00, 0x4A, 0x49, 0x4A, 0x84, 0x86, 0x84, 0x00, 0x00, 0x63, 0x29, 0x59, 0xDE, 0x31, 0x9E, 0xFF, 0x31, 0x9E, 0xFF, 0x31, 0x9E, 0xFF, 0x31, 0x9E, 0xFF, 0x31, 0x9E, 0xFF}, {"Mupie"}}, // Mupie X{
	{0x414014, {0xB8, 0x00, 0x00, 0x00, 0x00, 0x60, 0x0B, 0xC0, 0x74, 0x68, 0xE8, 0x00, 0x00, 0x00, 0x00, 0x58, 0x05, 0x53, 0x00, 0x00, 0x00, 0x80, 0x38, 0xE9, 0x75, 0x13, 0x61, 0xEB, 0x45, 0xDB, 0x2D, 0x37}, {"HastyMU"}}, // HastyMU Client overclocker{
	{0x568E9A, {0x68, 0xB8, 0xF9, 0x85, 0x13, 0xE8, 0x9D, 0x53, 0x01, 0x00, 0xB6, 0x94, 0x70, 0x4B, 0xE8, 0x87, 0xE5, 0x43, 0xE4, 0x43, 0x21, 0x7B, 0x18, 0xB7, 0xBB, 0x79, 0x6D, 0x3E, 0xF9, 0x1E, 0x5C, 0x7F}, {"Speed"}}, // Speed Gear 6{
	{0x496CA0, {0x60, 0xBE, 0x00, 0x50, 0x46, 0x00, 0x8D, 0xBE, 0x00, 0xC0, 0xF9, 0xFF, 0xC7, 0x87, 0xA8, 0x50, 0x07, 0x00, 0x95, 0x01, 0xA9, 0x0C, 0x57, 0x83, 0xCD, 0xFF, 0xEB, 0x0E, 0x90, 0x90, 0x90, 0x90}, {"Dup97"}}, // Dup97-98{
	{0x488070, {0x60, 0xBE, 0x00, 0x80, 0x45, 0x00, 0x8D, 0xBE, 0x00, 0x90, 0xFA, 0xFF, 0x57, 0xEB, 0x0B, 0x90, 0x8A, 0x06, 0x46, 0x88, 0x07, 0x47, 0x01, 0xDB, 0x75, 0x07, 0x8B, 0x1E, 0x83, 0xEE, 0xFC, 0x11}, {"Pinnacle"}}, // Pinnacle{
	{0x43FC56, {0x8D, 0xBE, 0x00, 0x80, 0xFC, 0xFF, 0x57, 0x83, 0xCD, 0xFF, 0xEB, 0x10, 0xEB, 0x00, 0xEB, 0xEA, 0xEB, 0xE8, 0x8A, 0x06, 0x46, 0x88, 0x07, 0x47, 0x01, 0xDB, 0x75, 0x07, 0x8B, 0x1E, 0x83, 0xEE}, {"MUSHv2"}}, // MUSHv2.00{
	{0x401A50, {0x68, 0x64, 0x36, 0x40, 0x00, 0xE8, 0xEE, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBD, 0x7B, 0x32, 0x7A}, {"ElFerProxy1"}}, // ElFerProxy1.05{
	{0x4019C8, {0x68, 0xF0, 0x33, 0x40, 0x00, 0xE8, 0xF0, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xDB, 0x94, 0x29, 0x57}, {"ElFerProxy"}}, // ElFerProxy{
	{0x401318, {0xEB, 0x10, 0x66, 0x62, 0x3A, 0x43, 0x2B, 0x2B, 0x48, 0x4F, 0x4F, 0x4B, 0x90, 0xE9, 0x98, 0x50, 0x46, 0x00, 0xA1, 0x8B, 0x50, 0x46, 0x00, 0xC1, 0xE0, 0x02, 0xA3, 0x8F, 0x50, 0x46, 0x00, 0x52}, {"WildPower"}}, // WildPower Skill Hack{
	{0x401338, {0xEB, 0x10, 0x66, 0x62, 0x3A, 0x43, 0x2B, 0x2B, 0x48, 0x4F, 0x4F, 0x4B, 0x90, 0xE9, 0x98, 0x50, 0x48, 0x00, 0xA1, 0x8B, 0x50, 0x48, 0x00, 0xC1, 0xE0, 0x02, 0xA3, 0x8F, 0x50, 0x48, 0x00, 0x52}, {"Speed"}}, // Speed Hack by Ziomal 0.8{
	{0x4014A0, {0x68, 0x04, 0x18, 0x40, 0x00, 0xE8, 0xF0, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xAF, 0xE5, 0xB4, 0x0B}, {"Proxy"}}, // Proxy Hit Hack{
	{0x4029B8, {0x68, 0x74, 0x2B, 0x40, 0x00, 0xE8, 0xF0, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x0B, 0x17, 0x81, 0xDD}, {"Vault"}}, // Vault Blaster (CBlaster){
	{0x402650, {0x68, 0x0C, 0x28, 0x40, 0x00, 0xE8, 0xEE, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x1F, 0x76, 0x85, 0x44}, {"Vault"}}, // Vault Blaster (VBlaster){
	{0x4027D8, {0x8D, 0x4B, 0x00, 0x00, 0x01, 0x13, 0x1D, 0x11, 0x1D, 0x16, 0x72, 0x3D, 0x01, 0x00, 0x70, 0xA2, 0x11, 0x1D, 0x17, 0x72, 0xB5, 0x00, 0x00, 0x70, 0xA2, 0x11, 0x1D, 0x15, 0x28, 0x1F, 0x00, 0x00}, {"MuCeRool"}}, // MuCeRool{
	{0x402868, {0x52, 0x92, 0x3B, 0x8D, 0xD5, 0x33, 0x78, 0xB7, 0x32, 0x71, 0xA3, 0x37, 0x73, 0xBF, 0x45, 0x85, 0xBC, 0x28, 0x62, 0x8C, 0x1B, 0x51, 0x6A, 0x15, 0x3A, 0x60, 0x24, 0x51, 0x6C, 0x49, 0x7C, 0xBA}, {"Speed"}}, // Speed Hack Simplifier{
	{0x402190, {0x55, 0x8B, 0xEC, 0x53, 0x56, 0x57, 0xBB, 0x00, 0x60, 0x40, 0x00, 0x66, 0x2E, 0xF7, 0x05, 0x1E, 0x28, 0x40, 0x00, 0x04, 0x00, 0x0F, 0x85, 0xDB, 0x00, 0x00, 0x00, 0x6A, 0x00, 0xFF, 0x15, 0x18}, {"PermEdit"}}, // PermEdit{
	{0x40104C, {0x68, 0xF4, 0x6C, 0x43, 0x00, 0xE8, 0xEE, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xDD, 0x62, 0xBF, 0x68}, {"Trade"}}, // Trade Runner{
	{0x512950, {0x55, 0x8B, 0xEC, 0x83, 0xC4, 0xF0, 0x53, 0xB8, 0x50, 0x23, 0x51, 0x00, 0xE8, 0x63, 0x3C, 0xEF, 0xFF, 0x8B, 0x1D, 0x7C, 0xA2, 0x51, 0x00, 0x8B, 0x03, 0xE8, 0xA6, 0x87, 0xF6, 0xFF, 0x8B, 0x0D}, {"Redox"}}, // Redox packet editor{
	{0x401414, {0xEB, 0x10, 0x66, 0x62, 0x3A, 0x43, 0x2B, 0x2B, 0x48, 0x4F, 0x4F, 0x4B, 0x90, 0xE9, 0x98, 0xD0, 0x4B, 0x00, 0xA1, 0x8B, 0xD0, 0x4B, 0x00, 0xC1, 0xE0, 0x02, 0xA3, 0x8F, 0xD0, 0x4B, 0x00, 0x52}, {"WildProxyS3Ep2"}}, // WildProxyS3Ep2{
	{0x4F3590, {0x60, 0xBE, 0x00, 0x10, 0x4A, 0x00, 0x8D, 0xBE, 0x00, 0x00, 0xF6, 0xFF, 0xC7, 0x87, 0xD0, 0x94, 0x0B, 0x00, 0xFA, 0x0D, 0x24, 0x48, 0x57, 0x83, 0xCD, 0xFF, 0xEB, 0x0E, 0x90, 0x90, 0x90, 0x90}, {"Uopilot"}}, // Uopilot 107 beta wk{
	{0x41D7A0, {0x55, 0x8B, 0xEC, 0x6A, 0xFF, 0x68, 0x68, 0x2F, 0x46, 0x00, 0x68, 0x28, 0x3D, 0x42, 0x00, 0x64, 0xA1, 0x00, 0x00, 0x00, 0x00, 0x50, 0x64, 0x89, 0x25, 0x00, 0x00, 0x00, 0x00, 0x83, 0xC4, 0xA8}, {"LANScan"}}, // LANScan{
	{0x438FD8, {0x55, 0x8B, 0xEC, 0x83, 0xC4, 0xF4, 0xB8, 0xD8, 0x8E, 0x43, 0x00, 0xE8, 0x58, 0xC1, 0xFC, 0xFF, 0xA1, 0x84, 0xAB, 0x43, 0x00, 0x8B, 0x00, 0xE8, 0xC4, 0x18, 0xFF, 0xFF, 0x8B, 0x0D, 0x00, 0xAC}, {"TradeBug"}}, // TradeBug{
	{0x403956, {0x6A, 0x60, 0x68, 0x08, 0x82, 0x41, 0x00, 0xE8, 0x6A, 0x20, 0x00, 0x00, 0xBF, 0x94, 0x00, 0x00, 0x00, 0x8B, 0xC7, 0xE8, 0x62, 0xFF, 0xFF, 0xFF, 0x89, 0x65, 0xE8, 0x8B, 0xF4, 0x89, 0x3E, 0x56}, {"NewStatAdderDude"}}, // NewStatAdderDude{
	{0x460DDC, {0x55, 0x8B, 0xEC, 0x83, 0xC4, 0xF4, 0xB8, 0x0C, 0x0C, 0x46, 0x00, 0xE8, 0xF4, 0x51, 0xFA, 0xFF, 0xA1, 0xA4, 0x31, 0x46, 0x00, 0x8B, 0x00, 0xE8, 0x20, 0x1B, 0xFE, 0xFF, 0xA1, 0xA4, 0x31, 0x46}, {"mhs"}}, // mhs{
	{0x4441C0, {0x60, 0xBE, 0x00, 0x00, 0x43, 0x00, 0x8D, 0xBE, 0x00, 0x10, 0xFD, 0xFF, 0x57, 0x83, 0xCD, 0xFF, 0xEB, 0x10, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x8A, 0x06, 0x46, 0x88, 0x07, 0x47, 0x01, 0xDB}, {"bot"}}, // bot{
	{0x499190, {0x60, 0xBE, 0x00, 0x30, 0x46, 0x00, 0x8D, 0xBE, 0x00, 0xE0, 0xF9, 0xFF, 0x57, 0xEB, 0x0B, 0x90, 0x8A, 0x06, 0x46, 0x88, 0x07, 0x47, 0x01, 0xDB, 0x75, 0x07, 0x8B, 0x1E, 0x83, 0xEE, 0xFC, 0x11}, {"Auto_Combo_de_TuX"}}, // Auto_Combo_de_TuX-HaCk{
	{0x401AA8, {0xE8, 0x49, 0x24, 0x00, 0x00, 0xE9, 0x16, 0xFE, 0xFF, 0xFF, 0x55, 0x8B, 0xEC, 0x81, 0xEC, 0x28, 0x03, 0x00, 0x00, 0xA3, 0x98, 0xD0, 0x40, 0x00, 0x89, 0x0D, 0x94, 0xD0, 0x40, 0x00, 0x89, 0x15}, {"JoyToKey"}}, // JoyToKey{
	{0x45C71C, {0x55, 0x8B, 0xEC, 0x83, 0xC4, 0xF0, 0xB8, 0x24, 0xB0, 0x45, 0x00, 0xE8, 0xA0, 0x9E, 0xFA, 0xFF, 0xA1, 0x1C, 0xEA, 0x45, 0x00, 0x8B, 0x00, 0xE8, 0x7C, 0xC4, 0xFF, 0xFF, 0xA1, 0x1C, 0xEA, 0x45}, {"Project2"}}, // Project2{
	{0x4011D4, {0x68, 0x50, 0x8E, 0x40, 0x00, 0xE8, 0xF0, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0xF6, 0xC3, 0xA8}, {"HackSpeed"}}, // HackSpeed{
	{0x49CBFC, {0x55, 0x8B, 0xEC, 0x83, 0xC4, 0xF0, 0xB8, 0x40, 0xB0, 0x49, 0x00, 0xE8, 0x0C, 0xA1, 0xF6, 0xFF, 0xA1, 0x38, 0xF9, 0x49, 0x00, 0x8B, 0x00, 0xE8, 0x34, 0xAB, 0xFC, 0xFF, 0xA1, 0x38, 0xF9, 0x49}, {"4Muwars"}}, // 4Muwars.lv{
	{0x403139, {0x6A, 0x60, 0x68, 0xF0, 0x96, 0x40, 0x00, 0xE8, 0x1F, 0x0D, 0x00, 0x00, 0xBF, 0x94, 0x00, 0x00, 0x00, 0x8B, 0xC7, 0xE8, 0x2F, 0xFD, 0xFF, 0xFF, 0x89, 0x65, 0xE8, 0x8B, 0xF4, 0x89, 0x3E, 0x56}, {"proxy"}}, // mu proxy server{
	{0x49CBFC, {0x55, 0x8B, 0xEC, 0x83, 0xC4, 0xF0, 0xB8, 0x40, 0xB0, 0x49, 0x00, 0xE8, 0x0C, 0xA1, 0xF6, 0xFF, 0xA1, 0x38, 0xF9, 0x49, 0x00, 0x8B, 0x00, 0xE8, 0x34, 0xAB, 0xFC, 0xFF, 0xA1, 0x38, 0xF9, 0x49}, {"PACHME"}}, // PACHME!!{
	{0x494BFC, {0x55, 0x8B, 0xEC, 0x83, 0xC4, 0xF0, 0xB8, 0x6C, 0x35, 0x49, 0x00, 0xE8, 0xB8, 0x20, 0xF7, 0xFF, 0xA1, 0x18, 0x79, 0x49, 0x00, 0x8B, 0x00, 0xE8, 0x04, 0x23, 0xFD, 0xFF, 0xA1, 0x18, 0x79, 0x49}, {"PiLL"}}, // PiLL{
	{0x41E2B0, {0x60, 0xBE, 0x00, 0x30, 0x41, 0x00, 0x8D, 0xBE, 0x00, 0xE0, 0xFE, 0xFF, 0x57, 0x83, 0xCD, 0xFF, 0xEB, 0x10, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x8A, 0x06, 0x46, 0x88, 0x07, 0x47, 0x01, 0xDB}, {"smsniff"}}, // smsniff{
	{0x4737D4, {0x55, 0x8B, 0xEC, 0x83, 0xC4, 0xF0, 0xB8, 0xE4, 0x1E, 0x47, 0x00, 0xE8, 0x70, 0x2E, 0xF9, 0xFF, 0xA1, 0xA0, 0x63, 0x47, 0x00, 0x8B, 0x00, 0xE8, 0x38, 0x83, 0xFE, 0xFF, 0xA1, 0xA0, 0x63, 0x47}, {"ZhyperMuV4"}}, // ZhyperMuV4.0{
	{0x420001, {0x60, 0xE8, 0x03, 0x00, 0x00, 0x00, 0xE9, 0xEB, 0x04, 0x5D, 0x45, 0x55, 0xC3, 0xE8, 0x01, 0x00, 0x00, 0x00, 0xEB, 0x5D, 0xBB, 0xED, 0xFF, 0xFF, 0xFF, 0x03, 0xDD, 0x81, 0xEB, 0x00, 0x00, 0x02}, {"xSpeedPro"}}, // !xSpeedPro{
	{0x41F001, {0x60, 0xE8, 0x03, 0x00, 0x00, 0x00, 0xE9, 0xEB, 0x04, 0x5D, 0x45, 0x55, 0xC3, 0xE8, 0x01, 0x00, 0x00, 0x00, 0xEB, 0x5D, 0xBB, 0xED, 0xFF, 0xFF, 0xFF, 0x03, 0xDD, 0x81, 0xEB, 0x00, 0xF0, 0x01}, {"xSpeedPro"}}, // !xSpeednet{
	{0x480340, {0x60, 0xBE, 0x00, 0x10, 0x45, 0x00, 0x8D, 0xBE, 0x00, 0x00, 0xFB, 0xFF, 0x57, 0x83, 0xCD, 0xFF, 0xEB, 0x10, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x8A, 0x06, 0x46, 0x88, 0x07, 0x47, 0x01, 0xDB}, {"Dizzys"}}, // Dizzys DL macro v1.1{
	{0x48DB10, {0x60, 0xBE, 0x00, 0x40, 0x46, 0x00, 0x8D, 0xBE, 0x00, 0xD0, 0xF9, 0xFF, 0x57, 0x83, 0xCD, 0xFF, 0xEB, 0x10, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x8A, 0x06, 0x46, 0x88, 0x07, 0x47, 0x01, 0xDB}, {"JoyToKey"}}, // JoyToKey{
	{0x499190, {0x60, 0xBE, 0x00, 0x30, 0x46, 0x00, 0x8D, 0xBE, 0x00, 0xE0, 0xF9, 0xFF, 0x57, 0xEB, 0x0B, 0x90, 0x8A, 0x06, 0x46, 0x88, 0x07, 0x47, 0x01, 0xDB, 0x75, 0x07, 0x8B, 0x1E, 0x83, 0xEE, 0xFC, 0x11}, {"autobuff"}}, // autobuff-Elf{
	{0x46E9E0, {0x60, 0xBE, 0x00, 0x00, 0x44, 0x00, 0x8D, 0xBE, 0x00, 0x10, 0xFC, 0xFF, 0x57, 0x89, 0xE5, 0x8D, 0x9C, 0x24, 0x80, 0xC1, 0xFF, 0xFF, 0x31, 0xC0, 0x50, 0x39, 0xDC, 0x75, 0xFB, 0x46, 0x46, 0x53}, {"auto_heal_by_bL"}}, // auto_heal_by_bL{
	{0x453180, {0x60, 0xBE, 0x00, 0x80, 0x43, 0x00, 0x8D, 0xBE, 0x00, 0x90, 0xFC, 0xFF, 0x57, 0x83, 0xCD, 0xFF, 0xEB, 0x10, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x8A, 0x06, 0x46, 0x88, 0x07, 0x47, 0x01, 0xDB}, {"JoyToKey"}}, // JoyToKey-aebot-Pipen{
	{0x466ADF, {0x00, 0x88, 0xAF, 0x25, 0xE1, 0xA0, 0x05, 0x00, 0x00, 0x10, 0xB0, 0x10, 0x00, 0xA8, 0x0C, 0x36, 0x00, 0x20, 0x3C, 0x66, 0xE2, 0xA0, 0x05, 0x00, 0x00, 0x10, 0xB1, 0x10, 0x00, 0x28, 0x0E, 0x36}, {"A L T I M I T"}}, // [ A L T I M I T ]{
	{0x459180, {0x60, 0xBE, 0x00, 0xE0, 0x43, 0x00, 0x8D, 0xBE, 0x00, 0x30, 0xFC, 0xFF, 0x57, 0x83, 0xCD, 0xFF, 0xEB, 0x10, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x8A, 0x06, 0x46, 0x88, 0x074, 0x70, 0x1D, 0xB}, {"AutoBuff"}}, // AutoBuff+Macro{
	{0x4044E6, {0x6A, 0x60, 0x68, 0xA8, 0x92, 0x41, 0x00, 0xE8, 0x9A, 0x1F, 0x00, 0x00, 0xBF, 0x94, 0x00, 0x00, 0x00, 0x8B, 0xC7, 0xE8, 0x62, 0xFF, 0xFF, 0xFF, 0x89, 0x65, 0xE8, 0x8B, 0xF4, 0x89, 0x3E, 0x56}, {"DKbotDude"}}, // DKbotDude{
	{0x404566, {0x6A, 0x60, 0x68, 0x80, 0xA7, 0x41, 0x00, 0xE8, 0xE6, 0x17, 0x00, 0x00, 0xBF, 0x94, 0x00, 0x00, 0x00, 0x8B, 0xC7, 0xE8, 0x62, 0xFF, 0xFF, 0xFF, 0x89, 0x65, 0xE8, 0x8B, 0xF4, 0x89, 0x3E, 0x56}, {"DKAEMultiStrikeByDude"}}, // DKAEMultiStrikeByDude{
	{0x404176, {0xEE, 0xED, 0xEB, 0xEB, 0xD6, 0xD4, 0xD4, 0xA1, 0x9F, 0x9F, 0x66, 0x64, 0x64, 0x39, 0x37, 0x37, 0x20, 0x1E, 0x1E, 0x1B, 0x19, 0x19, 0x17, 0x15, 0x15, 0x15, 0x13, 0x13, 0x15, 0x13, 0x13, 0x16}, {"Travis"}}, // Travis{
	{0x4013A8, {0xEB, 0x10, 0x66, 0x62, 0x3A, 0x43, 0x2B, 0x2B, 0x48, 0x4F, 0x4F, 0x4B, 0x90, 0xE9, 0x98, 0x80, 0x48, 0x00, 0xA1, 0x8B, 0x80, 0x48, 0x00, 0xC1, 0xE0, 0x02, 0xA3, 0x8F, 0x80, 0x48, 0x00, 0x52}, {"ZMU"}}, // ZMU{
	{0xB78341, {0x2E, 0x03, 0x00, 0x00, 0xEB, 0x02, 0x83, 0x3D, 0x58, 0xEB, 0x02, 0xFF, 0x1D, 0x5B, 0xEB, 0x02, 0x0F, 0xC7, 0x5F, 0xEB, 0x03, 0xFF, 0x1D, 0x34, 0xD9, 0xE5, 0x51, 0xF9, 0x1B, 0xC9, 0xEB, 0x0C}, {"ArtMoney725"}}, // ArtMoney724{
	{0x675001, {0x60, 0xE8, 0x03, 0x00, 0x00, 0x00, 0xE9, 0xEB, 0x04, 0x5D, 0x45, 0x55, 0xC3, 0xE8, 0x01, 0x00, 0x00, 0x00, 0xEB, 0x5D, 0xBB, 0xED, 0xFF, 0xFF, 0xFF, 0x03, 0xDD, 0x81, 0xEB, 0x00, 0x50, 0x27}, {"ArtMoney725"}}, // ArtMoney725{
	{0x676001, {0x60, 0xE8, 0x03, 0x00, 0x00, 0x00, 0xE9, 0xEB, 0x04, 0x5D, 0x45, 0x55, 0xC3, 0xE8, 0x01, 0x00, 0x00, 0x00, 0xEB, 0x5D, 0xBB, 0xED, 0xFF, 0xFF, 0xFF, 0x03, 0xDD, 0x81, 0xEB, 0x00, 0x60, 0x27}, {"ArtMoney725"}}, // ArtMoney726{
	{0x677001, {0x60, 0xE8, 0x03, 0x00, 0x00, 0x00, 0xE9, 0xEB, 0x04, 0x5D, 0x45, 0x55, 0xC3, 0xE8, 0x01, 0x00, 0x00, 0x00, 0xEB, 0x5D, 0xBB, 0xED, 0xFF, 0xFF, 0xFF, 0x03, 0xDD, 0x81, 0xEB, 0x00, 0x70, 0x27}, {"ArtMoney725"}}, // ArtMoney727{
	{0x67A001, {0x60, 0xE8, 0x03, 0x00, 0x00, 0x00, 0xE9, 0xEB, 0x04, 0x5D, 0x45, 0x55, 0xC3, 0xE8, 0x01, 0x00, 0x00, 0x00, 0xEB, 0x5D, 0xBB, 0xED, 0xFF, 0xFF, 0xFF, 0x03, 0xDD, 0x81, 0xEB, 0x00, 0xA0, 0x27}, {"ArtMoney725"}}, // ArtMoney728{
	{0x688001, {0x60, 0xE8, 0x03, 0x00, 0x00, 0x00, 0xE9, 0xEB, 0x04, 0x5D, 0x45, 0x55, 0xC3, 0xE8, 0x01, 0x00, 0x00, 0x00, 0xEB, 0x5D, 0xBB, 0xED, 0xFF, 0xFF, 0xFF, 0x03, 0xDD, 0x81, 0xEB, 0x00, 0x80, 0x28}, {"ArtMoney725"}}, // ArtMoney729{
	{0x4016D4, {0xEB, 0x10, 0x66, 0x62, 0x3A, 0x43, 0x2B, 0x2B, 0x48, 0x4F, 0x4F, 0x4B, 0x90, 0xE9, 0x98, 0xB0, 0x4E, 0x00, 0xA1, 0x8B, 0xB0, 0x4E, 0x00, 0xC1, 0xE0, 0x02, 0xA3, 0x8F, 0xB0, 0x4E, 0x00, 0x52}, {"Cheat"}}, // Cheat Freak Proxy{
	{0x47BB60, {0x55, 0x8B, 0xEC, 0x83, 0xC4, 0xF0, 0xB8, 0x70, 0xB9, 0x47, 0x00, 0xE8, 0x40, 0xA4, 0xF8, 0xFF, 0xA1, 0x04, 0xD4, 0x47, 0x00, 0x8B, 0x00, 0xE8, 0x28, 0x83, 0xFF, 0xFF, 0xA1, 0x04, 0xD4, 0x47}, {"Cheat"}}, // Cheat Life v1.0{
	{0x403139, {0x02, 0x28, 0x6D, 0x19, 0x00, 0x06, 0x28, 0x6E, 0x19, 0x00, 0x06, 0x03, 0x16, 0x28, 0x6F, 0x19, 0x00, 0x06, 0x26, 0x02, 0x03, 0x16, 0x28, 0xDD, 0x03, 0x00, 0x06, 0x28, 0x70, 0x19, 0x00, 0x06}, {"Proxy"}}, // Diegos Proxy{
	{0x9EE014, {0xB8, 0x00, 0x00, 0x00, 0x00, 0x60, 0x0B, 0xC0, 0x74, 0x68, 0xE8, 0x00, 0x00, 0x00, 0x00, 0x58, 0x05, 0x53, 0x00, 0x00, 0x00, 0x80, 0x38, 0xE9, 0x75, 0x13, 0x61, 0xEB, 0x45, 0xDB, 0x2D, 0x37}, {"MuEnergyX"}}, // MuEnergyX 1.9{
	{0xA22014, {0xB8, 0x00, 0x00, 0x00, 0x00, 0x60, 0x0B, 0xC0, 0x74, 0x68, 0xE8, 0x00, 0x00, 0x00, 0x00, 0x58, 0x05, 0x53, 0x00, 0x00, 0x00, 0x80, 0x38, 0xE9, 0x75, 0x13, 0x61, 0xEB, 0x45, 0xDB, 0x2D, 0x37}, {"MuEnergyX"}}, // MuEnergyX 2.0 Private{
	{0x512950, {0x55, 0x8B, 0xEC, 0x83, 0xC4, 0xF0, 0x53, 0xB8, 0x50, 0x23, 0x51, 0x00, 0xE8, 0x63, 0x3C, 0xEF, 0xFF, 0x8B, 0x1D, 0x7C, 0xA2, 0x51, 0x00, 0x8B, 0x03, 0xE8, 0xA6, 0x87, 0xF6, 0xFF, 0x8B, 0x0D}, {"Packet"}}, // rPE Redox Packet Editor{
	{0x495C26, {0xA1, 0x18, 0x89, 0x49, 0x00, 0x8B, 0x00, 0x33, 0xD2, 0xE8, 0x04, 0x0D, 0xFD, 0xFF, 0x8B, 0x0D, 0x44, 0x8A, 0x49, 0x00, 0xA1, 0x18, 0x89, 0x49, 0x00, 0x8B, 0x00, 0x8B, 0x15, 0xB0, 0x3E, 0x49}, {"Hack"}}, // Hack by GunZ{
	{0x495AD6, {0x8D, 0xBE, 0x00, 0x20, 0xFA, 0xFF, 0x57, 0xEB, 0x0B, 0x90, 0x8A, 0x06, 0x46, 0x88, 0x07, 0x47, 0x01, 0xDB, 0x75, 0x07, 0x8B, 0x1E, 0x83, 0xEE, 0xFC, 0x11, 0xDB, 0x72, 0xED, 0xB8, 0x01, 0x00}, {"ChaosBot1"}}, // ChaosBot1.5{
	{0x52F031, {0xDB, 0x2D, 0x37, 0xF0, 0x52, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x3D, 0x40, 0xE8, 0x00, 0x00, 0x00, 0x00, 0x58, 0x25, 0x00, 0xF0, 0xFF, 0xFF, 0x33, 0xFF, 0x66, 0xBB, 0x19}, {"CM_v2_0"}}, // CM_v2_0_Demo{
	{0x492BA6, {0x8D, 0xBE, 0x00, 0xF0, 0xF9, 0xFF, 0xC7, 0x87, 0xA4, 0x20, 0x07, 0x00, 0x0A, 0x3F, 0x50, 0x76, 0x57, 0x83, 0xCD, 0xFF, 0xEB, 0x0E, 0x90, 0x90, 0x90, 0x90, 0x8A, 0x06, 0x46, 0x88, 0x07, 0x47}, {"SpeedHack"}}, // D-C SpeedHack{
	{0x4DB7C3, {0x55, 0x8B, 0xEC, 0x6A, 0xFF, 0x68, 0x20, 0x5B, 0x50, 0x00, 0x68, 0x00, 0xB5, 0x4D, 0x00, 0x64, 0xA1, 0x00, 0x00, 0x00, 0x00, 0x50, 0x64, 0x89, 0x25, 0x00, 0x00, 0x00, 0x00, 0x83, 0xEC, 0x58}, {"Game Optimizer"}}, // Game Optimizer{
	{0x56C5C6, {0x8D, 0xBE, 0x00, 0x60, 0xF0, 0xFF, 0x57, 0x83, 0xCD, 0xFF, 0xEB, 0x10, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x8A, 0x06, 0x46, 0x88, 0x07, 0x47, 0x01, 0xDB, 0x75, 0x07, 0x8B, 0x1E, 0x83, 0xEE}, {"UoPilot"}}, // UoPilot 2.12{
	{0x12C596, {0x8D, 0xBE, 0x00, 0x20, 0xF4, 0xFF, 0xC7, 0x87, 0xD0, 0x54, 0x0C, 0x00, 0x24, 0xFC, 0x8C, 0x0B, 0x57, 0x83, 0xCD, 0xFF, 0xEB, 0x0E, 0x90, 0x90, 0x90, 0x90, 0x8A, 0x06, 0x46, 0x88, 0x07, 0x47}, {"UoPilot"}}, // UoPilot 1.07{
	{0x569096, {0x8D, 0xBE, 0x00, 0x70, 0xF0, 0xFF, 0x57, 0x83, 0xCD, 0xFF, 0xEB, 0x10, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x8A, 0x06, 0x46, 0x88, 0x07, 0x47, 0x01, 0xDB, 0x75, 0x07, 0x8B, 0x1E, 0x83, 0xEE}, {"UoPilot"}}, // UoPilot 2.10{
	{0x4E5586, {0x8D, 0xBE, 0x00, 0xA0, 0xF6, 0xFF, 0xC7, 0x87, 0xD0, 0x04, 0x0B, 0x00, 0x97, 0x42, 0x0A, 0xDB, 0x57, 0x83, 0xCD, 0xFF, 0xEB, 0x0E, 0x90, 0x90, 0x90, 0x90, 0x8A, 0x06, 0x46, 0x88, 0x07, 0x47}, {"UoPilot"}}, // UoPilot 1.04{
	{0x12F1F0, {0x70, 0x6F, 0x4A, 0x7B, 0x29, 0x37, 0x08, 0x7B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x94, 0x41, 0x7E, 0x4F, 0x37, 0x08, 0x7B, 0x2E, 0x44, 0xEA, 0xA6, 0x40, 0x39, 0xE7, 0x79}, {"Razor"}}, // Razor{
	{0x579646, {0x8D, 0xBE, 0x00, 0xB0, 0xEF, 0xFF, 0x57, 0x83, 0xCD, 0xFF, 0xEB, 0x10, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x8A, 0x06, 0x46, 0x88, 0x07, 0x47, 0x01, 0xDB, 0x75, 0x07, 0x8B, 0x1E, 0x83, 0xEE}, {"UoPilot"}}, // UoPilot 2.14{
	{0x420733, {0xE8, 0x04, 0x60, 0x00, 0x00, 0xFF, 0x15, 0x70, 0x91, 0x44, 0x00, 0xA3, 0x78, 0x36, 0x46, 0x00, 0xE8, 0xC2, 0x5E, 0x00, 0x00, 0xA3, 0x18, 0x1F, 0x46, 0x00, 0xE8, 0x6B, 0x5C, 0x00, 0x00, 0xE8}, {"RecKey"}}, // RecKey{
	{0x4052BB, {0x00, 0x00, 0x0A, 0x73, 0x90, 0x00, 0x00, 0x0A, 0xA2, 0x11, 0x19, 0x17, 0x14, 0x72, 0x1D, 0x00, 0x00, 0x70, 0x73, 0x91, 0x00, 0x00, 0x0A, 0xA2, 0x11, 0x19, 0x15, 0x73, 0x92, 0x00, 0x00, 0x0A}, {"Lipsum"}}, // Lipsum 1.53{
	{0x417259, {0x89, 0x42, 0xBC, 0xBA, 0x14, 0x00, 0x00, 0x80, 0xB8, 0x0F, 0x00, 0x00, 0x80, 0xE8, 0x65, 0xB7, 0x00, 0x00, 0x8B, 0xD0, 0x8B, 0x45, 0x08, 0x8B, 0x40, 0xD8, 0x8B, 0x40, 0x14, 0xE8, 0xBD, 0x63}, {"Speed"}}, // Speed Hack by Ziomal{
	{0x416B41, {0xE8, 0xBC, 0x57, 0x00, 0x00, 0xA3, 0xA4, 0xB2, 0x44, 0x00, 0xE8, 0x65, 0x55, 0x00, 0x00, 0xE8, 0xA7, 0x54, 0x00, 0x00, 0xE8, 0x0C, 0x0F, 0x00, 0x00, 0x89, 0x75, 0xD0, 0x8D, 0x45, 0xA4, 0x50}, {"Speed"}}, // Game Speed Adjuster{
	{0x401027, {0x73, 0xE3, 0xBC, 0x49, 0x73, 0x62, 0x72, 0x4D, 0x73, 0xFA, 0x00, 0x4C, 0x73, 0x0F, 0x9E, 0x4A, 0x73, 0xFB, 0x6E, 0x4B, 0x73, 0xAD, 0x73, 0x4B, 0x73, 0x81, 0x07, 0x4C, 0x73, 0xE3, 0xB5, 0x4A}, {"Acelerator"}}, // Game Acelerator{
	{0x4D7E04, {0x76, 0x0E, 0x8A, 0x02, 0x42, 0x88, 0x07, 0x47, 0x49, 0x75, 0xF7, 0xE9, 0x42, 0xFF, 0xFF, 0xFF, 0x8B, 0x02, 0x83, 0xC2, 0x04, 0x89, 0x07, 0x83, 0xC7, 0x04, 0x83, 0xE9, 0x04, 0x77, 0xF1, 0x01}, {"Auto-Combo"}}, // Perfect Auto-Combo 1.0 by FullMetal{
	{0x4621C6, {0xE9, 0x45, 0xFF, 0xFF, 0xFF, 0x33, 0xFF, 0x8B, 0x75, 0x0C, 0x6A, 0x04, 0xE8, 0xCA, 0x3F, 0xFF, 0xFF, 0x59, 0xC3, 0x3B, 0xDF, 0x75, 0x0D, 0x8B, 0x45, 0x10, 0x3B, 0xC7, 0x74, 0x06, 0xC7, 0x00}, {"Auto-Potion"}}, // Perfect Auto-Potion 0.2{
	{0x401468, {0x74, 0x03, 0x8B, 0x6D, 0x04, 0x8B, 0x97, 0x30, 0x02, 0x00, 0x00, 0x55, 0x52, 0xE8, 0x4D, 0x98, 0x06, 0x00, 0x56, 0x53, 0x8B, 0xCF, 0x89, 0x87, 0x3C, 0x02, 0x00, 0x00, 0xE8, 0x47, 0x05, 0x00}, {"WPePro"}}, // WPePro 0.9x Packed{
	{0x41D39A, {0xEB, 0x0B, 0x0B, 0xEB, 0x0B, 0x0B, 0xEB, 0x35, 0x2B, 0xCA, 0x61, 0x4C, 0xA7, 0x41, 0x35, 0xC0, 0x0B, 0x0B, 0xEB, 0x0B, 0x0B, 0xEB, 0x0B, 0x0B, 0xEB, 0x2A, 0x2A, 0xEE, 0x48, 0x48, 0xF0, 0x48}, {"SpeederXP"}}, // SpeederXP 1.60{
	{0x42FAA4, {0xA7, 0x62, 0x62, 0x62, 0x68, 0x68, 0x68, 0x7B, 0x7B, 0x7B, 0x98, 0x98, 0x98, 0xB9, 0xB9, 0xB9, 0xD5, 0xD5, 0xD5, 0xE9, 0xE9, 0xE9, 0xE6, 0xE3, 0xEF, 0x2B, 0x0A, 0xBC, 0x2B, 0x09, 0xBD, 0x2A}, {"SpeederXP"}}, // SpeederXP 1.80{
	{0x50541A, {0xBE, 0xDE, 0xEE, 0xE2, 0x52, 0xE8, 0x6B, 0xFA, 0xFF, 0xFF, 0x68, 0x3A, 0x84, 0xE5, 0xDD, 0xE8, 0x48, 0xB9, 0x07, 0x00, 0x9E, 0x2F, 0xE0, 0x52, 0xA4, 0x12, 0x4C, 0x16, 0x24, 0xA6, 0xB0, 0x9E}, {"SpeederXP"}}, // SpeederXP 2.32{
	{0x42727A, {0x55, 0x8B, 0xEC, 0x6A, 0xFF, 0x68, 0xA8, 0x7A, 0x43, 0x00, 0x68, 0xE4, 0x73, 0x42, 0x00, 0x64, 0xA1, 0x00, 0x00, 0x00, 0x00, 0x50, 0x64, 0x89, 0x25, 0x00, 0x00, 0x00, 0x00, 0x83, 0xEC, 0x68}, {"SpeederXP"}}, // SpeederXP 2.62{
	{0x401100, {0x33, 0xC0, 0x8B, 0x04, 0x9D, 0x21, 0x79, 0x40, 0x00, 0x36, 0x8A, 0x54, 0x2A, 0x80, 0x03, 0xC2, 0x50, 0x8F, 0x04, 0x9D, 0x21, 0x79, 0x40, 0x00, 0x43, 0x83, 0xFB, 0x04, 0x75, 0x05, 0x33, 0xDB}, {"xSpeed"}}, // !xSpeed.net V2.0{
	{0x41D4FE, {0x30, 0xB3, 0x7F, 0x4E, 0xB8, 0x85, 0x54, 0xBC, 0x8B, 0x59, 0xBD, 0x8C, 0x5A, 0xBD, 0x8C, 0x5A, 0x00, 0x00, 0xBD, 0x8C, 0x5A, 0xBD, 0x8C, 0x5A, 0xC7, 0x91, 0x5C, 0xD1, 0x95, 0x59, 0x9F, 0x6E}, {"xSpeed"}}, // !xSpeed.net V6.0{
	{0x4045B1, {0x74, 0x23, 0x83, 0x78, 0xF8, 0x01, 0x75, 0x1D, 0x83, 0xE8, 0x08, 0x83, 0xC2, 0x09, 0x50, 0x89, 0xE0, 0xE8, 0x09, 0xE2, 0xFF, 0xFF, 0x58, 0x83, 0xC0, 0x08, 0x89, 0x03, 0x89, 0x70, 0xFC, 0xC6}, {"Thors Hammer"}}, // Thors Hammer V1.0{
	{0x458021, {0x6C, 0xF6, 0x77, 0x91, 0x7C, 0xFB, 0x77, 0xF1, 0x78, 0xFB, 0x77, 0x35, 0x6F, 0xF6, 0x77, 0xFC, 0xEF, 0xF5, 0x77, 0xAF, 0xB8, 0xF7, 0x77, 0x7B, 0x79, 0xF5, 0x77, 0x17, 0x6C, 0xF5, 0x77, 0xEF}, {"PJautoPlay"}}, // PJautoPlay{
	{0x457023, {0xE8, 0xCF, 0xFE, 0xFF, 0xFF, 0x8B, 0xD8, 0x8B, 0x45, 0x0C, 0xF7, 0xD0, 0x23, 0xD8, 0x8B, 0x45, 0x08, 0x23, 0x45, 0x0C, 0x0B, 0xD8, 0xE8, 0x4B, 0xFF, 0xFF, 0xFF, 0x89, 0x45, 0x0C, 0xD9, 0x6D}, {"Kiasu"}}, // Kiasu Bot{
	{0x40C484, {0x8B, 0x45, 0x08, 0xFF, 0x70, 0x0C, 0xFF, 0x70, 0x08, 0xE8, 0xD6, 0xF8, 0xFF, 0xFF, 0x0F, 0xB7, 0xC0, 0x8B, 0x04, 0x85, 0x20, 0x67, 0x5D, 0x00, 0xE8, 0x97, 0xF9, 0xFF, 0xFF, 0x59, 0xE9, 0x61}, {"Cheat Engine"}}, // Cheat Engine 5.4{
	{0x408771, {0xEB, 0x07, 0x8B, 0x45, 0x0C, 0x33, 0xD2, 0x89, 0x10, 0x83, 0x3F, 0x00, 0x74, 0x18, 0x85, 0xDB, 0x74, 0x14, 0x6A, 0x00, 0x6A, 0x00, 0x8B, 0x07, 0x50, 0x53, 0xE8, 0x88, 0xFC, 0xFF, 0xFF, 0x8B}, {"Cheat Engine"}}, // Cheat Engine 5.5{
	{0x402A76, {0x74, 0x08, 0x83, 0x3B, 0x00, 0x74, 0x03, 0x4E, 0xEB, 0xE9, 0x81, 0xC4, 0x08, 0x01, 0x00, 0x00, 0x5F, 0x5E, 0x5B, 0xC3, 0x8B, 0xC0, 0x66, 0xA3, 0x20, 0x60, 0x4A, 0x00, 0xDB, 0xE2, 0xD9, 0x2D}, {"Cheat Engine"}}, // Cheat Master 1.0{
	{0x40225F, {0x75, 0x14, 0x2F, 0x7C, 0xD1, 0xAA, 0xCB, 0xF3, 0x0C, 0x1A, 0x74, 0x5F, 0x83, 0x48, 0xB9, 0xDB, 0x0A, 0x19, 0xB2, 0xF4, 0xCE, 0x6F, 0x46, 0x3E, 0xA7, 0x63, 0x03, 0x0C, 0x94, 0xAB, 0x10, 0xCA}, {"Sex Engine"}}, // Sex Engine 1.0{
	{0x407245, {0xEB, 0x01, 0x4B, 0x80, 0x3B, 0x2E, 0x74, 0x0A, 0x8D, 0x85, 0xE3, 0xFE, 0xFF, 0xFF, 0x3B, 0xD8, 0x75, 0xF0, 0x8D, 0x85, 0xE3, 0xFE, 0xFF, 0xFF, 0x3B, 0xD8, 0x0F, 0x84, 0x9D, 0x00, 0x00, 0x00}, {"Dark alliance Engine"}}, // Dark alliance Engine 5.4{
	{0x40167A, {0x78, 0xF5, 0x8B, 0x04, 0x01, 0x89, 0x04, 0x11, 0xC3, 0x90, 0x8B, 0x48, 0x04, 0x8B, 0x10, 0x39, 0xD1, 0x89, 0x11, 0x89, 0x4A, 0x04, 0x74, 0x02, 0xC3, 0x90, 0x81, 0xE9, 0xA8, 0xE7, 0x5B, 0x00}, {"Thunder Engine"}}, // Thunder Engine 4.3{
	{0x40D6EB, {0xE9, 0x0C, 0x0F, 0x00, 0x00, 0xE8, 0xAF, 0x15, 0x05, 0x00, 0x8B, 0x45, 0xFC, 0x8B, 0x80, 0x38, 0x01, 0x00, 0x00, 0x66, 0x83, 0x78, 0x72, 0x00, 0x0F, 0x84, 0xDC, 0x00, 0x00, 0x00, 0x33, 0xC0}, {"WildProxy"}}, // WildProxy 1.1{
	{0x44C0EA, {0xE9, 0x52, 0x01, 0x00, 0x00, 0xC7, 0x45, 0xC8, 0x08, 0x00, 0x00, 0x00, 0x89, 0x4D, 0x98, 0xF6, 0x45, 0xD0, 0x80, 0xC7, 0x45, 0xC0, 0x10, 0x00, 0x00, 0x00, 0x0F, 0x84, 0x31, 0xFE, 0xFF, 0xFF}, {"BOT"}}, // BOT OpenSource 3.7{
	{0x40211A, {0x7E, 0x7B, 0x89, 0x73, 0x08, 0x8B, 0x5B, 0x04, 0x3B, 0x73, 0x08, 0x7F, 0xF8, 0x8B, 0x17, 0x89, 0x42, 0x08, 0x3B, 0x1F, 0x74, 0x04, 0x89, 0x1F, 0xEB, 0x63, 0x81, 0xFE, 0x00, 0x10, 0x00, 0x00}, {"Revolution"}}, // Revolution/MoonLight Engine{
	{0x403108, {0xEB, 0x23, 0x3B, 0x75, 0xFC, 0x74, 0x1E, 0x8B, 0x45, 0x08, 0xE8, 0x3D, 0xF8, 0xFF, 0xFF, 0x33, 0xC0, 0x89, 0x45, 0xFC, 0xEB, 0x0F, 0xB8, 0x67, 0x00, 0x00, 0x00, 0xE8, 0x2C, 0xF8, 0xFF, 0xFF}, {"MoonLight"}}, // MoonLight Engine{
	{0x42E826, {0xEB, 0x06, 0x3B, 0xC6, 0x7D, 0x07, 0x8B, 0xC6, 0xA3, 0xC0, 0x7F, 0x46, 0x00, 0x6A, 0x04, 0x50, 0xE8, 0xC8, 0x3C, 0x00, 0x00, 0x59, 0xA3, 0xA4, 0x6F, 0x46, 0x00, 0x85, 0xC0, 0x59, 0x75, 0x21}, {"Macros"}}, // EZ Macros 5.0a{
	{0x448496, {0xEB, 0x18, 0x3B, 0xC6, 0x0F, 0x83, 0xEA, 0x00, 0x00, 0x00, 0x0F, 0xB6, 0x08, 0x40, 0x3B, 0x4D, 0x4C, 0x74, 0x06, 0x3B, 0xC6, 0x72, 0xF3, 0xEB, 0x01, 0x48, 0x3B, 0xC6, 0x0F, 0x83, 0xD2, 0x00}, {"AutoIt"}}, // AutoIt 3.2.4.8A{
	{0x47A0B8, {0xEB, 0xA6, 0xB6, 0x8A, 0x10, 0x67, 0x83, 0x73, 0x55, 0xF5, 0x12, 0x97, 0x4F, 0x3B, 0x4F, 0x60, 0xDB, 0x46, 0xC5, 0x19, 0xAB, 0x83, 0x7F, 0x58, 0x7B, 0xAB, 0xC2, 0x8A, 0x3F, 0x67, 0x00, 0x1A}, {"AutoIt"}}, // AutoIt 3.2.4.8A Compiled{
	{0x448D18, {0xEB, 0x18, 0x3B, 0xC6, 0x0F, 0x83, 0xEA, 0x00, 0x00, 0x00, 0x0F, 0xB6, 0x08, 0x40, 0x3B, 0x4D, 0x4C, 0x74, 0x06, 0x3B, 0xC6, 0x72, 0xF3, 0xEB, 0x01, 0x48, 0x3B, 0xC6, 0x0F, 0x83, 0xD2, 0x00}, {"AutoIt"}}, // AutoIt 3.2.4.9{
	{0x487F97, {0xEB, 0x89, 0xD6, 0x13, 0x95, 0x04, 0x04, 0x03, 0xB3, 0x12, 0x04, 0x9A, 0xA6, 0xF5, 0x44, 0x01, 0xA7, 0x14, 0x04, 0x11, 0x0F, 0x6F, 0xD3, 0x34, 0xAD, 0x27, 0xBF, 0x74, 0x04, 0x0B, 0x34, 0x73}, {"AutoIt"}}, // AutoIt 3.2.4.9 Compiled{
	{0x448606, {0xEB, 0x18, 0x3B, 0xC6, 0x0F, 0x83, 0xEA, 0x00, 0x00, 0x00, 0x0F, 0xB6, 0x08, 0x40, 0x3B, 0x4D, 0x4C, 0x74, 0x06, 0x3B, 0xC6, 0x72, 0xF3, 0xEB, 0x01, 0x48, 0x3B, 0xC6, 0x0F, 0x83, 0xD2, 0x00}, {"AutoIt"}}, // AutoIt 3.2.4.9A{
	{0x47A1AF, {0xEB, 0x4F, 0xBE, 0x55, 0xBB, 0x65, 0xF3, 0x43, 0x23, 0x6B, 0x76, 0x99, 0x2A, 0xD4, 0xF5, 0x7B, 0xF3, 0xF3, 0x2D, 0xD6, 0x41, 0x60, 0xD6, 0xE3, 0x3F, 0xDA, 0x80, 0xC1, 0x3D, 0xB7, 0x71, 0x2E}, {"AutoIt"}}, // AutoIt 3.2.4.9A Compiled{
	{0x45016A, {0xEB, 0x06, 0x3B, 0xC6, 0x7D, 0x07, 0x8B, 0xC6, 0xA3, 0xE0, 0xCE, 0x48, 0x00, 0x6A, 0x04, 0x50, 0xE8, 0x78, 0x3B, 0x00, 0x00, 0x85, 0xC0, 0x59, 0x59, 0xA3, 0xCC, 0xBE, 0x48, 0x00, 0x75, 0x1E}, {"AutoIt"}}, // AutoIt 3.2.6.0{
	{0x49910D, {0xEB, 0x07, 0x98, 0x55, 0x60, 0x58, 0x66, 0x56, 0x9E, 0x05, 0x86, 0x5B, 0xEA, 0xA8, 0x0A, 0x44, 0x6A, 0x7C, 0x46, 0xE8, 0x29, 0x1B, 0x41, 0x66, 0x4B, 0x38, 0x20, 0xCC, 0x80, 0x64, 0xDE, 0x61}, {"AutoIt"}}, // AutoIt 3.2.6.0 Compiled{
	{0x450101, {0xEB, 0x06, 0x3B, 0xC6, 0x7D, 0x07, 0x8B, 0xC6, 0xA3, 0x40, 0xF4, 0x47, 0x00, 0x6A, 0x04, 0x50, 0xE8, 0x9B, 0x3B, 0x00, 0x00, 0x85, 0xC0, 0x59, 0x59, 0xA3, 0x2C, 0xE4, 0x47, 0x00, 0x75, 0x1E}, {"AutoIt"}}, // AutoIt 3.2.6.0A{
	{0x48C718, {0xEB, 0x83, 0x4D, 0x3F, 0x16, 0x5C, 0x6D, 0x5A, 0x81, 0xDF, 0xD3, 0xF1, 0xB4, 0xD0, 0x2A, 0x61, 0x48, 0x09, 0xB0, 0x35, 0x69, 0x4B, 0x11, 0xA9, 0xC5, 0x24, 0x08, 0x8E, 0x0E, 0xBA, 0x98, 0x63}, {"AutoIt"}}, // AutoIt 3.2.6.0A Compiled{
	{0x451E9F, {0xEB, 0x06, 0x3B, 0xC6, 0x7D, 0x07, 0x8B, 0xC6, 0xA3, 0x60, 0xCF, 0x48, 0x00, 0x6A, 0x04, 0x50, 0xE8, 0x43, 0x3A, 0x00, 0x00, 0x85, 0xC0, 0x59, 0x59, 0xA3, 0x4C, 0xBF, 0x48, 0x00, 0x75, 0x1E}, {"AutoIt"}}, // AutoIt 3.2.8.0/3.2.8.1{
	{0x498E11, {0xEB, 0xE1, 0x98, 0xE0, 0x95, 0xCD, 0x34, 0x4E, 0x51, 0x57, 0x0A, 0x8B, 0x0C, 0xCE, 0xD9, 0x19, 0x4D, 0x27, 0x57, 0x6D, 0x40, 0xD3, 0xC5, 0xB3, 0x82, 0x73, 0xCF, 0xAE, 0xC1, 0xAD, 0xE0, 0x49}, {"AutoIt"}}, // AutoIt 3.2.8.0 Compiled{
	{0x451AEB, {0xEB, 0x06, 0x3B, 0xC6, 0x7D, 0x07, 0x8B, 0xC6, 0xA3, 0xC0, 0x04, 0x48, 0x00, 0x6A, 0x04, 0x50, 0xE8, 0xD1, 0x3D, 0x00, 0x00, 0x85, 0xC0, 0x59, 0x59, 0xA3, 0xAC, 0xF4, 0x47, 0x00, 0x75, 0x1E}, {"AutoIt"}}, // AutoIt 3.2.8.0A/3.2.8.1A{
	{0x48CCE6, {0xEB, 0x6D, 0x01, 0x09, 0x2F, 0x15, 0xDF, 0x25, 0x29, 0x4C, 0xFB, 0x48, 0x35, 0xD5, 0x43, 0x54, 0x5B, 0xB5, 0x93, 0x97, 0x31, 0x21, 0x53, 0x6C, 0xB7, 0x6B, 0xC2, 0xAD, 0xE8, 0xFD, 0x41, 0x64}, {"AutoIt"}}, // AutoIt 3.2.8.0A Compiled{
	{0x4990CA, {0xEB, 0x34, 0x4D, 0xEB, 0x89, 0x0D, 0xD3, 0x01, 0x04, 0x0B, 0x34, 0x39, 0x01, 0x0B, 0x4D, 0xD3, 0x74, 0x73, 0x13, 0x0B, 0xB7, 0x2A, 0xCD, 0x9D, 0x45, 0x12, 0x01, 0x5A, 0x6E, 0x5B, 0xE5, 0x01}, {"AutoIt"}}, // AutoIt 3.2.8.1 Compiled{
	{0x48D4B0, {0xEB, 0x5F, 0x04, 0x04, 0x03, 0x83, 0x12, 0x04, 0x01, 0x13, 0x4D, 0xD3, 0x7A, 0x71, 0x14, 0x04, 0x11, 0x0F, 0x6F, 0xA6, 0x69, 0x9A, 0xD6, 0x89, 0x74, 0x04, 0x0B, 0x34, 0x73, 0x39, 0x4B, 0x48}, {"AutoIt"}}, // AutoIt 3.2.8.1A Compiled{
	{0x4534AF, {0xEB, 0x06, 0x3B, 0xC6, 0x7D, 0x07, 0x8B, 0xC6, 0xA3, 0xE0, 0xEE, 0x48, 0x00, 0x6A, 0x04, 0x50, 0xE8, 0x33, 0x3B, 0x00, 0x00, 0x85, 0xC0, 0x59, 0x59, 0xA3, 0xCC, 0xDE, 0x48, 0x00, 0x75, 0x1E}, {"AutoIt"}}, // AutoIt 3.2.10.0{
	{0x49B222, {0xEB, 0x75, 0xB5, 0x4C, 0xFB, 0x22, 0x6C, 0xF3, 0x52, 0x74, 0x2C, 0x19, 0xD9, 0xE8, 0xA2, 0x77, 0x72, 0x8D, 0x99, 0x6E, 0xDB, 0xF1, 0x35, 0xA5, 0x1B, 0x8A, 0x03, 0x68, 0x93, 0xC7, 0x6A, 0xC9}, {"AutoIt"}}, // AutoIt 3.2.10.0 Compiled{
	{0x4530CC, {0xEB, 0x06, 0x3B, 0xC6, 0x7D, 0x07, 0x8B, 0xC6, 0xA3, 0x40, 0x14, 0x48, 0x00, 0x6A, 0x04, 0x50, 0xE8, 0x90, 0x3E, 0x00, 0x00, 0x85, 0xC0, 0x59, 0x59, 0xA3, 0x2C, 0x04, 0x48, 0x00, 0x75, 0x1E}, {"AutoIt"}}, // AutoIt 3.2.10.0A{
	{0x48E26C, {0xEB, 0x2D, 0xD4, 0x03, 0x47, 0x6B, 0x1A, 0x47, 0xF8, 0xD4, 0x9B, 0x26, 0x37, 0x66, 0xC7, 0x7B, 0xB8, 0x6D, 0xE0, 0x96, 0xD6, 0x63, 0x7A, 0x73, 0x42, 0xC0, 0x0A, 0xE1, 0x19, 0x6B, 0x8F, 0xAA}, {"AutoIt"}}, // AutoIt 3.2.10.0A Compiled{
	{0x4543BF, {0xEB, 0x06, 0x3B, 0xC6, 0x7D, 0x07, 0x8B, 0xC6, 0xA3, 0xC0, 0xCA, 0x48, 0x00, 0x6A, 0x04, 0x50, 0xE8, 0x93, 0x3D, 0x00, 0x00, 0x85, 0xC0, 0x59, 0x59, 0xA3, 0xAC, 0xBA, 0x48, 0x00, 0x75, 0x1E}, {"AutoIt"}}, // AutoIt 3.2.12.0{
	{0x498F1C, {0xEB, 0xDF, 0x11, 0xC1, 0xC2, 0x99, 0x76, 0xC3, 0x2C, 0x79, 0x17, 0x68, 0x9B, 0x69, 0x2A, 0x74, 0x05, 0x0B, 0x47, 0x04, 0x63, 0x22, 0xAA, 0x00, 0xD6, 0x52, 0xE3, 0x3F, 0x9F, 0xAE, 0x55, 0x1C}, {"AutoIt"}}, // AutoIt 3.2.12.0 Compiled{
	{0x45419A, {0xEB, 0x06, 0x3B, 0xC6, 0x7D, 0x07, 0x8B, 0xC6, 0xA3, 0xA0, 0x06, 0x48, 0x00, 0x6A, 0x04, 0x50, 0xE8, 0x32, 0x3F, 0x00, 0x00, 0x85, 0xC0, 0x59, 0x59, 0xA3, 0x8C, 0xF6, 0x47, 0x00, 0x75, 0x1E}, {"AutoIt"}}, // AutoIt 3.2.12.0A{
	{0x48D4D5, {0xEB, 0x26, 0x1A, 0xC8, 0xDE, 0x84, 0x47, 0x37, 0x15, 0xED, 0x25, 0x09, 0x37, 0x26, 0x06, 0x45, 0xDE, 0x01, 0x10, 0xB6, 0x61, 0x22, 0x4F, 0x02, 0x84, 0x84, 0xFC, 0x3B, 0x63, 0x6B, 0x7B, 0x05}, {"AutoIt"}}, // AutoIt 3.2.12.0A Compiled{
	{0x45435F, {0xEB, 0x06, 0x3B, 0xC6, 0x7D, 0x07, 0x8B, 0xC6, 0xA3, 0xC0, 0xCA, 0x48, 0x00, 0x6A, 0x04, 0x50, 0xE8, 0x93, 0x3D, 0x00, 0x00, 0x85, 0xC0, 0x59, 0x59, 0xA3, 0xAC, 0xBA, 0x48, 0x00, 0x75, 0x1E}, {"AutoIt"}}, // AutoIt 3.2.12.0-rc4{
	{0x45439F, {0xEB, 0x06, 0x3B, 0xC6, 0x7D, 0x07, 0x8B, 0xC6, 0xA3, 0xC0, 0xCA, 0x48, 0x00, 0x6A, 0x04, 0x50, 0xE8, 0x93, 0x3D, 0x00, 0x00, 0x85, 0xC0, 0x59, 0x59, 0xA3, 0xAC, 0xBA, 0x48, 0x00, 0x75, 0x1E}, {"AutoIt"}}, // AutoIt 3.2.12.1{
	{0x499278, {0xEB, 0x7F, 0x4D, 0xEE, 0xE1, 0x50, 0xD7, 0x66, 0xC1, 0x36, 0xAC, 0x18, 0x72, 0x2B, 0xD3, 0x37, 0x3A, 0x78, 0x48, 0x6D, 0x6B, 0x23, 0x01, 0x22, 0xC4, 0xDE, 0x6A, 0x23, 0x95, 0x61, 0xF6, 0xE0}, {"AutoIt"}}, // AutoIt 3.2.12.1 Compiled{
	{0x45417A, {0xEB, 0x06, 0x3B, 0xC6, 0x7D, 0x07, 0x8B, 0xC6, 0xA3, 0xA0, 0x06, 0x48, 0x00, 0x6A, 0x04, 0x50, 0xE8, 0x32, 0x3F, 0x00, 0x00, 0x85, 0xC0, 0x59, 0x59, 0xA3, 0x8C, 0xF6, 0x47, 0x00, 0x75, 0x1E}, {"AutoIt"}}, // AutoIt 3.2.12.1A{
	{0x48D4D6, {0xEB, 0x84, 0x47, 0x37, 0xC2, 0x8D, 0x89, 0x06, 0x15, 0x26, 0x84, 0x6D, 0x7B, 0x49, 0x06, 0x45, 0x61, 0x21, 0xBF, 0x77, 0x00, 0x22, 0x4F, 0x3B, 0x63, 0x6B, 0xC2, 0x9D, 0x00, 0x21, 0xB6, 0x14}, {"AutoIt"}}, // AutoIt 3.2.12.1A Compiled{
	{0x401DA4, {0xEB, 0xAE, 0x8B, 0x13, 0x8D, 0x04, 0x42, 0xEB, 0xBA, 0x80, 0x7C, 0x24, 0x12, 0x01, 0x74, 0xE6, 0x33, 0xD2, 0x8D, 0x7C, 0x24, 0x30, 0x8D, 0x74, 0x24, 0x20, 0x66, 0x89, 0x54, 0x4C, 0x30, 0xE8}, {"AutoIt"}}, // AutoIt 3.3.0.0{
	{0x46A104, {0xE9, 0xE3, 0xDF, 0xFF, 0xFF, 0xBE, 0x5E, 0x00, 0x00, 0x00, 0x80, 0xFA, 0x3F, 0x0F, 0x85, 0x03, 0x08, 0x00, 0x00, 0x8A, 0x48, 0x01, 0x40, 0x0F, 0xB6, 0xD1, 0x83, 0xC2, 0xDF, 0x89, 0x44, 0x24}, {"AutoIt"}}, // AutoIt 3.3.0.0 Compiled{
	{0x5692D5, {0xEB, 0x23, 0x8D, 0x45, 0xF0, 0x50, 0x8B, 0xC3, 0xE8, 0x4A, 0xBB, 0xE9, 0xFF, 0x8B, 0xC8, 0x8B, 0xD6, 0x8B, 0xC3, 0xE8, 0x9F, 0xBD, 0xE9, 0xFF, 0x8B, 0x4D, 0xF0, 0x8B, 0xC7, 0x8B, 0x55, 0xFC}, {"Sora Engine"}}, // {Danger Engine 1.0{
	{0x5DACC5, {0xE9, 0x36, 0x25, 0x00, 0x00, 0x8B, 0xC3, 0x03, 0xC0, 0x80, 0x7C, 0xC6, 0xF6, 0x05, 0x0F, 0x85, 0xF2, 0x01, 0x00, 0x00, 0x8B, 0x45, 0xC8, 0xBA, 0x3C, 0xD3, 0x5D, 0x00, 0xE8, 0x2A, 0xA6, 0xE2}, {"Sora Engine"}}, // Sora/ProjectX Engine{
	{0x5BF494, {0xEB, 0x32, 0x8B, 0xC7, 0x8B, 0xD3, 0xE8, 0xC5, 0xCA, 0xFF, 0xFF, 0x8A, 0x45, 0xE0, 0x2A, 0x45, 0xF8, 0x8B, 0xD3, 0x03, 0xD2, 0x8A, 0x54, 0xD6, 0xF9, 0x42, 0x2A, 0xC2, 0x88, 0x45, 0x94, 0x8D}, {"Sora Engine"}}, // Sora Engine 2.4{
	{0x5DACC5, {0xE9, 0x36, 0x25, 0x00, 0x00, 0x8B, 0xC3, 0x03, 0xC0, 0x80, 0x7C, 0xC6, 0xF6, 0x05, 0x0F, 0x85, 0xF2, 0x01, 0x00, 0x00, 0x8B, 0x45, 0xC8, 0xBA, 0x3C, 0xD3, 0x5D, 0x00, 0xE8, 0x2A, 0xA6, 0xE2}, {"Sora Engine"}}, // Sora Engine 2.6{
	{0x5CB869, {0xEB, 0x34, 0x8B, 0xC7, 0x8B, 0xD3, 0xE8, 0x70, 0xCA, 0xFF, 0xFF, 0x0F, 0xB6, 0x45, 0xD0, 0x2A, 0x45, 0xE4, 0x8B, 0xD3, 0x03, 0xD2, 0x0F, 0xB6, 0x54, 0xD6, 0xF9, 0x42, 0x2A, 0xC2, 0x88, 0x45}, {"Kiki Engine"}}, // Kiki Engine{
	{0x6684EB, {0xEB, 0x03, 0x83, 0xC6, 0x28, 0x0F, 0xB7, 0x47, 0x06, 0xFF, 0x44, 0x24, 0x14, 0x48, 0x39, 0x44, 0x24, 0x14, 0x0F, 0x8C, 0x8F, 0xFE, 0xFF, 0xFF, 0x5B, 0x5F, 0x5E, 0x5D, 0x83, 0xC4, 0x10, 0xC3}, {"Radix Engine"}}, // Radix Engine{
	{0x5B09F8, {0xE9, 0xF2, 0x01, 0x00, 0x00, 0x33, 0xDB, 0xE9, 0xBE, 0x01, 0x00, 0x00, 0x8D, 0x45, 0x94, 0x50, 0x6A, 0x02, 0xA1, 0x74, 0xAB, 0x5D, 0x00, 0x8B, 0x55, 0x88, 0x8B, 0x04, 0x90, 0x8B, 0x55, 0xC0}, {"KiKi UCE"}}, // KiKi UCE 1.4{
	{0x4F62FB, {0xE9, 0xDD, 0x01, 0x00, 0x00, 0x33, 0xDB, 0xE9, 0xA7, 0x01, 0x00, 0x00, 0x8D, 0x45, 0x94, 0x50, 0x6A, 0x08, 0xA1, 0xC0, 0x6B, 0x50, 0x00, 0x8B, 0x55, 0x88, 0x8B, 0x04, 0x90, 0x8B, 0x55, 0xB0}, {"Radical Engine"}}, // Radical Engine 1.3{
	{0x5CFA31, {0xE9, 0xFF, 0x8B, 0x45, 0xF8, 0x8B, 0xD0, 0xC1, 0xE0, 0x04, 0x2B, 0xC2, 0x8B, 0x93, 0x90, 0x09, 0x00, 0x00, 0x80, 0x7C, 0x82, 0x0C, 0xFF, 0x74, 0x32, 0x8B, 0x83, 0xD0, 0x09, 0x00, 0x00, 0x8B}, {"iCheat"}}, // iCheat 1.1{
	{0x5CDC83, {0xEB, 0x17, 0x8B, 0xDA, 0x8B, 0xF8, 0x2B, 0xFB, 0x7F, 0x0F, 0x4F, 0x8B, 0x96, 0x14, 0x07, 0x00, 0x00, 0xC6, 0x04, 0x1A, 0x01, 0x4B, 0x47, 0x75, 0xF2, 0x89, 0x86, 0x18, 0x07, 0x00, 0x00, 0x8B}, {"iCheat"}}, // iCheat 2 Experimental{
	{0x430A27, {0xE9, 0x06, 0x01, 0x00, 0x00, 0x3B, 0xD1, 0x72, 0x6C, 0x8B, 0x55, 0x08, 0x83, 0x7A, 0x54, 0x00, 0x7C, 0x11, 0x8B, 0x45, 0x08, 0x8B, 0x48, 0x30, 0x8B, 0x55, 0x08, 0x03, 0x4A, 0x54, 0x89, 0x4D}, {"Speed Wizard"}}, // Speed Wizard 1.0 Trial{
	{0x43250B, {0xEB, 0x02, 0x33, 0xC0, 0xC2, 0x04, 0x00, 0x83, 0xEC, 0x10, 0x53, 0x55, 0x56, 0x57, 0x6A, 0x01, 0x33, 0xFF, 0xF6, 0x44, 0x24, 0x28, 0x04, 0x5B, 0x8B, 0xF1, 0x89, 0x5C, 0x24, 0x18, 0x89, 0x7C}, {"Game Speeder"}}, // Game Speeder 1.0 Trial{
	{0x528402, {0xE9, 0x86, 0x01, 0x00, 0x00, 0x8B, 0xFE, 0xC1, 0xE7, 0x04, 0x2B, 0xFE, 0x8B, 0x83, 0x58, 0x07, 0x00, 0x00, 0x8B, 0x04, 0xB8, 0x8B, 0x93, 0x68, 0x07, 0x00, 0x00, 0x8B, 0x14, 0xBA, 0xE8, 0xF3}, {"Kaspersky Anti-GameGuard"}}, // Kaspersky Anti-GameGuard 6.3{
	{0x5A6ADF, {0xE9, 0xDA, 0xFD, 0xFF, 0xFF, 0x33, 0xC0, 0x5A, 0x59, 0x59, 0x64, 0x89, 0x10, 0x68, 0x84, 0x6B, 0x5A, 0x00, 0x8D, 0x45, 0x94, 0xBA, 0x02, 0x00, 0x00, 0x00, 0xE8, 0xE2, 0xEB, 0xE5, 0xFF, 0x8D}, {"Akuma Engine"}}, // Akuma Engine 3{
	{0x594129, {0xEB, 0x08, 0x85, 0xDB, 0x0F, 0x8C, 0x77, 0x01, 0x00, 0x00, 0x43, 0xC7, 0x45, 0x80, 0x00, 0x00, 0x00, 0x00, 0x8B, 0x45, 0xDC, 0xFF, 0x70, 0x04, 0xFF, 0x30, 0x0F, 0xB6, 0x85, 0xD4, 0xFE, 0xFF}, {"Radix Engine"}}, // Crystal Engine 1.0 Beta{
	{0x4FD3C9, {0xE9, 0x10, 0x01, 0x00, 0x00, 0x33, 0xC0, 0x55, 0x68, 0x05, 0xD4, 0x4F, 0x00, 0x64, 0xFF, 0x30, 0x64, 0x89, 0x20, 0x8B, 0x45, 0xFC, 0x66, 0x83, 0xB8, 0xA2, 0x02, 0x00, 0x00, 0x00, 0x74, 0x12}, {"Radix Engine"}}, // Thunder Engine Rev 1176{
	{0x504EB6, {0xEB, 0xF0, 0x33, 0xC0, 0x5A, 0x59, 0x59, 0x64, 0x89, 0x10, 0x68, 0xD5, 0x4E, 0x50, 0x00, 0x8D, 0x45, 0xEC, 0xE8, 0x8F, 0x00, 0xF0, 0xFF, 0xC3, 0xE9, 0x09, 0xFA, 0xEF, 0xFF, 0xEB, 0xF0, 0x5F}, {"Radix Engine"}}, // Spuc , Engine{
	{0x46C5B7, {0x8D, 0x85, 0xF8, 0xFE, 0xFF, 0xFF, 0x50, 0xE8, 0x31, 0xAC, 0xF9, 0xFF, 0xBA, 0x00, 0x01, 0x00, 0x00, 0x8D, 0x85, 0xF8, 0xFD, 0xFF, 0xFF, 0xC6, 0x00, 0x00, 0x40, 0x4A, 0x75, 0xF9, 0xC6, 0x85}, {"Radix Engine"}}, // AutoKeyboard 7.0{
	{0x49EFE7, {0x8D, 0x85, 0xF8, 0xFE, 0xFF, 0xFF, 0x50, 0xE8, 0x11, 0x9E, 0xF6, 0xFF, 0xBA, 0x00, 0x01, 0x00, 0x00, 0x8D, 0x85, 0xF8, 0xFD, 0xFF, 0xFF, 0xC6, 0x00, 0x00, 0x40, 0x4A, 0x75, 0xF9, 0xC6, 0x85}, {"Radix Engine"}}, // AutoKeyboard 8.1{
	{0x40F832, {0x8D, 0x85, 0xF0, 0xFD, 0xFF, 0xFF, 0x50, 0x8D, 0x45, 0xF8, 0x50, 0xE8, 0x8A, 0xE1, 0xFF, 0xFF, 0x8D, 0x45, 0xF8, 0x50, 0xE8, 0x89, 0xE1, 0xFF, 0xFF, 0x8B, 0xD8, 0x85, 0xDB, 0x75, 0x05, 0x83}, {"Hide Toolz"}}, // HideToolz{
	{0x41155C, {0x55, 0x8B, 0xEC, 0x83, 0xC4, 0xF0, 0xB8, 0x84, 0x14, 0x41, 0x00, 0xE8, 0xC8, 0x22, 0xFF, 0xFF, 0xB8, 0xBC, 0x15, 0x41, 0x00, 0xE8, 0x5E, 0x4B, 0xFF, 0xFF, 0x8B, 0x15, 0xDC, 0x23, 0x41, 0x00}, {"Hide Toolz"}}, // Hide Toolz 2.1
	{0x43E1F1, {0x75, 0x0A, 0x6A, 0x04, 0xE8, 0xEA, 0x1C, 0x00, 0x00, 0x59, 0xEB, 0x53, 0x68, 0x02, 0x00, 0x01, 0x00, 0x8B, 0x46, 0x20, 0x50, 0x8B, 0x46, 0x1C, 0x50, 0xE8, 0x04, 0xD0, 0x01, 0x00, 0x33, 0xC0}, {"OllyDbg"}}, // OllyDbg 1.00{
	{0x4701B1, {0xE8, 0xB6, 0xE0, 0xFD, 0xFF, 0x59, 0x83, 0xC8, 0xFF, 0xE9, 0xB4, 0x01, 0x00, 0x00, 0x8B, 0xDE, 0x53, 0xE8, 0x51, 0xFA, 0x02, 0x00, 0x85, 0xC0, 0x75, 0x08, 0x83, 0xC8, 0xFF, 0xE9, 0xA0, 0x01}, {"OllyDbg"}}, // OllyDbg 1.08b{
	{0x477DC2, {0x59, 0x83, 0xC8, 0xFF, 0xE9, 0xD3, 0x01, 0x00, 0x00, 0x8B, 0xDE, 0x53, 0xE8, 0x03, 0x72, 0x03, 0x00, 0x85, 0xC0, 0x75, 0x08, 0x83, 0xC8, 0xFF, 0xE9, 0xBF, 0x01, 0x00, 0x00, 0x33, 0xD2, 0x33}, {"OllyDbg"}}, // OllyDbg 1.10{
	{0x437A85, {0x83, 0xC4, 0x0C, 0x68, 0x00, 0xE0, 0x02, 0x00, 0x6A, 0x00, 0x6A, 0x00, 0x6A, 0x00, 0x6A, 0x00, 0x6A, 0x00, 0xE8, 0x08, 0xB5, 0x01, 0x00, 0x83, 0xC4, 0x18, 0x56, 0xE8, 0x1B, 0x8F, 0x06, 0x00}, {"OllyDbg"}}, // OllyDbg 2.00 Alpha 8{
	{0x44260C, {0x68, 0x00, 0xE0, 0x02, 0x00, 0x6A, 0x00, 0x6A, 0x00, 0x6A, 0x00, 0x6A, 0x00, 0x6A, 0x00, 0xE8, 0x64, 0x29, 0x02, 0x00, 0x83, 0xC4, 0x18, 0xFF, 0x75, 0x08, 0xE8, 0xFD, 0xB6, 0x07, 0x00, 0x85}, {"OllyDbg"}}, // OllyDbg 2.00 Beta 1{
	{0xCD3546, {0x6A, 0x1C, 0x89, 0x4C, 0x24, 0x2C, 0x8B, 0xC8, 0x51, 0x6A, 0x01, 0x52, 0x89, 0x6C, 0x24, 0x30, 0x89, 0x74, 0x24, 0x34, 0x89, 0x7C, 0x24, 0x44, 0xC7, 0x44, 0x24, 0x40, 0x00, 0x00, 0x00, 0x00}, {"Process Explorer"}}, // Process Explorer 11.02{
	{0x4DD014, {0xB8, 0x00, 0x00, 0x00, 0x00, 0x60, 0x0B, 0xC0, 0x74, 0x68, 0xE8, 0x00, 0x00, 0x00, 0x00, 0x58, 0x05, 0x53, 0x00, 0x00, 0x00, 0x80, 0x38, 0xE9, 0x75, 0x13, 0x61, 0xEB, 0x45, 0xDB, 0x2D, 0x37}, {"Win Speeder"}},
	{0x45C474, {0x55, 0x8B, 0xEC, 0x83, 0xC4, 0xF0, 0xB8, 0x5C, 0xC2, 0x45, 0x00, 0xE8, 0x70, 0x98, 0xFA, 0xFF, 0xA1, 0xBC, 0xE0, 0x45, 0x00, 0x8B, 0x00, 0xE8, 0x28, 0x84, 0xFF, 0xFF, 0x8B, 0x0D, 0xB4, 0xE0}, {"Autoheal"}}, // Autoheal// Win Speeder
	{0x486303, {0xE8, 0x96, 0x9E, 0x00, 0x00, 0xE9, 0x89, 0xFE, 0xFF, 0xFF, 0x8B, 0xFF, 0x55, 0x8B, 0xEC, 0x83, 0xEC, 0x0C, 0x53, 0x57, 0x8B, 0x7D, 0x08, 0x33, 0xDB, 0x3B, 0xFB, 0x75, 0x18, 0xE8, 0x0D, 0x1F}, {"Auto Pots Undetected"}}, //Auto Pots Undetected
	{0x40164C, {0x68, 0xFC, 0x1D, 0x40, 0x00, 0xE8, 0xEE, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x22, 0xDB, 0x28, 0x30}, {"Key Presser"}},
	{0x475020, {0x8, 0xFC, 0x1D, 0x40, 0x00, 0xE8, 0xEE, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x22, 0xDB, 0x28, 0x30}, {"M.A.C.exe"}},
	{0x475020, {0x60, 0xBE, 0x00, 0x50, 0x44, 0x00, 0x8D, 0xBE, 0x00, 0xC0, 0xFB, 0xFF, 0x57, 0x89, 0xE5, 0x8D, 0x9C, 0x24, 0x80, 0xC1, 0xFF, 0xFF, 0x31, 0xC0, 0x50, 0x39, 0xDC, 0x75, 0xFB, 0x46, 0x46, 0x53}, {"M.A.C.exe"}},
	{0x512774, {0x55, 0x8B, 0xEC, 0x83, 0xC4, 0xF0, 0x53, 0xB8, 0x74, 0x21, 0x51, 0x00, 0xE8, 0x3F, 0x3E, 0xEF, 0xFF, 0x8B, 0x1D, 0x7C, 0xA2, 0x51, 0x00, 0x8B, 0x03, 0xE8, 0x82, 0x89, 0xF6, 0xFF, 0x8B, 0x0D}, {"rPE - rEdoX Packet Editor"}},
	{0x55A000, {0x9C, 0x60, 0xE8, 0x02, 0x00, 0x00, 0x00, 0x33, 0xC0, 0x8B, 0xC4, 0x83, 0xC0, 0x04, 0x93, 0x8B, 0xE3, 0x8B, 0x5B, 0xFc, 0x81, 0xEB, 0x07, 0x20, 0x40, 0x00, 0x87, 0xDD, 0x83, 0xBD, 0x3D, 0x29}, {"POWERPOTS.exe"}},
	{0x5C9000, {0x00, 0x00, 0x00, 0x00, 0x81, 0x16, 0x56, 0x00, 0x00, 0x10, 0x40, 0x00, 0x00, 0x35, 0x40, 0x00, 0xF0, 0x38, 0x40, 0x00, 0xE0, 0x45, 0x40, 0x00, 0xD0, 0x49, 0x40, 0x00, 0x90, 0x4E, 0x40, 0x00}, {"QMacro6"}},
	{0x416310, {0xE8, 0xA7, 0xC0, 0x00, 0x00, 0xE9, 0x79, 0xFE, 0xFF, 0xFF, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0x55, 0x8B, 0xEC, 0x57, 0x56, 0x8B, 0x75, 0x0C, 0x8B, 0x4D, 0x10, 0x8B, 0x7D, 0x08, 0x8B, 0xC1}, {"Ghost Mouse"}},
	{0x40B60D, {0xE8, 0x7B, 0x7D, 0x00, 0x00, 0xE9, 0x78, 0xFE, 0xFF, 0xFF, 0x8B, 0xFF, 0x55, 0x8B, 0xEC, 0x56, 0x8B, 0x75, 0x08, 0x57, 0x56, 0xE8, 0x03, 0x7F, 0x00, 0x00, 0x59, 0x83, 0xF8 , 0xFF, 0x74, 0x50}, {"TCP Viewer"}},
	{0x588750, {0x55, 0x8B, 0xEC, 0x83, 0xC4, 0xF0, 0x53, 0xB8, 0x6C, 0x32, 0x58, 0x00, 0xE8, 0x2F, 0xF5, 0xE7, 0xFF, 0x8B, 0x1D, 0x44, 0xF9, 0x58, 0x00, 0x8B, 0x03, 0xE8, 0x2A, 0x88, 0xEE, 0xFF, 0x8B, 0x0D}, {"AutoPS"}},
	{0x4441C0, {0x60, 0xBE, 0x00, 0x00, 0x43, 0x00, 0x8D, 0xBE, 0x00, 0x10, 0xFD, 0xFF, 0x57, 0x83, 0xCD, 0xFF, 0xEB, 0x10, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x8A, 0x06, 0x46, 0x88, 0x07, 0x47, 0x01, 0xDB}, {"Auto Looter by StormMage"}},
	{0x47930D, {0x55, 0x8B, 0xEC, 0x6A, 0xFF, 0x68, 0xC8, 0x28, 0x4C, 0x00, 0x68, 0x30, 0x89, 0x47, 0x00, 0x64, 0xA1, 0x00, 0x00, 0x00, 0x00, 0x50, 0x64, 0x89, 0x25, 0x00, 0x00, 0x00, 0x00, 0x83, 0xEC, 0x58}, {"Asoftech Automation"}},
	{0x47549D, {0x55, 0x8B, 0xEC, 0x6A, 0xFF, 0x68, 0xA8, 0xBF, 0x4B, 0x00, 0x68, 0xC0, 0x4A, 0x47, 0x00, 0x64, 0xA1, 0x00, 0x00, 0x00, 0x00, 0x50, 0x64, 0x89, 0x25, 0x00, 0x00, 0x00, 0x00, 0x83, 0xEC, 0x58}, {"AutoMe"}},
	{0x4617AA, {0x5, 0x8B, 0xEC, 0x6A, 0xFF, 0x68, 0xA8, 0xBF, 0x4B, 0x00, 0x68, 0xC0, 0x4A, 0x47, 0x00, 0x64, 0xA1, 0x00, 0x00, 0x00, 0x00, 0x50, 0x64, 0x89, 0x25, 0x00, 0x00, 0x00, 0x00, 0x83, 0xEC, 0x58}, {"About EZ Macros"}},
	{0x4617AA, {0xE8, 0x47, 0xB3, 0x00, 0x00, 0xE9, 0x78, 0xFE, 0xFF, 0xFF, 0x6A, 0x0C, 0x68, 0x90, 0x72, 0x49, 0x00, 0xE8, 0x84, 0x1A, 0x00, 0x00, 0x83, 0x65, 0xE4, 0x00, 0x8B, 0x75, 0x08, 0x3B, 0x35, 0xE4}, {"About EZ Macros"}},
	{0x494FD3, {0xE8, 0xDE, 0x82, 0x00, 0x00, 0xE9, 0x89, 0xFE, 0xFF, 0xFF, 0xCC, 0xCC, 0xCC, 0x56, 0x8B, 0x44, 0x24, 0x14, 0x0B, 0xC0, 0x75, 0x28, 0x8B, 0x4C, 0x24, 0x10, 0x8B, 0x44, 0x24, 0x0C, 0x33, 0xD2}, {"AutoHotkey.exe"}},
	{0x48B063, {0xE8, 0xDE, 0x5D, 0x00, 0x00, 0xE9, 0x89, 0xFE, 0xFF, 0xFF, 0xCC, 0xCC, 0xCC, 0x56, 0x8B, 0x44, 0x24, 0x14, 0x0B, 0xC0, 0x75, 0x28, 0x8B, 0x4C, 0x24, 0x10, 0x8B, 0x44, 0x24, 0x0C, 0x33, 0xD2}, {"AutoHotkey.exe"}},
	{0x401000, {0xB8, 0x0C, 0xC1, 0x47, 0x00, 0x50, 0x64, 0xFF, 0x35, 0x00, 0x00, 0x00, 0x00, 0x64, 0x89, 0x25, 0x00, 0x00, 0x00, 0x00, 0x33, 0xC0, 0x89, 0x08, 0x50, 0x45, 0x43, 0x6F, 0x6D, 0x70, 0x61, 0x63}, {"Autoheal"}},
	{0x434460, {0x48, 0x8B, 0x48, 0x18, 0xE8, 0xC7, 0x23, 0x00, 0x00, 0x48, 0x63, 0xC0, 0x48, 0x01, 0xC6, 0x89, 0x73, 0x0C, 0x48, 0x8B, 0x45, 0xF8, 0x48, 0x8D, 0x50, 0x40, 0x48, 0x8B, 0x4D, 0xF8, 0x48, 0x8B}, {"Cheat Engine 6.2"}},
	{0x434D90, {0x48, 0x83, 0xB8, 0x40, 0x02, 0x00, 0x00, 0x00, 0x75, 0x02, 0xEB, 0x1D, 0x48, 0x8B, 0x45, 0xF8, 0x48, 0x8B, 0x88, 0x48, 0x02, 0x00, 0x00, 0x48, 0x8B, 0x55, 0xF8, 0x48, 0x8B, 0x45, 0xF8, 0x48}, {"Cheat Engine 6.3"}},
	{0x434D90, {0xF8, 0x48, 0x8B, 0x45, 0xF0, 0x48, 0x8B, 0x55, 0xF0, 0x48, 0x8B, 0x12, 0x48, 0x89, 0xC1, 0xFF, 0x92, 0x08, 0x04, 0x00, 0x00, 0x48, 0x3B, 0x45, 0xF8, 0x75, 0x1B, 0x48, 0x8B, 0x55, 0xF8, 0x48}, {"Cheat Engine 6.4"}},
	{0x697000, {0x9C, 0x60, 0xE8, 0x02, 0x00, 0x00, 0x00, 0x33, 0xC0, 0x8B, 0xC4, 0x83, 0xC0, 0x04, 0x93, 0x8B, 0xE3, 0x8B, 0x5B, 0xFC, 0x81, 0xEB, 0x07, 0x20, 0x40, 0x00, 0x87, 0xDD, 0x83, 0xBD, 0x3D, 0x29}, {"QMacro6"}},

	{0x475020, {0x60, 0xBE, 0x00, 0x50, 0x44, 0x00, 0x8D, 0xBE, 0x00, 0xC0, 0xFB, 0xFF, 0x57, 0x89, 0xE5, 0x8D, 0x9C, 0x24, 0x80, 0xC1, 0xFF, 0xFF, 0x31, 0xC0, 0x50, 0x39, 0xDC, 0x75, 0xFB, 0x46, 0x46, 0x53}, {"M.A.C.exe"}},
	{0x6105D4, {0x55, 0x8B, 0xEC, 0x83, 0xC4, 0xE8, 0x53, 0x33, 0xC0, 0x89, 0x45, 0xE8, 0x89, 0x45, 0xEC, 0xB8, 0x3C, 0xFD, 0x60, 0x00, 0xE8, 0xBB, 0x70, 0xDF, 0xFF, 0x8B, 0x1D, 0x60, 0x83, 0x61, 0x00, 0x33}, {"Cheat Engine 5.6.1"}},
	{0x5340FC, {0x55, 0x8B, 0xEC, 0x83, 0xC4, 0xF0, 0x53, 0xB8, 0x4C, 0x3B, 0x53, 0x00, 0xE8, 0x9B, 0x2C, 0xED, 0xFF, 0x8B, 0x1D, 0xD8, 0x88, 0x53, 0x00, 0xE8, 0xD4, 0xE9, 0xEC, 0xFF, 0x85, 0xC0, 0x7E, 0x10}, {"Quick Memory Editor - Unregistered"}},
	{0x512774, {0x55, 0x8B, 0xEC, 0x83, 0xC4, 0xF0, 0x53, 0xB8, 0x74, 0x21, 0x51, 0x00, 0xE8, 0x3F, 0x3E, 0xEF, 0xFF, 0x8B, 0x1D, 0x7C, 0xA2, 0x51, 0x00, 0x8B, 0x03, 0xE8, 0x82, 0x89, 0xF6, 0xFF, 0x8B, 0x0D}, {"rPE - rEdoX Packet Editor"}},
	{0x4A47C6, {0xE8, 0xDB, 0xEA, 0x00, 0x00, 0xE9, 0x16, 0xFE, 0xFF, 0xFF, 0x55, 0x8B, 0xEC, 0x83, 0xEC, 0x20, 0x8B, 0x45, 0x08, 0x56, 0x57, 0x6A, 0x08, 0x59, 0xBE, 0xD8, 0xDA, 0x6A, 0x00, 0x8D, 0x7D, 0xE0}, {"Expression Evaluator"}},
	{0x4A2FE5, {0xE8, 0xCD, 0xEA, 0x00, 0x00, 0xE9, 0x16, 0xFE, 0xFF, 0xFF, 0x55, 0x8B, 0xEC, 0x83, 0xEC, 0x20, 0x8B, 0x45, 0x08, 0x56, 0x57, 0x6A, 0x08, 0x59, 0xBE, 0x98, 0x0A, 0x6A, 0x00, 0x8D, 0x7D, 0xE0}, {"Expression Evaluator"}},
	{0x44E076, {0xE9, 0xE4, 0xFF, 0x03, 0x00, 0x68, 0x10, 0xB7, 0x49, 0x00, 0x68, 0x24, 0x44, 0x45, 0x00, 0x64, 0xA1, 0x00, 0x00, 0x00, 0x00, 0x50, 0x64, 0x89, 0x25, 0x00, 0x00, 0x00, 0x00, 0x83, 0xEC, 0x58}, {"WPE PRO"}},

	{ 0x401000, {0xA1, 0xAC, 0x82, 0x46, 0x00, 0xC1, 0xE0, 0x02, 0xA3, 0xB0, 0x82, 0x46, 0x00, 0x57, 0x51, 0x33, 0xC0, 0xBF, 0x94, 0x15, 0x47, 0x00, 0xB9, 0xD8, 0x56, 0x5C, 0x00, 0x3B, 0xCF, 0x76, 0x05, 0x2B}, {"CheatFinder V1.0 - (C)1999 by R.A.Uhalde"}},
	{ 0x512950, {0x55, 0x8B, 0xEC, 0x83, 0xC4, 0xF0, 0x53, 0xB8, 0x50, 0x23, 0x51, 0x00, 0xE8, 0x63, 0x3C, 0xEF, 0xFF, 0x8B, 0x1D, 0x7C, 0xA2, 0x51, 0x00, 0x8B, 0x03, 0xE8, 0xA6, 0x87, 0xF6, 0xFF, 0x8B, 0x0D}, {"rPE - rEdoX Packet Editor"}},
	{ 0x4065E2, {0x55, 0x8B, 0xEC, 0x6A, 0xFF, 0x68, 0xD8, 0x8E, 0x40, 0x00, 0x68, 0xEC, 0x67, 0x40, 0x00, 0x64, 0xA1, 0x00, 0x00, 0x00, 0x00, 0x50, 0x64, 0x89, 0x25, 0x00, 0x00, 0x00, 0x00, 0x83, 0xEC, 0x68}, {"Auto Typer by MurGee.com"}},
	{ 0x495000, {0x68, 0x4A, 0x89, 0x19, 0x00, 0x5B, 0x90, 0x90, 0xBF, 0x1A, 0x50, 0x49, 0x00, 0xBE, 0x98, 0x05, 0x00, 0x00, 0x31, 0x1C, 0x3E, 0x4E, 0x83, 0xEE, 0x03, 0x75, 0xF7, 0x90, 0x90, 0x90, 0xE8, 0x7D}, { "HealRan.exe" }},
	{ 0x0AA504, {0x60, 0xBE, 0x00, 0xB0, 0x91, 0x00, 0x8D, 0xBE, 0x00, 0x60, 0xAE, 0xFF, 0x57, 0x83, 0xCD, 0xFF, 0xEB, 0x10, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x8A, 0x06, 0x46, 0x88, 0x07, 0x47, 0x01, 0xDB}, { "Pingzapper" }},
	{ 0x5340FC, {0x55, 0x8B, 0xEC, 0x83, 0xC4, 0xF0, 0x53, 0xB8, 0x4C, 0x3B, 0x53, 0x00, 0xE8, 0x9B, 0x2C, 0xED, 0xFF, 0x8B, 0x1D, 0xD8, 0x88, 0x53, 0x00, 0xE8, 0xD4, 0xE9, 0xEC, 0xFF, 0x85, 0xC0, 0x7E, 0x10}, { "Quick Memory Editor - Registered" }}




};

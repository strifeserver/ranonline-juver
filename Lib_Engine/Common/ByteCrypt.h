#pragma once
#include <string>

enum EMBYTECRYPT
{
	EMBYTECRYPT_NONE		= 0,
	EMBYTECRYPT_OLD			= 1, //orig encryption
	EMBYTECRYPT_RAN2		= 2, //used by ran2 files encryption
	EMBYTECRYPT_LEVEL		= 3,
	EMBYTECRYPT_WLD			= 4,
	EMBYTECRYPT_CROWSALE	= 5,
	EMBYTECRYPT_NPCTALK		= 6,
	EMBYTECRYPT_QUEST		= 7,
	EMBYTECRYPT_ITEM		= 8,
	EMBYTECRYPT_CROW		= 9,
	EMBYTECRYPT_CLASSCONST	= 10,
	EMBYTECRYPT_PETCHARSET	= 11,
	EMBYTECRYPT_SKILL		= 12,
	EMBYTECRYPT_CHARSET		= 13,
	EMBYTECRYPT_CONTAINER	= 14, 
	EMBYTECRYPT_PIECE		= 15,
	EMBYTECRYPT_ITEMIX		= 16,
	EMBYTECRYPT_CFG			= 17,
	EMBYTECRYPT_EGP			= 18,
	EMBYTECRYPT_BIN			= 19,
	EMBYTECRYPT_TAXISTATION	= 20,
	EMBYTECRYPT_MAPSLIST	= 21,

	//ver2
	EMBYTECRYPT_LEVEL2			= 22,
	EMBYTECRYPT_WLD2			= 23,
	EMBYTECRYPT_CROWSALE2		= 24,
	EMBYTECRYPT_NPCTALK2		= 25,
	EMBYTECRYPT_QUEST2			= 26,
	EMBYTECRYPT_ITEM2			= 27,
	EMBYTECRYPT_CROW2			= 28,
	EMBYTECRYPT_CLASSCONST2		= 29,
	EMBYTECRYPT_PETCHARSET2		= 30,
	EMBYTECRYPT_SKILL2			= 31,
	EMBYTECRYPT_CHARSET2		= 32,
	EMBYTECRYPT_CONTAINER2		= 33, 
	EMBYTECRYPT_PIECE2			= 34,
	EMBYTECRYPT_ITEMIX2			= 35,
	EMBYTECRYPT_CFG2			= 36,
	EMBYTECRYPT_EGP2			= 37,
	EMBYTECRYPT_BIN2			= 38,
	EMBYTECRYPT_TAXISTATION2	= 39,
	EMBYTECRYPT_MAPSLIST2		= 40,
	EMBYTECRYPT_ACTIVITY		= 41,

	EMBYTECRYPT_SIZE			= 42,
};

namespace BYTECRYPT
{
	void byte_encode ( BYTE* pbuffer, DWORD dwSize, EMBYTECRYPT emCRYPT );
	void byte_decode ( BYTE* pbuffer, DWORD dwSize, EMBYTECRYPT emCRYPT );
	extern std::string strCrypt[EMBYTECRYPT_SIZE];
};

#ifndef GLSKILL_DEFINE_H_
#define GLSKILL_DEFINE_H_

#if _MSC_VER > 1000
#pragma once
#endif

namespace SKILL
{
	enum
	{
		MAX_SZNAME		= 32,
		MAX_SZFILE		= 68,
		MAX_SZCOMMENT	= 128,

		MAX_LEVEL		= 9,
		MAX_SPEC		= 5,
		MAX_IMPACT		= 5,

		ERROR_SPEC		 = 0xffff,
		ERROR_IMPACT	 = 0xffff,
	};

	enum EMEFFECT_TYPE
	{
		EMEFFECT_TYPE_NONE				= 0,
		EMEFFECT_TYPE_SIDE_EFFECT		= 1,
		EMEFFECT_TYPE_SPECIAL_EFFECT	= 2,
		EMEFFECT_TYPE_SPECIAL_ABILITY	= 3,
		EMEFFECT_TYPE_SIZE				= 4,
	};

	enum EMSPEC_STIGMA_TYPE
	{
		EMSPEC_STIGMA_TYPE_ATTACK	= 0,
		EMSPEC_STIGMA_TYPE_SKILL	= 1,
		EMSPEC_STIGMA_TYPE_BUFF		= 2,
		EMSPEC_STIGMA_TYPE_DEBUFF	= 3,
		EMSPEC_STIGMA_TYPE_LIMIT	= 4,
		EMSPEC_STIGMA_TYPE_SIZE		= 5,
	};

	enum EMSPEC_HALLUCINATE_TYPE
	{
		EMSPEC_HALLUCINATE_TYPE_TRANSFORM		= 0,
		EMSPEC_HALLUCINATE_TYPE_FORCE_ACTION	= 1,
		EMSPEC_HALLUCINATE_TYPE_SIZE			= 2,
	};

	enum EMSPEC_DOMINATE_TYPE
	{
		EMSPEC_DOMINATE_TYPE_SELF		= 0,
		EMSPEC_DOMINATE_TYPE_CASTER		= 1,
		EMSPEC_DOMINATE_TYPE_RANDOM		= 2,
		EMSPEC_DOMINATE_TYPE_FIXED		= 3,
		EMSPEC_DOMINATE_TYPE_SIZE		= 4,
	};

	enum EMSPEC_ASIGN_TYPE
	{
		EMSPEC_ASIGN_TYPE_BEFORE	= 0,
		EMSPEC_ASIGN_TYPE_AFTER		= 1,
		EMSPEC_ASIGN_TYPE_SIZE		= 2,
	};

	enum EMSPEC_INC_TYPE
	{
		EMSPEC_INC_TYPE_INCREASE	= 0,
		EMSPEC_INC_TYPE_DECREASE	= 1,
		EMSPEC_INC_TYPE_SIZE		= 2,
	};

	enum EMSPEC_INVISIBLE_USE_TYPE
	{
		EMSPEC_INVISIBLE_USE_TYPE_STATUS	= 0,
		EMSPEC_INVISIBLE_USE_TYPE_SIZE		= 1,
	};

	enum EMSPEC_INVISIBLE_ANI_TYPE
	{
		EMSPEC_INVISIBLE_ANI_TYPE_NONE	= 0,
		EMSPEC_INVISIBLE_ANI_TYPE_WALK	= 1,
		EMSPEC_INVISIBLE_ANI_TYPE_RUN	= 2,
		EMSPEC_INVISIBLE_ANI_TYPE_SIZE	= 3,
	};

	enum EMSPEC_SWAPPOS_DIR_TYPE
	{
		EMSPEC_SWAPPOS_DIR_TYPE_ALL		= 0,
		EMSPEC_SWAPPOS_DIR_TYPE_SELF	= 1,
		EMSPEC_SWAPPOS_DIR_TYPE_TARGET	= 2,
		EMSPEC_SWAPPOS_DIR_TYPE_SIZE	= 3,
	};

};

namespace COMMENT
{
	enum { SKILL_ICON_SIZE=256 };
	extern std::string SKILL_LEVEL[SKILL::MAX_LEVEL];
	extern std::string SKILL_EFFECT_TYPE[SKILL::EMEFFECT_TYPE_SIZE];
	extern std::string SPEC_STIGMA_TYPE[SKILL::EMSPEC_STIGMA_TYPE_SIZE];
	extern std::string SPEC_HALLUCINATE_TYPE[SKILL::EMSPEC_HALLUCINATE_TYPE_SIZE];
	extern std::string SPEC_DOMINATE_TYPE[SKILL::EMSPEC_DOMINATE_TYPE_SIZE];
	extern std::string SPEC_ASIGN_TYPE[SKILL::EMSPEC_ASIGN_TYPE_SIZE];
	extern std::string SPEC_INC_TYPE[SKILL::EMSPEC_INC_TYPE_SIZE];
	extern std::string SPEC_INVISIBLE_USE_TYPE[SKILL::EMSPEC_INVISIBLE_USE_TYPE_SIZE];
	extern std::string SPEC_INVISIBLE_ANI_TYPE[SKILL::EMSPEC_INVISIBLE_ANI_TYPE_SIZE];
	extern std::string SPEC_SWAPPOS_DIR_TYPE[SKILL::EMSPEC_SWAPPOS_DIR_TYPE_SIZE];
};

#endif // GLSKILL_DEFINE_H_